//$Id: DatabaseSchema.conf,v 1.43 2011/01/07 06:04:41 prabakaran Exp $
#Schema for MYSQL

BeginModules TopoDB-MapDB-EventDB-AlertDB-PollDB-PolicyDB-USERSTORAGEDB

BeginCreateSchema
create table ObjectTypes (
"OBJKEY" varchar( 100 ) NOT NULL ,
"CLASSNAME" varchar( 50 ) )
EndCreateSchema

BeginDropSchema
drop table ObjectTypes
EndDropSchema

BeginCreateSchema
create table USERTABLE(
"DBKEY" varchar(105) NOT NULL,
"HOST" varchar(50),
"PORT" varchar(5),
"ENGINENAME" varchar(50), 
"USERNAME" varchar(50), 
"AUTHPROTOCOL" varchar(10), 
"AUTHPASSWORD" varchar(50),
"PRIVPROTOCOL" varchar(10), 
"PRIVPASSWORD" varchar(50),
PRIMARY KEY ("DBKEY"))
EndCreateSchema

BeginDropConfigSchema
drop table USERTABLE
EndDropConfigSchema

BeginCreateSchema
create table HOSTS(
"HOSTNAMES" varchar(100) NOT NULL,
PRIMARY KEY ("HOSTNAMES"))
EndCreateSchema

BeginDropConfigSchema
drop table HOSTS
EndDropConfigSchema

BeginCreateSchema
create table PORTS(
"PORTS" varchar(100) NOT NULL,
PRIMARY KEY ("PORTS"))
EndCreateSchema

BeginDropConfigSchema
drop table PORTS
EndDropConfigSchema

BeginCreateSchema
create table ENGINES(
"ENGINENAMES" varchar(100) NOT NULL,
PRIMARY KEY ("ENGINENAMES"))
EndCreateSchema

BeginDropConfigSchema
drop table ENGINES
EndDropConfigSchema

BeginCreateSchema
create table USERS(
"USERNAMES" varchar(100) NOT NULL,
PRIMARY KEY("USERNAMES"))
EndCreateSchema

BeginDropConfigSchema
drop table USERS
EndDropConfigSchema

BeginCreateSchema
create table  TrapDisabledMO (
"Name" VARCHAR(250) NOT NULL,
"Type" varchar( 250 ),
PRIMARY KEY ("Name"))
EndCreateSchema

BeginDropSchema
drop table TrapDisabledMO
EndDropSchema

BeginCreateSchema
create table  CHILDRENSTATUS (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index CHILDRENSTATUS0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table CHILDRENSTATUS
drop index CHILDRENSTATUS0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE CHILDRENSTATUS add index CHILDRENSTATUS0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table  OBJECTSTOLINK (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
index OBJECTSTOLINK0_ndx ("KEYSTRING"))
EndCreateSchema

#BeginIndex
#ALTER TABLE OBJECTSTOLINK add index OBJECTSTOLINK0_ndx ("KEYSTRING")
#EndIndex

BeginDropSchema
drop table OBJECTSTOLINK
drop index OBJECTSTOLINK0_ndx
EndDropSchema


BeginCreateSchema
create table  ObjectSchedulerRUNNABLE (
"MOID" BIGINT NOT NULL,
"TIMEVAL" BIGINT NOT NULL,
"CLASSNAME" varchar( 150 ) NOT NULL,
PRIMARY KEY ("MOID"),
index ObjectSchedulerRUNNABLE0_ndx ("TIMEVAL"),
index ObjectSchedulerRUNNABLE1_ndx ("MOID"))
EndCreateSchema

BeginDropSchema
drop table ObjectSchedulerRUNNABLE
drop index ObjectSchedulerRUNNABLE0_ndx
drop index ObjectSchedulerRUNNABLE1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE ObjectSchedulerRUNNABLE add index ObjectSchedulerRUNNABLE0_ndx ("TIMEVAL")
#EndIndex

#BeginIndex
#ALTER TABLE ObjectSchedulerRUNNABLE add index ObjectSchedulerRUNNABLE1_ndx ("VALUESTRING")
#EndIndex

BeginCreateSchema
create table TaskAudit (
"EXECUTIONID" INTEGER,
"USERNAME" varchar(50),
"TASKNAME" varchar(50),
"DEVICELIST" text,
"DATASOURCE" varchar(50),
"EXECUTEDTIME" varchar(30))
EndCreateSchema

BeginDropSchema
drop table TaskAudit
EndDropSchema


BeginCreateSchema
create table DeviceAudit (
"ID" INTEGER,
"USERNAME" varchar(50),
"TASKNAME" varchar(50),
"SUBTASKNAME" varchar(50),
"DEVICENAME" varchar(50),
"TIMEOFSTART" varchar(30),
"TIMEOFFINISH" varchar(30),
"STATUS" varchar(15),
"ROLLBACKSTATUS" varchar(15),
"EXECUTIONID" INTEGER,
"DEVICELIST" varchar(50))
EndCreateSchema

BeginDropSchema
drop table DeviceAudit
EndDropSchema

BeginCreateSchema
create table AttributeAudit(
"ID" INTEGER,
"IDENTIFIER" varchar(100),
"TIMEOFFINISH" varchar(30),
"RETRIES" INTEGER,
"STATUS" varchar(200),
"OUTPUT" BLOB)
EndCreateSchema

BeginDropSchema
drop table AttributeAudit
EndDropSchema

BeginCreateSchema
create table ConfigTasks(
USERNAME varchar(50),
TASKNAME varchar(50),
PROTOCOL varchar(10),
VERSION varchar(10),
SUBTASKS varchar(200),
ROLLBACKNEEDED varchar(5),
ROLLBACKTYPE integer,
ROLLBACKDOCUMENT varchar(50),
MIBSTOBELOADED varchar(100),
DESCRIPTION text,
ISTEMPLATE varchar(5))
EndCreateSchema

BeginDropSchema
drop table ConfigTasks
EndDropSchema

BeginCreateSchema
create table ConfigTaskDetails(
AKEY  integer, 
USERNAME varchar(50),
TASKNAME varchar(50),
TYPE varchar(2),
PARENTKEY integer)
EndCreateSchema

BeginDropSchema
drop table ConfigTaskDetails
EndDropSchema

BeginCreateSchema
create table ConfigAttributes(
AKEY  varchar(120), 
NAME varchar(100),
VALUE varchar(250))
EndCreateSchema

BeginDropSchema
drop table ConfigAttributes
EndDropSchema

BeginCreateSchema
create table PendingTasks(
USERNAME varchar(50), 
TASKNAME varchar(50),
SUBTASKNAME varchar(50),
DEVICENAME varchar(50),
STATUS varchar(20),
PORT varchar(5),
RETRIES INTEGER,
TIMEOUT INTEGER,
AINDEX INTEGER,
EXECUTIONID INTEGER)
EndCreateSchema

BeginDropSchema
drop table PendingTasks
EndDropSchema

BeginCreateSchema
create table PendingDevices(
DKEY varchar(200), 
NAME varchar(200),
VALUE varchar(200))
EndCreateSchema

BeginDropSchema
drop table PendingDevices
EndDropSchema

BeginCreateSchema
create table DeviceList(
USERNAME varchar(50),
PROTOCOL varchar(10),
DEVICELISTNAME VARCHAR(50))
EndCreateSchema

BeginDropSchema
drop table DeviceList
EndDropSchema

BeginCreateSchema
create table DeviceListDetails(
DKEY VARCHAR(200),
DEVICENAME VARCHAR(50),
PORT varchar(5),
RETRIES INTEGER,
TIMEOUT INTEGER,
DEVICESEQUENCE INTEGER)
EndCreateSchema

BeginDropSchema
drop table DeviceListDetails
EndDropSchema


BeginCreateSchema
create table DeviceUserProps(
DKEY varchar(200), 
NAME varchar(200),
VALUE varchar(200))
EndCreateSchema

BeginDropSchema
drop table DeviceUserProps
EndDropSchema

BeginCreateSchema
create table TaskToDeviceListMap(
USERNAME VARCHAR(50),
TASKNAME VARCHAR(50),
DEVICELISTNAMES VARCHAR(200))
EndCreateSchema

BeginDropSchema
drop table TaskToDeviceListMap
EndDropSchema

BeginCreateSchema
create table PollingObjects(
NAME varchar(50) NOT NULL,
STATUS varchar(10),
PRIMARY KEY("NAME"))
EndCreateSchema

BeginCreateSchema
create table ConfigProvider (
PROTOCOL varchar(100) NOT NULL,
CONFIGPROVIDER varchar(100) NOT NULL )
EndCreateSchema

BeginDropSchema
drop table ConfigProvider
EndDropSchema

BeginDropSchema
drop table PollingObjects
EndDropSchema

BeginCreateSchema
create table PollingAttributes(
"NAME" varchar(50),
"TYPE" varchar(10),
"PROPERTY" varchar(20),
"POLLCONDITION" varchar(50),
"VALUE" varchar(100))
EndCreateSchema

BeginDropSchema
drop table PollingAttributes
EndDropSchema

BeginCreateSchema
create table Providers(
"PROVIDERNAME" varchar(15) NOT NULL,
"VALUE" varchar(100),
PRIMARY KEY("PROVIDERNAME"))
EndCreateSchema

BeginDropSchema
drop table Providers
EndDropSchema

BeginCreateSchema
create table StatsTables(
TableName varchar(100) NOT NULL,
CreateSchema varchar(255),
PRIMARY KEY("TableName"))
EndCreateSchema

BeginDropSchema
drop table StatsTables
EndDropSchema


BeginCreateSchema
create table ThresholdObjects(
"NAME" varchar(20) NOT NULL,
"KIND" varchar(15),
"SEVERITY" INTEGER,
"TRIGGERSEVERITY" INTEGER,
"RESETSEVERITY" INTEGER,
"THRESHOLDTYPE" varchar(5),
"CATEGORY" varchar(20),
"THRESHOLDVALUE" BIGINT,
"REARMVALUE" BIGINT,
"MMESSAGE" varchar(100),
"CLEARMESSAGE" varchar(100),
"SENDCLEAR" varchar(10),
"ALLOWED" varchar(50),
"DISALLOWED" varchar(50),
"OID" varchar(50),
"OIDTYPE" varchar(10),
PRIMARY KEY("NAME"))
EndCreateSchema

BeginDropSchema
drop table ThresholdObjects
EndDropSchema

BeginCreateSchema
create table CustomView(
"MODULE" varchar(25) NOT NULL,
"VIEWID" varchar(150) NOT NULL,
"USERNAME" varchar(50) NOT NULL,
"VIEWNAME" varchar(100) NOT NULL,
"PARENT" varchar(50) NOT NULL,
"CONSTRAIN" varchar(200),
"SQLSTRING" text,
PRIMARY KEY ("VIEWID","USERNAME" ),
index CustomView0_ndx ("MODULE","USERNAME","VIEWNAME","PARENT"),
index CustomView1_ndx ("VIEWID","USERNAME" ))
EndCreateSchema

#BeginIndex
#ALTER TABLE CustomView add index CustomView0_ndx ("MODULE","USERNAME","VIEWNAME","PARENT")
#ALTER TABLE CustomView add index CustomView1_ndx ("VIEWID","USERNAME")
#EndIndex

BeginDropConfigSchema
drop table CustomView
drop index CustomView0_ndx
drop index CustomView1_ndx
EndDropConfigSchema

BeginCreateSchema
create table CustomViewProps(
"MODULE" varchar(25) NOT NULL,
"VIEWID" varchar(150) NOT NULL,
"USERNAME" varchar(50) NOT NULL,
"CRITERIAID" INTEGER NOT NULL,
"PROPKEY" varchar(100),
"OPERATOR" varchar(15),
"PROPVALUE1" varchar(100),
"PROPVALUE2" varchar(100),
PRIMARY KEY ("VIEWID","USERNAME","CRITERIAID"),
index CustomViewProps0_ndx ("VIEWID","USERNAME" ))
EndCreateSchema

#BeginIndex
#ALTER TABLE CustomViewProps add index CustomViewProps0_ndx ("VIEWID","USERNAME")
#EndIndex

BeginDropConfigSchema
drop table CustomViewProps
drop index CustomViewProps0_ndx
EndDropConfigSchema

BeginCreateSchema
create table CustomViewColumns(
"MODULE" varchar(25) NOT NULL,
"VIEWID" varchar(150) NOT NULL,
"USERNAME" varchar(50) NOT NULL,
"DISPLAYNAME" varchar(50),
"COLUMNNAME" varchar(50) NOT NULL,
"WIDTH" INTEGER,
"COLUMNINDEX" INTEGER,
PRIMARY KEY ("VIEWID","USERNAME","COLUMNNAME"),
index CustomViewColumns0_ndx ("VIEWID","USERNAME" ))
EndCreateSchema

#BeginIndex
#ALTER TABLE CustomViewColumns add index CustomViewColumns0_ndx ("VIEWID", "USERNAME")
#EndIndex

BeginDropConfigSchema
drop table CustomViewColumns
drop index CustomViewColumns0_ndx
EndDropConfigSchema

BeginCreateSchema
create table PanelTree (
"NODEID" VARCHAR(150) NOT NULL,
"NODETYPE" VARCHAR(100) NOT NULL,
"USERNAME" VARCHAR(50) NOT NULL,
"PARENT" VARCHAR(100),
"PREVIOUSNODE" VARCHAR(100), 
"MODULENAME" varchar(30),
"PANELPROPS" VARCHAR(1000),
PRIMARY KEY ("NODEID","USERNAME"),
index PREVIOUSNODE0_ndx ("PREVIOUSNODE"))
EndCreateSchema

BeginDropConfigSchema
drop table PanelTree 
drop index PREVIOUSNODE0_ndx
EndDropConfigSchema


BeginCreateSchema
create table Reports(
"CLASSNAME" varchar(100) NOT NULL,
"DAILY" varchar(10),
"WEEKLY" varchar(10),
"HOUR" varchar(100),
"MONTHDAYS" varchar(50),
"WEEKDAYS" varchar(50),
"TIMEVAL" BIGINT,
PRIMARY KEY("CLASSNAME"))
EndCreateSchema

BeginDropSchema
drop table Reports
EndDropSchema

BeginCreateSchema
create table DataCollectionAttributes(
"NAME" varchar(50),
"PROPKEY" varchar(50),
"PROPNAME" varchar(30),
"PROPVAL" varchar(200))
EndCreateSchema

BeginDropSchema
drop table DataCollectionAttributes
EndDropSchema

BeginCreateSchema
create table UserPasswordTable(
"USERNAME" varchar(50) NOT NULL,
"PASSWORD" varchar(50),
"OWNERNAME" varchar(50) NOT NULL,
PRIMARY KEY ("USERNAME","OWNERNAME"),
index UserPasswordTable0_ndx ("USERNAME"))
EndCreateSchema

BeginDropSchema
drop table UserPasswordTable
drop index UserPasswordTable0_ndx
EndDropSchema

BeginCreateSchema
create table UserGroupTable(
"USERNAME" varchar(50) NOT NULL,
"GROUPNAME" varchar(100) NOT NULL,
"OWNERNAME" varchar(50) NOT NULL,
PRIMARY KEY ("USERNAME","GROUPNAME","OWNERNAME"),
index UserGroupTable0_ndx ("USERNAME","GROUPNAME" ),
index UserGroupTable1_ndx ("USERNAME"),
index UserGroupTable2_ndx ("GROUPNAME"))
EndCreateSchema

BeginDropSchema
drop table UserGroupTable
drop index UserGroupTable0_ndx
drop index UserGroupTable1_ndx
drop index UserGroupTable2_ndx
EndDropSchema

BeginCreateSchema
create table ViewPropertiesTable(
"VIEWNAME" varchar(50) NOT NULL,
"PROPERTYNAME" varchar(50) NOT NULL,
"PROPERTYVALUE" varchar(50),
PRIMARY KEY ("VIEWNAME","PROPERTYNAME"),
index ViewPropertiesTable0_ndx ("VIEWNAME"))
EndCreateSchema

BeginDropSchema
drop table ViewPropertiesTable
drop index ViewPropertiesTable0_ndx
EndDropSchema

BeginCreateSchema
create table ViewsToGroupTable(
"VIEWNAME" varchar(50) NOT NULL,
"GROUPNAME" varchar(50) NOT NULL,
"OWNERNAME" varchar(50) NOT NULL,
PRIMARY KEY ("VIEWNAME","GROUPNAME","OWNERNAME"),
index ViewsToGroupTable0_ndx ("VIEWNAME","GROUPNAME"),
index ViewsToGroupTable1_ndx ("GROUPNAME"))
EndCreateSchema

BeginDropSchema
drop table ViewsToGroupTable
drop index ViewsToGroupTable0_ndx
drop index ViewsToGroupTable1_ndx
EndDropSchema

BeginCreateSchema
create table ViewToOperationsTable(
"VIEWNAME" varchar(50) NOT NULL,
"OPERATIONSNAME" varchar(50) NOT NULL,
"OPERATIONSTYPE" INTEGER,
PRIMARY KEY ("VIEWNAME","OPERATIONSNAME"))
EndCreateSchema

BeginDropSchema
drop table ViewToOperationsTable
EndDropSchema

BeginCreateSchema
create table OperationsTreeTable(
"PARENTOPERATION" varchar(50) NOT NULL,
"CHILDOPERATION" varchar(50) NOT NULL,
"LEAFNODE" INTEGER,
PRIMARY KEY ("PARENTOPERATION","CHILDOPERATION"),
index OperationsTreeTable0_ndx ("PARENTOPERATION"),
index OperationsTreeTable1_ndx ("CHILDOPERATION"))
EndCreateSchema

BeginDropSchema
drop table OperationsTreeTable
drop index OperationsTreeTable0_ndx
drop index OperationsTreeTable1_ndx
EndDropSchema

BeginCreateSchema
create table NamedViewToAuthorizedViewTable(
"NAMEDVIEWNAME" varchar(50) NOT NULL,
"AUTHORIZEDVIEWNAME" varchar(50) NOT NULL)
EndCreateSchema

BeginDropSchema
drop table NamedViewToAuthorizedViewTable
EndDropSchema
        
#by senthil
BeginCreateSchema
create table NotificationLog(
"NOTIINDEX" INTEGER NOT NULL,
"LOGTIME" BIGINT,
"NOVARBINDS" INTEGER,
"NOTIOID" varchar(100),
PRIMARY KEY ("NOTIINDEX"),
index NotificationLog0_ndx ("NOTIINDEX"))
EndCreateSchema

BeginDropSchema
drop table NotificationLog
drop index NotificationLog0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE NotificationLog add index NotificationLog0_ndx ("NOTIINDEX")
#EndIndex

BeginCreateSchema
create table VarBindLog(
"NOTIINDEX" INTEGER NOT NULL,
"VARINDEX" INTEGER NOT NULL,
"VARTYPE" INTEGER,
"VARVALUE" VARCHAR(200),
PRIMARY KEY ("NOTIINDEX","VARINDEX"),
index VarBindLog0_ndx ("NOTIINDEX"),
index VarBindLog1_ndx ("VARINDEX"))
EndCreateSchema

BeginDropSchema
drop table VarBindLog
drop index VarBindLog0_ndx
drop index VarBindLog1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE VarBindLog add index VarBindLog0_ndx ("NOTIINDEX")
#ALTER TABLE VarBindLog add index VarBindLog1_ndx ("VARINDEX")
#EndIndex


BeginCreateSchema
create table PolicyObject(
"NAME" varchar(100) NOT NULL,
"GROUPNAME" varchar(100),
"STATUS" INTEGER,
"PERIOD" INTEGER,
"POLICYOBJECTCUSTOMIZER" varchar(50),
"HELPURL" varchar(100),
 PRIMARY KEY("NAME"),
index PolicyObject0_ndx ("NAME"))
EndCreateSchema

BeginDropSchema
drop table PolicyObject
EndDropSchema

#BeginIndex
#ALTER TABLE PolicyObject add index PolicyObject0_ndx ("NAME")
#EndIndex

BeginCreateSchema
create table PolicyActionCondition(
"NAME" varchar(100) NOT NULL,
"OBJKEY" varchar(100) NOT NULL,
"POLICYACTION" varchar(100),
"POLICYCONDITION" varchar(100),
PRIMARY KEY("NAME" , "OBJKEY"),
index PolicyActionCondition0_ndx ("NAME"))
EndCreateSchema

BeginDropSchema
drop table PolicyActionCondition
EndDropSchema

#BeginIndex
#ALTER TABLE PolicyActionCondition add index PolicyActionCondition0_ndx ("NAME")
#EndIndex

BeginCreateSchema
create table POLICYUSERPROPS(
"NAME" varchar( 100 ) NOT NULL, 
"OWNERNAME" varchar(25) NOT NULL,
"PROPNAME" varchar( 150 ) NOT NULL,
"PROPVAL" varchar( 150 ),
index POLICYUSERPROPS0_ndx ("NAME"),
index POLICYUSERPROPS1_ndx ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table POLICYUSERPROPS
drop index POLICYUSERPROPS0_ndx
drop index POLICYUSERPROPS1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE POLICYUSERPROPS add index POLICYUSERPROPS0_ndx ("NAME")
#ALTER TABLE POLICYUSERPROPS add index POLICYUSERPROPS1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table  DBPOLICY (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index dbpolicy0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table DBPOLICY
drop index dbpolicy0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE DBPOLICY add index dbpolicy0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table  PolicyScheduleTime (
"TIMEKEY" varchar( 250 ) NOT NULL,
"NAME" VARCHAR(250) NOT NULL )
EndCreateSchema

BeginDropSchema
drop table PolicyScheduleTime
EndDropSchema

BeginCreateSchema
create table AlertPolicyObject ( 
"NAME" varchar(80) NOT NULL,
"ACTIONNAME" varchar(80) NOT NULL,
"PROPKEY" varchar(80) NOT NULL,
"PROPVALUE" varchar(100),
PRIMARY KEY("NAME" , "ACTIONNAME" , "PROPKEY") )
EndCreateSchema

BeginDropSchema
drop table AlertPolicyObject
EndDropSchema

BeginCreateSchema
create table ENGINETABLE( 
"DBKEY" varchar(57) NOT NULL,
"HOST" varchar(50),
"PORT" varchar(5),
"ENGINENAME" varchar(50),
"ENGINEID" varchar(64),
"ENGINETIME" varchar(10),
"ENGINEBOOTS" varchar(10),
PRIMARY KEY ("DBKEY"))
EndCreateSchema

BeginDropSchema
drop table ENGINETABLE
EndDropSchema

BeginCreateSchema
create table USMTABLE( 
"DBKEY" varchar(116) NOT NULL,
"HOST" varchar(50),
"PORT" varchar(5), 
"ENGINENAME" varchar(50),
"ENGINEID" varchar(64), 
"USERNAME" varchar(50), 
"SECURITYLEVEL" varchar(5),
"SECURITYNAME" varchar(50), 
"AUTHPROTOCOL" varchar(10), 
"AUTHPASSWORD" varchar(255),
"AUTHKEY" varchar(255),
"PRIVPROTOCOL" varchar(10), 
"PRIVPASSWORD" varchar(255),
"PRIVKEY" varchar(255),
"ENGINETIME" varchar(10), 
"ENGINEBOOTS" varchar(10),
"LATESTRCVDENGTIME" varchar(10),
"USMLOCALTIME" varchar(30),
PRIMARY KEY ("DBKEY"))
EndCreateSchema

BeginDropSchema
drop table USMTABLE
EndDropSchema

BeginCreateSchema
create table MonitorNmsParameter(
"PARAMETERNAME" varchar(200) NOT NULL,
"CURRENTTIME" BIGINT NOT NULL,
"PARAMETERVALUE" BIGINT,
"TINTERVAL"  BIGINT,
PRIMARY KEY("PARAMETERNAME","CURRENTTIME"),
index MonitorNmsParameter0_ndx("PARAMETERNAME"),
index MonitorNmsParameter1_ndx("CURRENTTIME"))
EndCreateSchema

BeginDropSchema
drop table MonitorNmsParameter
drop index MonitorNmsParameter0_ndx
drop index MonitorNmsParameter1_ndx
EndDropSchema




BeginCreateSchema
create table  OperationsTable ("USERNAME" VARCHAR(50) NOT NULL,
"OPERATIONID" BIGINT NOT NULL,
"TEMPLATENAME" VARCHAR(50),
"SCHEDULEDTIME" VARCHAR(50),
"STAGE" VARCHAR(50),
"STATUS" VARCHAR(50),
PRIMARY KEY ("USERNAME",
"OPERATIONID"))
EndCreateSchema

BeginDropSchema
drop table OperationsTable
EndDropSchema


BeginCreateSchema
create table BEFailOver (
"HOSTADDRESS" VARCHAR(50) NOT NULL,
"NMSBEPORT" INTEGER NOT NULL,
"RMIREGISTRYPORT" INTEGER,
"LASTCOUNT" BIGINT,
"SERVERROLE" VARCHAR(10),
"STANDBYSERVERNAME" VARCHAR(50),
index BEFailOver0_ndx ("HOSTADDRESS"),
index BEFailOver1_ndx ("NMSBEPORT"))
EndCreateSchema

BeginDropSchema
drop table BEFailOver
EndDropSchema


BeginCreateSchema
create table PollIDToKeyMap(
"NAME" VARCHAR(50),
"ID" BIGINT,
"AGENT" VARCHAR(50),
"OID" VARCHAR(200),
"STATSDATATABLENAME" VARCHAR(100),
"OWNERNAME" VARCHAR(25))
EndCreateSchema

BeginDropSchema
drop table PollIDToKeyMap
EndDropSchema


BeginCreateSchema
create table ProvisioningVariantProps (
"VARIANTID"  varchar(50)  NOT NULL,
"PROPNAME"  varchar(50),
"PROPVAL"  varchar(50))
EndCreateSchema

BeginDropSchema
drop table ProvisioningVariantProps
EndDropSchema


BeginCreateSchema
create table ProvisioningVariant (
"DESCRIPTION"  varchar(50),
"VARIANTID"  varchar(50)  NOT NULL,
PRIMARY KEY ("VARIANTID"),
index ProvisioningVariant0_ndx ("VARIANTID"))
EndCreateSchema

BeginDropSchema
drop table ProvisioningVariant
EndDropSchema


BeginCreateSchema
create table UserConfTable(
"USERNAME" varchar(50) NOT NULL,
"OWNERNAME" varchar(50) NOT NULL,
"STATUS" varchar(20) NOT NULL,
"PASSWORDEXPIRYTIME" BIGINT,
"USEREXPIRYTIME" BIGINT,
"PASSWORDAGE" INTEGER,
"USERAGE" INTEGER,
"DESCRIPTIVENAME" varchar(100) NOT NULL,
PRIMARY KEY ("USERNAME",
"OWNERNAME"),
index UserConfTable0_ndx("STATUS"))
EndCreateSchema

BeginDropSchema
drop table UserConfTable
EndDropSchema


BeginCreateSchema
create table NetworkInventory (
"LASTMODIFIEDTIME" varchar(25),
"MODEL"  varchar(50),
"TYPE"  varchar(50),
"CONTACT"  varchar(50),
"CLASSNAME"  varchar(50),
"MANAGEDOBJECTNAME"  varchar(50),
"OPERATIONALSTATUS"  varchar(50),
"NAME"  varchar(50)  NOT NULL,
"LOCATION"  varchar(50),
"ADMINSTATUS"  varchar(50),
"VENDOR"  varchar(50),
"DESCRIPTION"  varchar(50),
PRIMARY KEY ("NAME"),
index NetworkInventory0_ndx ("NAME"))
EndCreateSchema

BeginDropSchema
drop table NetworkInventory
EndDropSchema


BeginCreateSchema
create table AuthAudit(
"AUTHAUDITID" INTEGER,
"USERNAME" varchar(30),
"OPERATION" varchar(100),
"AUDITTIME" varchar(30),
"STATUS" varchar(10),
"CATEGORY" varchar(25),
"AUDITEDOBJ"  varchar(100),
index AuthAudit0_ndx("AUTHAUDITID"))
EndCreateSchema

BeginDropSchema
drop table AuthAudit
EndDropSchema


BeginCreateSchema
create table REPORTS_HOURLY(
   "POLLID" BIGINT,
"INSTANCE" varchar(100),
"TTIME" BIGINT,
"VAL" BIGINT,
"MINVALUE" BIGINT,
"`MAXVALUE`" BIGINT,
"TINTERVAL"  BIGINT,
index REPORTS_HOURLY0_ndx("POLLID"),
index REPORTS_HOURLY2_ndx("TTIME"))
EndCreateSchema

BeginDropSchema
drop table REPORTS_HOURLY
EndDropSchema


BeginCreateSchema
create table REPORTS_DAILY(
   "POLLID" BIGINT,
"INSTANCE" varchar(100),
"TTIME" BIGINT,
"VAL" BIGINT,
"MINVALUE" BIGINT,
"`MAXVALUE`" BIGINT,
"TINTERVAL"  BIGINT,
index REPORTS_DAILY0_ndx("POLLID"),
index REPORTS_DAILY2_ndx("TTIME"))
EndCreateSchema

BeginDropSchema
drop table REPORTS_DAILY
EndDropSchema


BeginCreateSchema
create table UIDataIdVsPRId(
   "UIDATAID" BIGINT NOT NULL,
"PRID" BIGINT NOT NULL,
PRIMARY KEY("UIDATAID",
"PRID"),
index UIDataIdVsPRId0_Indx("PRID"))
EndCreateSchema

BeginDropSchema
drop table UIDataIdVsPRId
EndDropSchema


BeginCreateSchema
create table ProvisionResult(
   "PRID" BIGINT NOT NULL,
"TYPE" varchar(50),
"TEMPLATENAME" varchar(100),
"SCHEDULEDTIME" BIGINT,
"STARTTIME" BIGINT,
"DURATION" INTEGER,
"USERNAME" varchar(50),
"STATUS" varchar(50),
"DETAILS" varchar(250),
"PROGRESS" INTEGER,
PRIMARY KEY("PRID"),
index ProvisionResult0_Indx("PRID"))
EndCreateSchema

BeginDropSchema
drop table ProvisionResult
EndDropSchema


BeginCreateSchema
create table UserInputData(
   "UIDATAID" BIGINT NOT NULL,
"TEMPLATENAME" varchar(100) NOT NULL,
"USERINPUTKEY" varchar(80) NOT NULL,
"USERINPUTVALUE" varchar(250),
PRIMARY KEY("UIDATAID",
"TEMPLATENAME",
"USERINPUTKEY"),
index UserInputData0_Indx("UIDATAID"),
index UserInputData1_Indx("TEMPLATENAME"))
EndCreateSchema

BeginDropSchema
drop table UserInputData
EndDropSchema


BeginCreateSchema
create table StageIdVsConfigId(
   "PRID" BIGINT NOT NULL,
"STAGEID" varchar(100) NOT NULL,
"CONFIGID" INTEGER NOT NULL,
PRIMARY KEY("PRID",
"STAGEID",
"CONFIGID"),
index StageIdVsConfigId0_Indx("PRID"),
index StageIdVsConfigId1_Indx("STAGEID"))
EndCreateSchema

BeginDropSchema
drop table StageIdVsConfigId
EndDropSchema

#BeginIndex
#alter table POLLUSERPROPS drop foreign key FK5DBA4B86D7D7502
#EndIndex

#BeginIndex
#alter table POLLUSERPROPS add CONSTRAINT `FK5DBA4B86D7D7502` FOREIGN KEY (`ID`) REFERENCES `PolledData` (`ID`) ON DELETE CASCADE
#EndIndex

#BeginIndex
#alter table EVENTUSERPROPS drop foreign key FK54B8432B87584B8F
#EndIndex

#BeginIndex
#alter table EVENTUSERPROPS add CONSTRAINT `FK54B8432B87584B8F` FOREIGN KEY (`ID`) REFERENCES `Event` (`ID`) ON DELETE CASCADE
#EndIndex

#BeginIndex
#alter table TOPOUSERPROPS drop foreign key FK483583EBFBE5F355
#EndIndex

#BeginIndex
#alter table TOPOUSERPROPS add CONSTRAINT `FK483583EBFBE5F355` FOREIGN KEY (`MOID`) REFERENCES `ManagedObject` (`MOID`) ON DELETE CASCADE
#EndIndex

#BeginIndex
#alter table ALERTUSERPROPS drop foreign key FKCFB5A6A93E26DDB
#EndIndex

#BeginIndex
#alter table ALERTUSERPROPS add CONSTRAINT `FKCFB5A6A93E26DDB` FOREIGN KEY (`ENTITY`) REFERENCES `Alert` (`ENTITY`) ON DELETE CASCADE
#EndIndex

BeginIndex
alter table MAPUSERPROPS drop foreign key FK30B70EA9AF738122
alter table MAPUSERPROPS add CONSTRAINT `FK30B70EA9AF738122` FOREIGN KEY (`NAME`, `MAPNAME`) REFERENCES `MapSymbol` (`NAME`, `MAPNAME`) ON DELETE CASCADE
EndIndex

BeginIndex
CREATE INDEX PARENTOBJ_ndx ON PolledData ("PARENTOBJ")
EndIndex


BeginCreateSchema
create table WIDGETLEVEL(
"ASSOCIATIONID" bigint PRIMARY KEY NOT NULL,
"COLUMNID" integer,
"WIDGETLEVEL" integer)
EndCreateSchema

BeginIndex
CREATE INDEX WidgetLevel0_Indx on WIDGETLEVEL("ASSOCIATIONID")
EndIndex

BeginDropSchema
drop table WIDGETLEVEL
EndDropSchema


BeginCreateSchema
create table WIDGETASSOCIATION(
"ASSOCIATIONID" bigint PRIMARY KEY NOT NULL,
"DASHBOARDID" bigint NOT NULL,
"WIDGETID" bigint NOT NULL,
"NAME" varchar(100) NOT NULL,
"CRITERIA" varchar(250) NULL,
"DESCRIPTION" varchar(100))
EndCreateSchema

BeginIndex
CREATE INDEX WidgetAssociation0_Indx on WIDGETASSOCIATION("ASSOCIATIONID")
EndIndex

BeginDropSchema
drop table WIDGETASSOCIATION
EndDropSchema


BeginCreateSchema
create table WIDGET(
"ID" bigint PRIMARY KEY NOT NULL,
"NAME" varchar(100),
"DESCRIPTION" varchar(150),
"DATASOURCEID" bigint NOT NULL,
"CRITERIAID" bigint)
EndCreateSchema

BeginIndex
CREATE INDEX Widget0_Indx on WIDGET("ID")
CREATE INDEX Widget1_Indx on WIDGET("DATASOURCEID")
CREATE INDEX Widget2_Indx on WIDGET("CRITERIAID")
EndIndex

BeginDropSchema
drop table WIDGET
EndDropSchema


BeginCreateSchema
create table WIDGETCRITERIA(
"CRITERIAID" bigint PRIMARY KEY NOT NULL,
"CRITERIA" varchar(250))
EndCreateSchema

BeginIndex
CREATE INDEX WidgetCriteria0_Indx on WIDGETCRITERIA("CRITERIAID")
EndIndex

BeginDropSchema
drop table WIDGETCRITERIA
EndDropSchema


BeginCreateSchema
create table WIDGETDATASOURCE(
"DATASOURCEID" bigint PRIMARY KEY NOT NULL,
"NAME" varchar(100),
"CLASSNAME" varchar(100) NOT NULL,
"DESCRIPTION" varchar(100))
EndCreateSchema

BeginIndex
CREATE INDEX WidgetDataSource0_Indx on WIDGETDATASOURCE("DATASOURCEID")
EndIndex

BeginDropSchema
drop table WIDGETDATASOURCE
EndDropSchema


BeginCreateSchema
create table DASHBOARDCOLUMNS(
"ID" bigint,
"COLUMNID" integer,
"COLUMNWIDTH" integer,
PRIMARY KEY("ID","COLUMNID"))
EndCreateSchema

BeginIndex
CREATE INDEX DashboardColumns0_Indx on DASHBOARDCOLUMNS("ID")
CREATE INDEX DashboardColumns1_Indx on DASHBOARDCOLUMNS("COLUMNID")
EndIndex

BeginDropSchema
drop table DASHBOARDCOLUMNS
EndDropSchema

BeginIndex
alter table DASHBOARDPROPS add constraint DASHBOARDPROPS_ID foreign key (ID) references DASHBOARD(ID) ON DELETE CASCADE
EndIndex


BeginCreateSchema
create table DASHBOARDPROPS(
"ID" bigint PRIMARY KEY NOT NULL,
"PROPERTIES" varchar(250))
EndCreateSchema

BeginIndex
CREATE INDEX DashboardProps0_Indx on DASHBOARDPROPS("ID")
EndIndex

BeginDropSchema
drop table DASHBOARDPROPS
EndDropSchema



BeginCreateSchema
create table CCTVVIEWS(
"ID" bigint,
"DASHBOARDID" bigint,
PRIMARY KEY("ID","DASHBOARDID"))
EndCreateSchema

BeginIndex
CREATE INDEX CctvViews0_Indx on CCTVVIEWS("ID")
CREATE INDEX CctvViews1_Indx on CCTVVIEWS("DASHBOARDID")
EndIndex

BeginDropSchema
drop table CCTVVIEWS
EndDropSchema


BeginCreateSchema
create table CCTV(
"ID" bigint PRIMARY KEY NOT NULL,
"USERNAME" varchar(100) NOT NULL,
"NAME" varchar(100) NOT NULL,
"TIMEINTERVAL" bigint,
"DESCRIPTION" varchar(150),
UNIQUE("USERNAME","NAME"))
EndCreateSchema
BeginDropSchema
drop table CCTV
EndDropSchema


BeginCreateSchema
create table DASHBOARD(
"ID" bigint PRIMARY KEY NOT NULL,
"USERNAME" varchar(100) NOT NULL,
"NAME" varchar(100) NOT NULL,
"DESCRIPTION" varchar(150),
UNIQUE("USERNAME","NAME"))
EndCreateSchema

BeginIndex
CREATE INDEX Dashboard0_Indx on DASHBOARD("ID")
EndIndex

BeginDropSchema
drop table DASHBOARD
EndDropSchema


BeginCreateSchema
create table FAULTREPORTS_HOURLY(
"TTIME" BIGINT,
"CATEGORY" varchar(50),
"SEVERITY" INTEGER,
"SEVERITYCOUNT" INTEGER,
"HOURS" INTEGER,
"SOURCE" varchar(50),
index FAULTREPORTS_HOURLY0_ndx("TTIME"))
EndCreateSchema
BeginDropSchema
drop table FAULTREPORTS_HOURLY
EndDropSchema


BeginCreateSchema
create table FAULTREPORTS_DAILY(
"TTIME" BIGINT,
"CATEGORY" varchar(50),
"SEVERITY" INTEGER,
"SEVERITYCOUNT" INTEGER,
"DAYS" INTEGER,
"MONTH" INTEGER,
"YEAR" INTEGER,
"SOURCE" varchar(50),
index FAULTREPORTS_DAILY0_ndx("TTIME"))
EndCreateSchema
BeginDropSchema
drop table FAULTREPORTS_DAILY
EndDropSchema


BeginCreateSchema
create table SendEmailEventAction(
"ID" INTEGER NOT NULL,
"EMAILPROPS" VARCHAR(1000) NOT NULL)
EndCreateSchema
BeginDropSchema
drop table SendEmailEventAction
EndDropSchema


BeginCreateSchema
create table SendEmailAlertAction(
"ID" INTEGER NOT NULL,
"EMAILPROPS" VARCHAR(1000) NOT NULL)
EndCreateSchema
BeginDropSchema
drop table SendEmailAlertAction
EndDropSchema


BeginCreateSchema
create table FilterCommandEventAction(
"ID" INTEGER NOT NULL,
"COMMANDPROPS" VARCHAR(1000) NOT NULL)
EndCreateSchema
BeginDropSchema
drop table FilterCommandEventAction
EndDropSchema


BeginCreateSchema
create table FilterCommandAlertAction(
"ID" INTEGER NOT NULL,
"COMMANDPROPS" VARCHAR(1000) NOT NULL)
EndCreateSchema
BeginDropSchema
drop table FilterCommandAlertAction
EndDropSchema


BeginIndex
alter table CCTVVIEWS add constraint CCTV_ID foreign key (ID) references CCTV(ID) ON DELETE CASCADE
alter table CCTVVIEWS add constraint DASHBOARD_ID foreign key (DASHBOARDID) references DASHBOARD(ID) ON DELETE CASCADE
EndIndex


BeginIndex
alter table DASHBOARDCOLUMNS add constraint DASHBOARDCOLUMN_ID foreign key (ID) references DASHBOARD(ID) ON DELETE CASCADE
EndIndex


BeginIndex
alter table WIDGETASSOCIATION add constraint WIDGETASSOCIATION_DASHBOARDID foreign key (DASHBOARDID) references DASHBOARD(ID) ON DELETE CASCADE
alter table WIDGETASSOCIATION add constraint WIDGETASSOCIATION_WIDGETID foreign key (WIDGETID) references WIDGET(ID)ON DELETE CASCADE
EndIndex


BeginIndex
alter table WIDGET add constraint WIDGET_DATASOURCEID foreign key (DATASOURCEID) references WIDGETDATASOURCE(DATASOURCEID)ON DELETE CASCADE
alter table WIDGET add constraint WIDGET_CRITERIAID foreign key (CRITERIAID) references WIDGETCRITERIA(CRITERIAID)ON DELETE CASCADE
EndIndex


BeginIndex
alter table WIDGETLEVEL add constraint WIDGETLEVEL_ID foreign key (ASSOCIATIONID) references WIDGETASSOCIATION(ASSOCIATIONID) ON DELETE CASCADE
EndIndex


BeginCreateSchema
create table STATSAGGREGATIONHOURLY(
"POLLID" BIGINT NOT NULL,
"INSTANCE" varchar(100) NOT NULL,
"TTIME" BIGINT NOT NULL,
"VAL" Numeric(19,4),
"MMINVALUE" Numeric(19,4),
"MMAXVALUE" Numeric(19,4),
"TINTERVAL"  BIGINT,
PRIMARY KEY ("POLLID","INSTANCE","TTIME"))
EndCreateSchema

BeginIndex
CREATE INDEX STATSAGGREGATIONHOURLY0_ndx ON STATSAGGREGATIONHOURLY("POLLID")
CREATE INDEX STATSAGGREGATIONHOURLY2_ndx ON STATSAGGREGATIONHOURLY("TTIME")
EndIndex

BeginDropSchema
drop table STATSAGGREGATIONHOURLY
EndDropSchema


BeginCreateSchema
create table STATSAGGREGATIONDAILY(
"POLLID" BIGINT NOT NULL,
"INSTANCE" varchar(100) NOT NULL,
"TTIME" BIGINT NOT NULL,
"VAL" Numeric(19,4),
"MMINVALUE" Numeric(19,4),
"MMAXVALUE" Numeric(19,4),
"TINTERVAL"  BIGINT,
PRIMARY KEY ("POLLID","INSTANCE","TTIME"))
EndCreateSchema

BeginIndex
CREATE INDEX STATSAGGREGATIONDAILY0_ndx ON STATSAGGREGATIONDAILY("POLLID")
CREATE INDEX STATSAGGREGATIONDAILY2_ndx ON STATSAGGREGATIONDAILY("TTIME")
EndIndex

BeginDropSchema
drop table STATSAGGREGATIONDAILY
EndDropSchema


BeginCreateSchema
create table smsprofiles(
"profilename" varchar(20) not null,
"recipients" varchar(250) not null)
EndCreateSchema
BeginDropSchema
drop table smsprofiles
EndDropSchema


BeginCreateSchema
create table smsserver_out(
"id" int(10) unsigned NOT NULL AUTO_INCREMENT,
"type" varchar(1) NOT NULL DEFAULT 'O',
"recipient" varchar(16) NOT NULL,
"text" varchar(1000) NOT NULL,
"wap_url" varchar(100) DEFAULT NULL,
"wap_expiry_date" varchar(30) DEFAULT NULL,
"wap_signal" varchar(1) DEFAULT NULL,
"create_date" varchar(30) NOT NULL,
"originator" varchar(16) NOT NULL DEFAULT ' ',
"encoding" varchar(1) NOT NULL DEFAULT '7',
"status_report" int(1) NOT NULL DEFAULT '0',
"flash_sms" int(1) NOT NULL DEFAULT '0',
"src_port" int(6) NOT NULL DEFAULT '-1',
"dst_port" int(6) NOT NULL DEFAULT '-1',
"sent_date" varchar(30) DEFAULT NULL,
"ref_no" varchar(64) DEFAULT NULL,
"priority" int(5) NOT NULL DEFAULT '0',
"status" varchar(1) NOT NULL DEFAULT 'U',
"errors" int(2) NOT NULL DEFAULT '0',
"gateway_id" varchar(64) NOT NULL DEFAULT '*',
PRIMARY KEY ("id"))
EndCreateSchema
BeginDropSchema
drop table smsserver_out
EndDropSchema


BeginIndex
CREATE INDEX FKB855B9E41BE4C5D on ManagedObject ("PARENTID")
alter table ManagedObject add constraint FKB855B9E41BE4C5D foreign key (PARENTID) references ManagedObject(MOID) ON DELETE CASCADE
EndIndex


BeginIndex
alter table ThresholdObjects change THRESHOLDVALUE THRESHOLDVALUE Numeric(23,4)
alter table ThresholdObjects change REARMVALUE REARMVALUE Numeric(23,4)
EndIndex


BeginIndex
alter table MapDB change MAPLINKRENDERER MAPLINKRENDERER varchar(150)
alter table MapDB change MAPSYMBOLRENDERER MAPSYMBOLRENDERER varchar(150)
EndIndex

EndModules TopoDB-MapDB-EventDB-AlertDB-PollDB-PolicyDB-USERSTORAGEDB

#Do not edit the below lines. They are used for statistical data collection.


<STATS>
create table STATSDATA%(
POLLID BIGINT NOT NULL,
INSTANCE varchar(100) NOT NULL,
TTIME BIGINT NOT NULL,
VAL BIGINT,
PRIMARY KEY (POLLID,INSTANCE,TTIME))
</STATS>

<STRING>
create table STRINGDATA%(
POLLID BIGINT,
INSTANCE varchar(100),
TTIME BIGINT,
VALUE varchar(200))
</STRING>

<DECIMAL>
create table DECIMALDATA%(
POLLID BIGINT NOT NULL,
INSTANCE varchar(100) NOT NULL,
TTIME BIGINT NOT NULL,
VAL Numeric(19,4),
PRIMARY KEY (POLLID,INSTANCE,TTIME))
</DECIMAL>

