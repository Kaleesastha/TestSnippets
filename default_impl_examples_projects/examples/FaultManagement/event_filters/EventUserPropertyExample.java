//$Id: EventUserPropertyExample.java,v 1.1.1.1 2006/11/16 15:39:58 gramkumar Exp $

/**
 *   EventUserPropertyExample.java
 */

package com.adventnet.nms.example.eventfilter;
import com.adventnet.nms.eventdb.*;
import com.adventnet.nms.util.*;
import java.util.*;
import java.io.*;
  
/** 
 * In this example we will demonstrate how to set the  userProperties to 
 * the Event and the userProperties of  the alert  changes according to the
 * value of the ALERTS_USER_PROPERTY [none/latest/append] set in the
 * NmsProcessesBE.conf.

 * This Event filter action can be used by renaming the file
 *  <Web NMS>/conf/examples/eventfilters/EventUserPropertyExample.filters
 * into  <Web NMS>/conf/event.filters
 * before starting the server or by adding this filter action class dynamically.
 */
public class EventUserPropertyExample implements FilterClient {
 
  public EventUserPropertyExample() 
  {    
  }

  /** This is called when the user filter action class is first 
   * instantiated 
   **/
  public void init() 
  {
  }

    /**
 	* This is the filter method which should be implemented if this
    * class is registered as Event filter. This method will be invoked  
    * whenever an event  matches the Event Filter criteria.
    * The matching event object will passed as the parameter.  
    * UserProperty is set for all the events that passes through this
    * filter.
    * This method is defined in 
    <b>com.adventnet.nms.eventdb.FilterClient</b> interface.
    **/

  public com.adventnet.nms.eventdb.Event filter(com.adventnet.nms.eventdb.Event e) 
  {	  
	  // EventGenByTrap is set to true for the events generated by traps 
      // and not by events generated by status polling.
	  // If the user wants EventGenByTrap userProperty to be set true
      // for the events generated by traps then in
	  // NmsProcessesBE.conf, TRANSIENT_TRAP_PDU_IN_EVENT a parameter to E      // EventMgr must be set true.
	   
	  if(e.getSnmpPDU()!=null)
	      e.setUserProperty("EventGenByTrap","true");
	  else
		  e.setUserProperty("EventGenByTrap","false");	    
    return e;    
  }

    /**
 	* This is the filter method which should be implemented if this
    * class is registered as Alert filter. This method will be invoked  
    * whenever an alert matches the Alert Filter criteria.
    * The matching Alert object will passed as the parameter.  
    * We call this example only as event Filter.
    * Hence this method will not be called.
    * This method is defined in 
    <b>com.adventnet.nms.eventdb.FilterClient</b> interface.
    **/
  public com.adventnet.nms.alertdb.Alert filter(com.adventnet.nms.alertdb.Alert a) {
		return a;
  }
 

}
