//$Id: DatabaseSchema.conf,v 1.124 2001/07/30 05:30:16 tsgovind Exp $
#Schema for MYSQL

BeginModules TopoDB-MapDB-EventDB-AlertDB-PollDB-PolicyDB-USERSTORAGEDB

BeginCreateSchema
create table ObjectTypes (
"OBJKEY" varchar( 100 ) NOT NULL , 
"CLASSNAME" varchar( 50 ) )
EndCreateSchema

BeginDropSchema
drop table ObjectTypes
EndDropSchema

BeginCreateSchema
create table ManagedObject( 
"NAME" varchar(100) NOT NULL,
"MOID" BIGINT(20) NOT NULL,
"DISCRIMINATOR" varchar(30),
"DISPLAYNAME" varchar(100) NOT NULL,
"PARENTKEY" varchar(100)  NOT NULL,
"TYPE" varchar(100),
"MANAGED" BOOL,
"STATUS" INTEGER,
"FAILURETHRESHOLD" INTEGER,
"FAILURECOUNT" INTEGER,
"POLLINTERVAL" INTEGER,
"STATUSCHANGETIME" BIGINT(20),
"STATUSUPDATETIME" BIGINT(20),
"TESTER" varchar(100),
"UCLASS" varchar(100),
"CLASSNAME" varchar(100),
"WEBNMS" varchar(100),
"STATUSPOLLENABLED" BOOL,
"ISCONTAINER" BOOL,
"ISGROUP" BOOL,
"NENAME"  VARCHAR(100),
"PARENTID" BIGINT(20),
PRIMARY KEY ("NAME","MOID"),
index ManagedObject0_ndx("NAME"),
index ManagedObject1_ndx ("MOID"),
index ManagedObject2_ndx ("PARENTKEY"))
EndCreateSchema

BeginDropSchema
drop table ManagedObject
drop index ManagedObject0_ndx
drop index ManagedObject1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE ManagedObject add index ManagedObject0_ndx("NAME")
#ALTER TABLE ManagedObject add index ManagedObject1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table MapContainer(
"NAME" varchar(100) NOT NULL,
"OBJNAME" varchar(100)  NOT NULL,
"MAPNAME" varchar(100) NOT NULL,
"LABEL" varchar(100),
"ICONNAME" varchar(100),
"MENUNAME" varchar(100),
"WIDTH" INTEGER,
"HEIGHT" INTEGER,
"X" INTEGER,
"Y" INTEGER,
"WEBNMS" varchar(100),
"GROUPNAME" varchar(100),
"ANCHORED" varchar(10),
"CURRENTTOPOLOGY" varchar(100),
"TOPOLOGY" varchar(100),
"CONTAINMENT"	BOOL,		
"OBJTYPE" INTEGER,
"PARENTNAME" varchar(100),
PRIMARY KEY ( "NAME","MAPNAME"),
index MapContainer0_ndx ("MAPNAME"),
index MapContainer1_ndx ("NAME"),
index MapContainer2_ndx ("OBJNAME"))
EndCreateSchema

BeginDropSchema
drop table MapContainer
drop index MapContainer0_ndx
drop index MapContainer1_ndx
EndDropSchema

BeginCreateSchema
create table TopoObject(
"MOID" BIGINT(20) NOT NULL, 
"IPADDRESS" varchar(100),
"NETMASK" varchar(100),
"COMMUNITY" varchar(100),
"WRITECOMMUNITY" varchar(100),
"SNMPPORT" INTEGER,
"ISDHCP" BOOL,
"BASEMIBS" varchar(100),
"VERSION" varchar(100),
"USERNAME" varchar(100),
"CONTEXTNAME" varchar(100),
"ISSNMP" BOOL,
"ISNODE" BOOL,
"ISNETWORK" BOOL,
"ISINTERFACE" BOOL,
PRIMARY KEY ("MOID"),
index TopoObject0_ndx ("MOID"))
EndCreateSchema

BeginDropSchema
drop table TopoObject
drop index TopoObject0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE TopoObject add index TopoObject0_ndx ("NAME")
#ALTER TABLE TopoObject add index TopoObject1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table Node( 
"MOID" BIGINT(20) NOT NULL,
"ISROUTER" BOOL,
PRIMARY KEY ("MOID"),
index Node0_ndx ("MOID"))
EndCreateSchema

BeginDropSchema
drop table Node
drop index Node0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE Node add index Node0_ndx ("NAME")
#ALTER TABLE Node add index Node1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table Network(
"MOID" BIGINT(20) NOT NULL,
"DISCOVER" BOOL,
"DISCOVERYSTATUS" INTEGER,
"PARENTNETWORK" varchar(100)  NOT NULL,
"PARENTNETMASK" varchar(100),
PRIMARY KEY ("MOID"),
index Network0_ndx ("MOID"),
index Network1_ndx ("PARENTNETWORK"))
EndCreateSchema

BeginDropSchema
drop table Network
drop index Network0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE Network add index Network0_ndx ("NAME")
#ALTER TABLE Network add index Network1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table IpAddress( 
"MOID" BIGINT(20) NOT NULL,
"PARENTNODE" varchar(100) NOT NULL,
"PARENTNET" varchar(100) NOT NULL,
PRIMARY KEY ("MOID"),
index IpAddress0_ndx ( "MOID"),
index IpAddress1_ndx ( "PARENTNODE"),
index IpAddress2_ndx ( "PARENTNET"))
EndCreateSchema

BeginDropSchema
drop table IpAddress
drop index IpAddress0_ndx
drop index IpAddress1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE IpAddress add index IpAddress0_ndx ( "NAME ")
#ALTER TABLE IpAddress add index IpAddress1_ndx ( "OWNERNAME ")
#ALTER TABLE IpAddress add index IpAddress2_ndx ( "PARENTNODE")
#ALTER TABLE IpAddress add index IpAddress3_ndx ( "PARENTNET")
#EndIndex

BeginCreateSchema
create table SnmpNode( 
"MOID" BIGINT(20) NOT NULL,
"HOSTNETMASK" varchar(100),
"SYSDESCR" varchar(200),
"SYSNAME" varchar(100),
"SYSOID" varchar(100),
"OWNERNAME" varchar(25) NOT NULL,
PRIMARY KEY ("MOID"),
index SnmpNode0_ndx ("MOID"))
EndCreateSchema

BeginDropSchema
drop table SnmpNode
drop index SnmpNode0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE SnmpNode add index SnmpNode0_ndx ("NAME")
#ALTER TABLE SnmpNode add index SnmpNode1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table SnmpInterface( 
"MOID" BIGINT(20) NOT NULL,
"HOSTNETMASK" varchar(100),
"IFINDEX" INTEGER,
"PHYSMEDIA" varchar(100),
"PHYSADDR" varchar(100),
"IFSPEED" INTEGER,
"IFDESCR" varchar(200),
"SYSOID" varchar(100),
PRIMARY KEY ("MOID"),
index SnmpInterface0_ndx ("MOID"))
EndCreateSchema

BeginDropSchema
drop table SnmpInterface
drop index SnmpInterface0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE SnmpInterface add index SnmpInterface0_ndx ("NAME")
#ALTER TABLE SnmpInterface add index SnmpInterface1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table TL1Node (
"LOGINCOMMAND" VARCHAR (254) ,
"INITCOMMAND" VARCHAR (254) ,
"CONNECTIONHANDLER" VARCHAR (150) ,
"INFOCOMMAND" VARCHAR (254) ,
"DICTIONARY" VARCHAR (100) ,
"SESSIONID" VARCHAR (100) ,
"TL1PORT" INTEGER ,
"NOTIFYID" VARCHAR (100) ,
"MOID" BIGINT(20) NOT NULL ,
PRIMARY KEY ("MOID"))
EndCreateSchema

BeginDropSchema
drop table TL1Node
EndDropSchema

#BeginIndex
#CREATE INDEX TL1Node0_ndx ON TL1Node ("NAME")
#CREATE INDEX TL1Node1_ndx ON TL1Node ("OWNERNAME")
#EndIndex 

BeginCreateSchema
create table TL1Interface (
"STATPOLLCOMMAND" VARCHAR (254) ,
"CONNECTIONHANDLER" VARCHAR (150) ,
"DICTIONARY" VARCHAR (100) ,
"SESSIONID" VARCHAR (100) ,
"TL1PORT" INTEGER ,
"MOID" BIGINT(20) NOT NULL ,
PRIMARY KEY ("MOID"))
EndCreateSchema

BeginDropSchema
drop table TL1Interface
EndDropSchema

#BeginIndex
#CREATE INDEX TL1Interface0_ndx ON TL1Interface ("NAME")
#CREATE INDEX TL1Interface1_ndx ON TL1Interface ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table TOPOUSERPROPS(
"NAME" varchar( 100 ) NOT NULL, 
"OWNERNAME" varchar(25) NOT NULL,
"PROPNAME" varchar( 150 ) NOT NULL,
"PROPVAL" varchar( 150 ),
index TOPOUSERPROPS0_ndx ( "NAME"),
index TOPOUSERPROPS1_ndx ( "OWNERNAME")
)
EndCreateSchema

BeginDropSchema
drop table TOPOUSERPROPS
drop index TOPOUSERPROPS0_ndx
drop index TOPOUSERPROPS1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE TOPOUSERPROPS add index TOPOUSERPROPS0_ndx ( "NAME")
#ALTER TABLE TOPOUSERPROPS add index TOPOUSERPROPS1_ndx ( "OWNERNAME")
#EndIndex

BeginCreateSchema
create table ALERTUSERPROPS(
"ENTITY" varchar (100),
"PROPNAME" varchar( 150 ) NOT  NULL,
"PROPVAL" varchar( 150 ))
EndCreateSchema

BeginDropSchema
drop table ALERTUSERPROPS
EndDropSchema

#BeginIndex
#ALTER TABLE ALERTUSERPROPS add index ALERTUSERPROPS0_ndx ( "NAME")
#ALTER TABLE ALERTUSERPROPS add index ALERTUSERPROPS1_ndx ( "OWNERNAME")
#EndIndex

BeginCreateSchema
create table EVENTUSERPROPS(
"ID" INT(11),
"PROPNAME" varchar( 150 ) NOT NULL,
"PROPVAL" varchar( 150 ))
EndCreateSchema

BeginDropSchema
drop table EVENTUSERPROPS
EndDropSchema

#BeginIndex
#ALTER TABLE EVENTUSERPROPS add index EVENTUSERPROPS0_ndx  ( "NAME")
#ALTER TABLE EVENTUSERPROPS add index EVENTUSERPROPS1_ndx  ( "OWNERNAME")
#EndIndex

BeginCreateSchema
create table USERTABLE(
"DBKEY" varchar(105) NOT NULL,
"HOST" varchar(50),
"PORT" varchar(5),
"ENGINENAME" varchar(50), 
"USERNAME" varchar(50), 
"AUTHPROTOCOL" varchar(10), 
"AUTHPASSWORD" varchar(50),
"PRIVPROTOCOL" varchar(10), 
"PRIVPASSWORD" varchar(50),
PRIMARY KEY ("DBKEY"))
EndCreateSchema

BeginCreateSchema
create table HOSTS(
"HOSTNAMES" varchar(100) NOT NULL,
PRIMARY KEY ("HOSTNAMES"))
EndCreateSchema

BeginCreateSchema
create table PORTS(
"PORTS" varchar(100) NOT NULL,
PRIMARY KEY ("PORTS"))
EndCreateSchema

BeginCreateSchema
create table ENGINES(
"ENGINENAMES" varchar(100) NOT NULL,
PRIMARY KEY ("ENGINENAMES"))
EndCreateSchema

BeginCreateSchema
create table USERS(
"USERNAMES" varchar(100) NOT NULL,
PRIMARY KEY("USERNAMES"))
EndCreateSchema

BeginCreateSchema
create table POLLUSERPROPS(
"NAME" varchar( 100 ) NOT NULL,
"AGENT" varchar( 100 ) NOT NULL,
"OID" varchar( 200 ) NOT NULL,
"OWNERNAME" varchar(25) NOT NULL,
"PROPNAME" varchar( 150 ) NOT NULL,
"PROPVAL" varchar( 150 ),
index POLLUSERPROPS0_ndx ( "NAME"),
index POLLUSERPROPS1_ndx ( "AGENT"),
index POLLUSERPROPS2_ndx ( "OID"),
index POLLUSERPROPS3_ndx ( "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table POLLUSERPROPS
drop index POLLUSERPROPS0_ndx
drop index POLLUSERPROPS1_ndx
drop index POLLUSERPROPS2_ndx
drop index POLLUSERPROPS3_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE POLLUSERPROPS add index POLLUSERPROPS0_ndx ( "NAME")
#ALTER TABLE POLLUSERPROPS add index POLLUSERPROPS1_ndx ( "AGENT")
#ALTER TABLE POLLUSERPROPS add index POLLUSERPROPS2_ndx ( "OID")
#ALTER TABLE POLLUSERPROPS add index POLLUSERPROPS3_ndx ( "OWNERNAME")
#EndIndex

BeginCreateSchema
create table ANNOTATION (
"AAID" BIGINT(20) NOT NULL, 
"ENTITY" varchar( 100 ) NOT NULL, 
"WHO" varchar( 50 ) , 
"MODTIME" BIGINT , 
"DISCRIMINATOR" varchar(30),
"NOTES"  varchar(250 ),
PRIMARY KEY ("AAID"),
index ANNOTATION0_ndx ( "ENTITY"),
index ANNOTATION1_ndx ( "AAID"))
EndCreateSchema

BeginDropSchema
drop table ANNOTATION
drop index ANNOTATION0_ndx
drop index ANNOTATION1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE ANNOTATION add index ANNOTATION0_ndx ( "ENTITY")
#ALTER TABLE ANNOTATION add index ANNOTATION1_ndx ( "OWNERNAME")
#EndIndex

BeginCreateSchema
create table Alert ( 
"ID" INTEGER,
"GROUPNAME" varchar(100),
"CATEGORY" varchar(100),
"SEVERITY" INTEGER,
"PREVIOUSSEVERITY" INTEGER,
"ENTITY" varchar(100) NOT NULL,
"CREATETIME" BIGINT,
"MODTIME" BIGINT,
"MMESSAGE" varchar(200),
"SOURCE" varchar(100),
"WHO" varchar(100),
"WEBNMS" varchar(100),
"DISCRIMINATOR" varchar(30),
PRIMARY KEY ("ENTITY"),
index Alert0_ndx ("ENTITY"))
EndCreateSchema

BeginDropSchema
drop table Alert
drop index Alert0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE Alert add index Alert0_ndx ("ENTITY")
#ALTER TABLE Alert add index Alert1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table MapDB( 
"NAME" varchar(100) NOT NULL,
"PARENT" varchar(100),
"LABEL" varchar(100),
"MENUNAME" varchar(100),
"IMAGENAME" varchar(100),
"TREEICONFILENAME" varchar(100),
"AUTOPLACEMENT" varchar(10),
"ANCHORED" varchar(10),
"HELPDOC" varchar(100),
"TOPOLOGY" varchar(100),
"CURRENTTOPOLOGY" varchar(100),
"WEBNMS" varchar(100),
"GROUPNAME" varchar(100),
"MAPSYMBOLRENDERER" varchar(100),
"MAPLINKRENDERER" varchar(100),
"MAPLISTENER" varchar(100),
PRIMARY KEY ("NAME"),
index MapDB0_ndx ("NAME"),
EndCreateSchema

BeginDropSchema
drop table MapDB
drop index MapDB0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE MapDB add index MapDB0_ndx ("NAME")
#EndIndex

BeginCreateSchema
create table MapSymbol( 
"NAME" varchar(100) NOT NULL,
"OBJNAME" varchar(100)  NOT NULL,
"MAPNAME" varchar(100) NOT NULL,
"MAPWIDTH" INT(11),
"MAPHEIGHT" INT(11),
"DISCRIMINATOR" varchar(30),
"LABEL" varchar(100),
"ICONNAME" varchar(100),
"MENUNAME" varchar(100),
"WIDTH" INT(11),
"HEIGHT" INT(11),
"X" INT(11),
"Y" INT(11),
"OBJTYPE" INTEGER,	
"WEBNMS" varchar(100),
"GROUPNAME" varchar(100),
"PARENTNAME" varchar(100),
"ANCHORED" BOOL,
PRIMARY KEY ("NAME","MAPNAME"),
index MapSymbol0_ndx ("NAME"),
index MapSymbol1_ndx ("MAPNAME"),
index MapSymbol2_ndx ("OBJNAME"))
EndCreateSchema

BeginDropSchema
drop table MapSymbol
drop index MapSymbol0_ndx
drop index MapSymbol1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE MapSymbol add index MapSymbol0_ndx ("NAME")
#EndIndex

#BeginIndex
#ALTER TABLE MapSymbol add index MapSymbol1_ndx ("MAPNAME")
#EndIndex

BeginCreateSchema
create table MapLink( 
"NAME" varchar(100) NOT NULL,
"SOURCE" varchar(100) NOT NULL ,
"DEST" varchar(100) NOT NULL ,
"MAPNAME" varchar(100) NOT NULL,
"THICKNESS" INTEGER,
"LINKTYPE" INTEGER,
"LABEL" varchar(100),
"MENUNAME" varchar(100),
"NX" INT(11),
"NY" INT(11),
"X" varchar(25),
"Y" varchar(25),
"OBJNAME" varchar(100)  NOT NULL,
"STATUS"  INT(11),	
"WEBNMS" varchar(100),
"GROUPNAME" varchar(100),
PRIMARY KEY ("NAME","MAPNAME"),
index MapLink0_ndx ("NAME"),
index MapLink1_ndx ("MAPNAME"),
index MapLink2_ndx ("OBJNAME"))
EndCreateSchema

BeginDropSchema
drop table MapLink
drop index MapLink0_ndx
drop index MapLink1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE MapLink add index MapLink0_ndx ("NAME")
#EndIndex

#BeginIndex
#ALTER TABLE MapLink add index MapLink1_ndx ("MAPNAME")
#EndIndex

BeginCreateSchema
create table MAPUSERPROPS(
"NAME" varchar( 100 ) NOT NULL,
"MAPNAME" varchar(100) NOT NULL,
"OWNERNAME" varchar(25) NOT NULL,
"PROPNAME" varchar( 150 ) NOT NULL,
"PROPVAL" varchar( 150 ),
index MAPUSERPROPS0_ndx ("NAME"),
index MAPUSERPROPS1_ndx ("MAPNAME"),
index MAPUSERPROPS2_ndx ("OWNERNAME"))

EndCreateSchema

BeginDropSchema
drop table MAPUSERPROPS
drop index MAPUSERPROPS0_ndx
drop index MAPUSERPROPS1_ndx
drop index MAPUSERPROPS2_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE MAPUSERPROPS add index MAPUSERPROPS0_ndx ("NAME")
#ALTER TABLE MAPUSERPROPS add index MAPUSERPROPS1_ndx ("MAPNAME")
#ALTER TABLE MAPUSERPROPS add index MAPUSERPROPS2_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table Event( 
"ID" INTEGER NOT NULL,
"TEXT" varchar(200),
"CATEGORY" varchar(100),
"NETWORK" varchar(100),
"NODE" varchar(100),
"ENTITY" varchar(100),
"SEVERITY" INTEGER,
"TTIME" BIGINT, 
"SOURCE" varchar(100),
"WEBNMS" varchar(100),
"GROUPNAME" varchar(100),
"DISCRIMINATOR" varchar(30),
PRIMARY KEY ("ID"),
index Event0_ndx ("ID"))
EndCreateSchema

BeginDropSchema
drop table Event
drop index Event0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE Event add index Event0_ndx ("ID")
#ALTER TABLE Event add index Event1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table PolledData( 
"NAME" varchar(50) NOT NULL ,
"ID" BIGINT NOT NULL ,
"AGENT" varchar(50) NOT NULL ,
"COMMUNITY" varchar(100) NOT NULL ,
"PERIOD" INTEGER NOT NULL,
"ACTIVE" BOOL,
"OID" varchar(200) NOT NULL,
"LOGDIRECTLY" BOOL,
"LOGFILE" varchar(100),
"DISCRIMINATOR" varchar(30),
"SAVEDATA" BOOL,
"POLLERNAME" varchar(200),
"THRESHOLD" BOOL,
"ISMULTIPLEPOLLEDDATA" BOOL,
"PREVIOUSSEVERITY" INTEGER,
"NUMERICTYPE" INTEGER,
"SAVEABSOLUTES" BOOL,
"TIMEAVG" BOOL,
"PORT" INTEGER,
"WEBNMS" varchar(100),
"GROUPNAME" varchar(100),
"LASTCOUNTERVALUE" BIGINT ,
"LASTTIMEVALUE" BIGINT ,
"TIMEVAL" BIGINT NOT NULL ,
"POLICYNAME" varchar(100),
"THRESHOLDLIST" varchar(200),
"DNSNAME" varchar(100),
"SUFFIX" varchar(20),
"STATSDATATABLENAME" varchar(100),
"POLLERNAME" varchar(200),
"FAILURECOUNT" INTEGER,
"FAILURETHRESHOLD" INTEGER,
"OWNERNAME" varchar(25) NOT NULL,
"PARENTOBJ" varchar(100),
"PROTOCOL" varchar(50),
"SAVEPOLLCOUNT" INTEGER,
"CURRENTSAVECOUNT" INTEGER,
"SAVEONTHRESHOLD" BOOL,
"SNMPVERSION" varchar(10),
"USERNAME" varchar(30),
"CONTEXTNAME" varchar(30),
PRIMARY KEY ("NAME","AGENT","OID","OWNERNAME"),
index PolledData0_ndx ( "NAME"),
index PolledData1_ndx ( "AGENT"),
index PolledData2_ndx ( "OID"),
index PolledData3_ndx ( "ID"),
index PolledData4_ndx ( "COMMUNITY"),
index PolledData5_ndx ( "PERIOD"),
index PolledData6_ndx ( "TIMEVAL"),
index PolledData7_ndx ( "OWNERNAME"),
index PolledData8_ndx ( "PARENTOBJ"))
EndCreateSchema

BeginDropSchema
drop table PolledData
drop index PolledData0_ndx
drop index PolledData1_ndx
drop index PolledData2_ndx
drop index PolledData3_ndx
drop index PolledData4_ndx
drop index PolledData5_ndx
drop index PolledData6_ndx
drop index PolledData7_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE PolledData add index PolledData0_ndx ( "NAME")
#EndIndex

#BeginIndex
#ALTER TABLE PolledData add index PolledData1_ndx ( "AGENT")
#EndIndex

#BeginIndex
#ALTER TABLE PolledData add index PolledData2_ndx ( "OID")
#EndIndex

#BeginIndex
#ALTER TABLE PolledData add index PolledData3_ndx ( "ID")
#EndIndex

#BeginIndex
#ALTER TABLE PolledData add index PolledData4_ndx ( "COMMUNITY")
#EndIndex

#BeginIndex
#ALTER TABLE PolledData add index PolledData5_ndx ( "PERIOD")
#EndIndex

#BeginIndex
#ALTER TABLE PolledData add index PolledData6_ndx ( "TIMEVAL")
#EndIndex

#BeginIndex
#ALTER TABLE PolledData add index PolledData7_ndx ( "OWNERNAME")
#EndIndex

BeginCreateSchema
create table  ALERTLOGGER (
"VALUESTRING" varchar( 250 ))
EndCreateSchema

BeginDropSchema
drop table ALERTLOGGER
EndDropSchema

BeginCreateSchema
create table  EVENTLOGGER (
"VALUESTRING" BIGINT NOT NULL,
"POSITION" INTEGER NOT NULL,
index EVENTLOGGER0_ndx ("POSITION"))
EndCreateSchema

BeginDropSchema
drop table EVENTLOGGER
drop index EVENTLOGGER0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE EVENTLOGGER add index EVENTLOGGER0_ndx ("POSITION")
#EndIndex

BeginCreateSchema
create table  CUSTOMMAPS (
"VALUESTRING" varchar( 250 ))
EndCreateSchema

BeginDropSchema
drop table CUSTOMMAPS
EndDropSchema

BeginCreateSchema
create table  DBINTERFACES (
"VALUESTRING" varchar( 250 ))
EndCreateSchema

BeginDropSchema
drop table DBINTERFACES
EndDropSchema

BeginCreateSchema
create table  DEFAULTMAPS (
"VALUESTRING" varchar( 250 ))
EndCreateSchema

BeginDropSchema
drop table DEFAULTMAPS
EndDropSchema

BeginCreateSchema
create table  TrapDisabledMO (
"Name" VARCHAR(250) NOT NULL,
"Type" varchar( 250 ),
PRIMARY KEY ("Name"))
EndCreateSchema

BeginDropSchema
drop table TrapDisabledMO
EndDropSchema

BeginCreateSchema
create table  CHILDRENSTATUS (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index CHILDRENSTATUS0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table CHILDRENSTATUS
drop index CHILDRENSTATUS0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE CHILDRENSTATUS add index CHILDRENSTATUS0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table CUSTOMPROPS (
"KEYSTRING" VARCHAR( 250 ) NOT NULL,
"PROPKEY" varchar( 250 ) ,
"PROPVALUE" varchar ( 250 ),
index CUSTOMPROPS0_ndx ("KEYSTRING") )
EndCreateSchema

#BeginIndex
#ALTER TABLE CUSTOMPROPS add index CUSTOMPROPS0_ndx ("KEYSTRING")
#EndIndex

BeginDropSchema
drop table CUSTOMPROPS
drop index CUSTOMPROPS0_ndx
EndDropSchema

BeginCreateSchema
create table  OBJECTSTOLINK (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
index OBJECTSTOLINK0_ndx ("KEYSTRING"))
EndCreateSchema

#BeginIndex
#ALTER TABLE OBJECTSTOLINK add index OBJECTSTOLINK0_ndx ("KEYSTRING")
#EndIndex

BeginDropSchema
drop table OBJECTSTOLINK
drop index OBJECTSTOLINK0_ndx
EndDropSchema


BeginCreateSchema
create table  TOPODBSPECIALKEY (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index TOPODBSPECIALKEY0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table TOPODBSPECIALKEY
drop index TOPODBSPECIALKEY0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE TOPODBSPECIALKEY add index TOPODBSPECIALKEY0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table  DBMAP (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index DBMAP0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table DBMAP
drop index DBMAP0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE DBMAP add index DBMAP0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table  DBEVENT (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index DBEVENT0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table DBEVENT
drop index DBEVENT0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE DBEVENT add index DBEVENT0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table  DBALERT (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index DBALERT0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table DBALERT
drop index DBALERT0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE DBALERT add index DBALERT0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table  DBPOLL (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index DBPOLL0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table DBPOLL
drop index DBPOLL0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE DBPOLL add index DBPOLL0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table  ObjectSchedulerRUNNABLE (
"MOID" BIGINT( 20 ) NOT NULL,
"CLASSNAME"  varchar(150),
"TIMEVAL" BIGINT NOT NULL,
PRIMARY KEY ("MOID"),
index ObjectSchedulerRUNNABLE0_ndx ("TIMEVAL"),
index ObjectSchedulerRUNNABLE1_ndx ("MOID"))
EndCreateSchema

BeginDropSchema
drop table ObjectSchedulerRUNNABLE
drop index ObjectSchedulerRUNNABLE0_ndx
drop index ObjectSchedulerRUNNABLE1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE ObjectSchedulerRUNNABLE add index ObjectSchedulerRUNNABLE0_ndx ("TIMEVAL")
#EndIndex

#BeginIndex
#ALTER TABLE ObjectSchedulerRUNNABLE add index ObjectSchedulerRUNNABLE1_ndx ("VALUESTRING")
#EndIndex

BeginCreateSchema
create table MapGroup(
"NAME" varchar(100) NOT NULL,
"OBJNAME" varchar(100)  NOT NULL,
"MAPNAME" varchar(100) NOT NULL,
"LABEL" varchar(100),
"ICONNAME" varchar(100),
"MENUNAME" varchar(100),
"WIDTH" INTEGER,
"HEIGHT" INTEGER,
"X" INTEGER,
"Y" INTEGER,
"WEBNMS" varchar(100),
"GROUPNAME" varchar(100),
"OBJTYPE" INTEGER,
"ANCHORED" varchar(10),
PRIMARY KEY ("NAME","MAPNAME"),
index MapGroup0_ndx ("MAPNAME"),
index MapGroup1_ndx ("NAME"),
index MapGroup2_ndx ("OBJNAME"))
EndCreateSchema

BeginDropSchema
drop table MapGroup
drop index MapGroup0_ndx
drop index MapGroup1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE MapGroup add index MapGroup0_ndx ("MAPNAME")
#EndIndex

#BeginIndex
#ALTER TABLE MapGroup add index MapGroup1_ndx ("NAME")
#EndIndex

BeginCreateSchema
create table ManagedGroupObject(
"MOID" BIGINT(20) NOT NULL PRIMARY KEY,
index ManagedGroupObject0_ndx ("MOID"))
EndCreateSchema

BeginDropSchema
drop table ManagedGroupObject
EndDropSchema

#BeginIndex
#ALTER TABLE ManagedGroupObject add index ManagedGroupObject0_ndx ("NAME")
#EndIndex

BeginCreateSchema
create table GroupTable (
"MOID" BIGINT(2) NOT NULL,
"MEMBERNAME" varchar(100) NOT NULL)
EndCreateSchema

BeginDropSchema
drop table GroupTable
EndDropSchema

BeginCreateSchema
create table TaskAudit (
"EXECUTIONID" INTEGER,
"USERNAME" varchar(50),
"TASKNAME" varchar(100),
"DEVICELIST" text,
"DATASOURCE" varchar(50),
"EXECUTEDTIME" varchar(30))
EndCreateSchema

BeginDropSchema
drop table TaskAudit
EndDropSchema


BeginCreateSchema
create table DeviceAudit (
"ID" INTEGER,
"USERNAME" varchar(50),
"TASKNAME" varchar(50),
"SUBTASKNAME" varchar(50),
"DEVICENAME" varchar(50),
"TIMEOFSTART" varchar(30),
"TIMEOFFINISH" varchar(30),
"STATUS" varchar(15),
"ROLLBACKSTATUS" varchar(15),
"EXECUTIONID" INTEGER,
"DEVICELIST" varchar(50))
EndCreateSchema

BeginDropSchema
drop table DeviceAudit
EndDropSchema

BeginCreateSchema
create table AttributeAudit(
"ID" INTEGER,
"IDENTIFIER" varchar(100),
"TIMEOFFINISH" varchar(30),
"RETRIES" INTEGER,
"STATUS" varchar(200),
"OUTPUT" BLOB)
EndCreateSchema

BeginDropSchema
drop table AttributeAudit
EndDropSchema

BeginCreateSchema
create table ConfigTasks(
USERNAME varchar(50),
TASKNAME varchar(50),
PROTOCOL varchar(10),
VERSION varchar(10),
SUBTASKS varchar(200),
ROLLBACKNEEDED varchar(5),
ROLLBACKTYPE integer,
ROLLBACKDOCUMENT varchar(50),
MIBSTOBELOADED varchar(100),
DESCRIPTION text,
ISTEMPLATE varchar(5))
EndCreateSchema

BeginDropSchema
drop table ConfigTasks
EndDropSchema

BeginCreateSchema
create table ConfigTaskDetails(
AKEY  integer, 
USERNAME varchar(50),
TASKNAME varchar(50),
TYPE varchar(2),
PARENTKEY integer)
EndCreateSchema

BeginDropSchema
drop table ConfigTaskDetails
EndDropSchema

BeginCreateSchema
create table ConfigAttributes(
AKEY  varchar(120), 
NAME varchar(100),
VALUE varchar(250))
EndCreateSchema

BeginDropSchema
drop table ConfigAttributes
EndDropSchema

BeginCreateSchema
create table PendingTasks(
USERNAME varchar(50), 
TASKNAME varchar(50),
SUBTASKNAME varchar(50),
DEVICENAME varchar(50),
STATUS varchar(20),
PORT varchar(5),
RETRIES INTEGER,
TIMEOUT INTEGER,
AINDEX INTEGER,
EXECUTIONID INTEGER)
EndCreateSchema

BeginDropSchema
drop table PendingTasks
EndDropSchema

BeginCreateSchema
create table PendingDevices(
DKEY varchar(200), 
NAME varchar(200),
VALUE varchar(200))
EndCreateSchema

BeginDropSchema
drop table PendingDevices
EndDropSchema

BeginCreateSchema
create table DeviceList(
USERNAME varchar(50),
PROTOCOL varchar(10),
DEVICELISTNAME VARCHAR(50))
EndCreateSchema

BeginDropSchema
drop table DeviceList
EndDropSchema

BeginCreateSchema
create table DeviceListDetails(
DKEY VARCHAR(200),
DEVICENAME VARCHAR(50),
PORT varchar(5),
RETRIES INTEGER,
TIMEOUT INTEGER,
DEVICESEQUENCE INTEGER)
EndCreateSchema

BeginDropSchema
drop table DeviceListDetails
EndDropSchema


BeginCreateSchema
create table DeviceUserProps(
DKEY varchar(200), 
NAME varchar(200),
VALUE varchar(200))
EndCreateSchema

BeginDropSchema
drop table DeviceUserProps
EndDropSchema

BeginCreateSchema
create table TaskToDeviceListMap(
USERNAME VARCHAR(50),
TASKNAME VARCHAR(50),
DEVICELISTNAMES VARCHAR(200))
EndCreateSchema

BeginDropSchema
drop table TaskToDeviceListMap
EndDropSchema

BeginCreateSchema
create table PollingObjects(
NAME varchar(50) NOT NULL,
STATUS varchar(10),
PRIMARY KEY("NAME"))
EndCreateSchema

BeginCreateSchema
create table ConfigProvider (
PROTOCOL varchar(100) NOT NULL,
CONFIGPROVIDER varchar(100) NOT NULL )
EndCreateSchema

BeginDropSchema
drop table ConfigProvider
EndDropSchema

BeginDropSchema
drop table PollingObjects
EndDropSchema

BeginCreateSchema
create table PollingAttributes(
"NAME" varchar(50),
"TYPE" varchar(10),
"PROPERTY" varchar(20),
"POLLCONDITION" varchar(50),
"VALUE" varchar(100))
EndCreateSchema

BeginDropSchema
drop table PollingAttributes
EndDropSchema

BeginCreateSchema
create table Providers(
"PROVIDERNAME" varchar(15) NOT NULL,
"VALUE" varchar(100),
PRIMARY KEY("PROVIDERNAME"))
EndCreateSchema

BeginDropSchema
drop table Providers
EndDropSchema

BeginCreateSchema
create table StatsTables(
TableName varchar(100) NOT NULL,
CreateSchema varchar(255),
PRIMARY KEY("TableName"))
EndCreateSchema

BeginDropSchema
drop table StatsTables
EndDropSchema


BeginCreateSchema
create table ThresholdObjects(
"NAME" varchar(20) NOT NULL,
"KIND" varchar(15),
"SEVERITY" INTEGER,
"TRIGGERSEVERITY" INTEGER,
"RESETSEVERITY" INTEGER,
"THRESHOLDTYPE" varchar(5),
"CATEGORY" varchar(20),
"THRESHOLDVALUE" BIGINT,
"REARMVALUE" BIGINT,
"MMESSAGE" varchar(100),
"CLEARMESSAGE" varchar(100),
"SENDCLEAR" varchar(10),
"ALLOWED" varchar(50),
"DISALLOWED" varchar(50),
"OID" varchar(50),
"OIDTYPE" varchar(10),
PRIMARY KEY("NAME"))
EndCreateSchema

BeginDropSchema
drop table ThresholdObjects
EndDropSchema

BeginCreateSchema
create table CustomView(
"MODULE" varchar(25) NOT NULL,
"VIEWID" varchar(50) NOT NULL,
"USERNAME" varchar(50) NOT NULL,
"VIEWNAME" varchar(100) NOT NULL,
"PARENT" varchar(50) NOT NULL,
"CONSTRAIN" varchar(200),
"SQLSTRING" text,
PRIMARY KEY ("VIEWID","USERNAME" ),
index CustomView0_ndx ("MODULE","USERNAME","VIEWNAME","PARENT"),
index CustomView1_ndx ("VIEWID","USERNAME" ))
EndCreateSchema

#BeginIndex
#ALTER TABLE CustomView add index CustomView0_ndx ("MODULE","USERNAME","VIEWNAME","PARENT")
#ALTER TABLE CustomView add index CustomView1_ndx ("VIEWID","USERNAME")
#EndIndex

BeginDropConfigSchema
drop table CustomView
drop index CustomView0_ndx
drop index CustomView1_ndx
EndDropConfigSchema

BeginCreateSchema
create table CustomViewProps(
"MODULE" varchar(25) NOT NULL,
"VIEWID" varchar(50) NOT NULL,
"USERNAME" varchar(50) NOT NULL,
"CRITERIAID" INTEGER NOT NULL,
"PROPKEY" varchar(100),
"OPERATOR" varchar(15),
"PROPVALUE1" varchar(100),
"PROPVALUE2" varchar(100),
PRIMARY KEY ("VIEWID","USERNAME","CRITERIAID"),
index CustomViewProps0_ndx ("VIEWID","USERNAME" ))
EndCreateSchema

#BeginIndex
#ALTER TABLE CustomViewProps add index CustomViewProps0_ndx ("VIEWID","USERNAME")
#EndIndex

BeginDropConfigSchema
drop table CustomViewProps
drop index CustomViewProps0_ndx
EndDropConfigSchema

BeginCreateSchema
create table CustomViewColumns(
"MODULE" varchar(25) NOT NULL,
"VIEWID" varchar(50) NOT NULL,
"USERNAME" varchar(50) NOT NULL,
"DISPLAYNAME" varchar(50),
"COLUMNNAME" varchar(50) NOT NULL,
"WIDTH" INTEGER,
"COLUMNINDEX" INTEGER,
PRIMARY KEY ("VIEWID","USERNAME","COLUMNNAME"),
index CustomViewColumns0_ndx ("VIEWID","USERNAME" ))
EndCreateSchema

#BeginIndex
#ALTER TABLE CustomViewColumns add index CustomViewColumns0_ndx ("VIEWID", "USERNAME")
#EndIndex

BeginDropConfigSchema
drop table CustomViewColumns
drop index CustomViewColumns0_ndx
EndDropConfigSchema

BeginCreateSchema
create table PanelTree (
"NODEID" VARCHAR(100) NOT NULL,
"NODETYPE" VARCHAR(100) NOT NULL,
"USERNAME" VARCHAR(50) NOT NULL,
"PANELPROPS" VARCHAR(1000),
"PARENT" VARCHAR(100),
"PREVIOUSNODE" VARCHAR(100), 
"MODULENAME" varchar(30),
PRIMARY KEY ("NODEID","USERNAME"))
EndCreateSchema

BeginDropConfigSchema
drop table PanelTree 
EndDropConfigSchema

BeginCreateSchema
create table PanelProps (
"NODEID" VARCHAR(100) NOT NULL,
"USERNAME" VARCHAR(50) NOT NULL,
"ATTRIBNAME" VARCHAR(30) NOT NULL,
"ATTRIBVALUE" VARCHAR(100),
PRIMARY KEY ("NODEID","USERNAME","ATTRIBNAME"))
EndCreateSchema

BeginDropConfigSchema
drop table PanelProps
EndDropConfigSchema

BeginCreateSchema
create table PollFilters(
CLASSNAME varchar(100) NOT NULL,
PRIMARY KEY("CLASSNAME"))
EndCreateSchema

BeginDropSchema
drop table PollFilters
EndDropSchema

BeginCreateSchema
create table GenericFaultTable ( 
"TYPE" varchar(100) NOT NULL,
"NAME" varchar(100) NOT NULL,
PRIMARY KEY ("TYPE","NAME"))
EndCreateSchema

BeginDropSchema
drop table GenericFaultTable
EndDropSchema

BeginCreateSchema
create table TrapFilter ( 
"NAME" varchar(100),
"ENTERPRISEOID" varchar(100),
"GT" varchar(10),
"ST" varchar(10),
"TRAPOID" varchar(100),
"CLASSNAME" varchar(100),
"STATE" varchar(50))
EndCreateSchema

BeginDropSchema
drop table TrapFilter
EndDropSchema

BeginCreateSchema
create table TrapEventParser ( 
"TYPE" varchar(100) NOT NULL,
"NAME" varchar(100) NOT NULL,
"PROPKEY" varchar(100),
"PROPVALUE" blob)
EndCreateSchema

BeginDropSchema
drop table TrapEventParser
EndDropSchema

BeginCreateSchema
create table EventAlertFilter ( 
"TYPE" varchar(100) NOT NULL,
"FILTERNAME" varchar(100) NOT NULL,
"ACTIONNAME" varchar(100),
"PROPKEY" varchar(100),
"PROPVALUE" blob)
EndCreateSchema

BeginDropSchema
drop table EventAlertFilter
EndDropSchema

BeginCreateSchema
create table Reports(
"CLASSNAME" varchar(100) NOT NULL,
"DAILY" varchar(10),
"WEEKLY" varchar(10),
"HOUR" varchar(100),
"MONTHDAYS" varchar(50),
"WEEKDAYS" varchar(50),
"TIMEVAL" BIGINT,
PRIMARY KEY("CLASSNAME"))
EndCreateSchema

BeginDropSchema
drop table Reports
EndDropSchema

BeginCreateSchema
create table DataCollectionAttributes(
"NAME" varchar(50),
"PROPKEY" varchar(50),
"PROPNAME" varchar(30),
"PROPVAL" varchar(200))
EndCreateSchema

BeginDropSchema
drop table DataCollectionAttributes
EndDropSchema

BeginCreateSchema
create table UserPasswordTable(
"USERNAME" varchar(50) NOT NULL,
"PASSWORD" varchar(100),
"OWNERNAME" varchar(50) NOT NULL,
PRIMARY KEY ("USERNAME","OWNERNAME"),
index UserPasswordTable0_ndx ("USERNAME"))
EndCreateSchema

BeginDropSchema
drop table UserPasswordTable
drop index UserPasswordTable0_ndx
EndDropSchema

BeginCreateSchema
create table UserGroupTable(
"USERNAME" varchar(50) NOT NULL,
"GROUPNAME" varchar(100) NOT NULL,
"OWNERNAME" varchar(50) NOT NULL,
PRIMARY KEY ("USERNAME","GROUPNAME","OWNERNAME"),
index UserGroupTable0_ndx ("USERNAME","GROUPNAME" ),
index UserGroupTable1_ndx ("USERNAME"),
index UserGroupTable2_ndx ("GROUPNAME"))
EndCreateSchema

BeginDropSchema
drop table UserGroupTable
drop index UserGroupTable0_ndx
drop index UserGroupTable1_ndx
drop index UserGroupTable2_ndx
EndDropSchema

BeginCreateSchema
create table ViewPropertiesTable(
"VIEWNAME" varchar(50) NOT NULL,
"PROPERTYNAME" varchar(50) NOT NULL,
"PROPERTYVALUE" varchar(50),
PRIMARY KEY ("VIEWNAME","PROPERTYNAME"),
index ViewPropertiesTable0_ndx ("VIEWNAME"))
EndCreateSchema

BeginDropSchema
drop table ViewPropertiesTable
drop index ViewPropertiesTable0_ndx
EndDropSchema

BeginCreateSchema
create table ViewsToGroupTable(
"VIEWNAME" varchar(50) NOT NULL,
"GROUPNAME" varchar(50) NOT NULL,
"OWNERNAME" varchar(50) NOT NULL,
PRIMARY KEY ("VIEWNAME","GROUPNAME","OWNERNAME"),
index ViewsToGroupTable0_ndx ("VIEWNAME","GROUPNAME"),
index ViewsToGroupTable1_ndx ("GROUPNAME"))
EndCreateSchema

BeginDropSchema
drop table ViewsToGroupTable
drop index ViewsToGroupTable0_ndx
drop index ViewsToGroupTable1_ndx
EndDropSchema

BeginCreateSchema
create table ViewToOperationsTable(
"VIEWNAME" varchar(50) NOT NULL,
"OPERATIONSNAME" varchar(50) NOT NULL,
"OPERATIONSTYPE" INTEGER,
PRIMARY KEY ("VIEWNAME","OPERATIONSNAME"))
EndCreateSchema

BeginDropSchema
drop table ViewToOperationsTable
EndDropSchema

BeginCreateSchema
create table OperationsTreeTable(
"PARENTOPERATION" varchar(50) NOT NULL,
"CHILDOPERATION" varchar(50) NOT NULL,
"LEAFNODE" INTEGER,
PRIMARY KEY ("PARENTOPERATION","CHILDOPERATION"),
index OperationsTreeTable0_ndx ("PARENTOPERATION"),
index OperationsTreeTable1_ndx ("CHILDOPERATION"))
EndCreateSchema

BeginDropSchema
drop table OperationsTreeTable
drop index OperationsTreeTable0_ndx
drop index OperationsTreeTable1_ndx
EndDropSchema

BeginCreateSchema
create table NamedViewToAuthorizedViewTable(
"NAMEDVIEWNAME" varchar(50) NOT NULL,
"AUTHORIZEDVIEWNAME" varchar(50) NOT NULL)
EndCreateSchema

BeginDropSchema
drop table NamedViewToAuthorizedViewTable
EndDropSchema
        
BeginCreateSchema
create table AuthAudit(
"USERNAME" varchar(30) NOT NULL,
"OPERATION" varchar(100) NOT NULL,
"AUDITTIME" varchar(30) NOT NULL,
"STATUS" varchar(10) NOT NULL)
EndCreateSchema

BeginDropSchema
drop table AuthAudit
EndDropSchema

#by senthil
BeginCreateSchema
create table NotificationLog(
"NOTIINDEX" INTEGER NOT NULL,
"LOGTIME" BIGINT,
"NOVARBINDS" INTEGER,
"NOTIOID" varchar(100),
PRIMARY KEY ("NOTIINDEX"),
index NotificationLog0_ndx ("NOTIINDEX"))
EndCreateSchema

BeginDropSchema
drop table NotificationLog
drop index NotificationLog0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE NotificationLog add index NotificationLog0_ndx ("NOTIINDEX")
#EndIndex

BeginCreateSchema
create table VarBindLog(
"NOTIINDEX" INTEGER NOT NULL,
"VARINDEX" INTEGER NOT NULL,
"VARTYPE" INTEGER,
"VARVALUE" VARCHAR(200),
PRIMARY KEY ("NOTIINDEX","VARINDEX"),
index VarBindLog0_ndx ("NOTIINDEX"),
index VarBindLog1_ndx ("VARINDEX"))
EndCreateSchema

BeginDropSchema
drop table VarBindLog
drop index VarBindLog0_ndx
drop index VarBindLog1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE VarBindLog add index VarBindLog0_ndx ("NOTIINDEX")
#ALTER TABLE VarBindLog add index VarBindLog1_ndx ("VARINDEX")
#EndIndex

BeginCreateSchema
create table AgentDefValObject (
"NAME" VARCHAR (100) NOT NULL ,
"VALUE" VARCHAR (100) ,
PRIMARY KEY ("NAME"),
index AgentDefValObject0_ndx ("NAME"))
EndCreateSchema

BeginDropSchema
drop table AgentDefValObject
EndDropSchema

#BeginIndex
#CREATE INDEX AgentDefValObject0_ndx ON AgentDefValObject ("NAME")
#EndIndex 

BeginCreateSchema
create table PolicyObject(
"NAME" varchar(100) NOT NULL,
"GROUPNAME" varchar(100),
"STATUS" INTEGER,
"PERIOD" INTEGER,
"POLICYOBJECTCUSTOMIZER" varchar(50),
"HELPURL" varchar(100),
 PRIMARY KEY("NAME"),
index PolicyObject0_ndx ("NAME"))
EndCreateSchema

BeginDropSchema
drop table PolicyObject
EndDropSchema

#BeginIndex
#ALTER TABLE PolicyObject add index PolicyObject0_ndx ("NAME")
#EndIndex

BeginCreateSchema
create table PolicyActionCondition(
"NAME" varchar(100) NOT NULL,
"OBJKEY" varchar(100) NOT NULL,
"POLICYACTION" varchar(100),
"POLICYCONDITION" varchar(100),
PRIMARY KEY("NAME" , "OBJKEY"),
index PolicyActionCondition0_ndx ("NAME"))
EndCreateSchema

BeginDropSchema
drop table PolicyActionCondition
EndDropSchema

#BeginIndex
#ALTER TABLE PolicyActionCondition add index PolicyActionCondition0_ndx ("NAME")
#EndIndex

BeginCreateSchema
create table POLICYUSERPROPS(
"NAME" varchar( 100 ) NOT NULL, 
"OWNERNAME" varchar(25) NOT NULL,
"PROPNAME" varchar( 150 ) NOT NULL,
"PROPVAL" varchar( 150 ),
index POLICYUSERPROPS0_ndx ("NAME"),
index POLICYUSERPROPS1_ndx ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table POLICYUSERPROPS
drop index POLICYUSERPROPS0_ndx
drop index POLICYUSERPROPS1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE POLICYUSERPROPS add index POLICYUSERPROPS0_ndx ("NAME")
#ALTER TABLE POLICYUSERPROPS add index POLICYUSERPROPS1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table  DBPOLICY (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index dbpolicy0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table DBPOLICY
drop index dbpolicy0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE DBPOLICY add index dbpolicy0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table  PolicyScheduleTime (
"TIMEKEY" varchar( 250 ) NOT NULL,
"NAME" VARCHAR(250) NOT NULL )
EndCreateSchema

BeginDropSchema
drop table PolicyScheduleTime
EndDropSchema

BeginCreateSchema
create table AlertPolicyObject ( 
"NAME" varchar(80) NOT NULL,
"ACTIONNAME" varchar(80) NOT NULL,
"PROPKEY" varchar(80) NOT NULL,
"PROPVALUE" varchar(100),
PRIMARY KEY("NAME" , "ACTIONNAME" , "PROPKEY") )
EndCreateSchema

BeginDropSchema
drop table AlertPolicyObject
EndDropSchema

BeginCreateSchema
create table ENGINETABLE( 
"DBKEY" varchar(57) NOT NULL,
"HOST" varchar(50),
"PORT" varchar(5),
"ENGINENAME" varchar(50),
"ENGINEID" varchar(64),
"ENGINETIME" varchar(10),
"ENGINEBOOTS" varchar(10),
PRIMARY KEY ("DBKEY"))
EndCreateSchema

BeginDropSchema
drop table ENGINETABLE
EndDropSchema

BeginCreateSchema
create table USMTABLE( 
"DBKEY" varchar(116) NOT NULL,
"HOST" varchar(50),
"PORT" varchar(5), 
"ENGINENAME" varchar(50),
"ENGINEID" varchar(64), 
"USERNAME" varchar(50), 
"SECURITYLEVEL" varchar(5),
"SECURITYNAME" varchar(50), 
"AUTHPROTOCOL" varchar(10), 
"AUTHPASSWORD" varchar(255),
"AUTHKEY" varchar(255),
"PRIVPROTOCOL" varchar(10), 
"PRIVPASSWORD" varchar(255),
"PRIVKEY" varchar(255),
"ENGINETIME" varchar(10), 
"ENGINEBOOTS" varchar(10),
"LATESTRCVDENGTIME" varchar(10),
"USMLOCALTIME" varchar(30),
PRIMARY KEY ("DBKEY"))
EndCreateSchema

BeginDropSchema
drop table USMTABLE
EndDropSchema

BeginCreateSchema
create table SwitchObject ( 
"NAME" VARCHAR (100) NOT NULL , 
"OWNERNAME" VARCHAR (25) NOT NULL , 
"ROOTPORT" INTEGER , 
"ROOTCOST" INTEGER , 
"NUMPORTS" INTEGER , 
PRIMARY KEY ("NAME","OWNERNAME"),
index SwitchObject0_ndx  ("NAME"),
index SwitchObject1_ndx  ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SwitchObject  
drop index SwitchObject0_ndx
drop index SwitchObject1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE SwitchObject add index SwitchObject0_ndx  ("NAME") 
#ALTER TABLE SwitchObject add index SwitchObject1_ndx  ("OWNERNAME") 
#EndIndex

BeginCreateSchema
create table PortObject ( 
"NAME" VARCHAR (100) NOT NULL , 
"OWNERNAME" VARCHAR (25) NOT NULL , 
"PORTIFINDEX" INTEGER , 
"PORTIFDESCR" VARCHAR (100) , 
"PORTSTATE" VARCHAR (100) , 
"PORTIFSPEED" INTEGER , 
PRIMARY KEY ("NAME","OWNERNAME"),
index PortObject0_ndx  ("NAME"), 
index PortObject1_ndx  ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PortObject  
drop index PortObject0_ndx
drop index PortObject1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE PortObject add index PortObject0_ndx  ("NAME") 
#ALTER TABLE PortObject add index PortObject1_ndx  ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table Printer (
"NAME" VARCHAR (100) NOT NULL ,
"OWNERNAME" VARCHAR (25) NOT NULL , 
"DEVICESTATUS" INTEGER ,
"PRINTERSTATUS" INTEGER ,
"PRINTERDETECTEDERRSTATUS" INTEGER ,
"CONSOLEDISPBUFFERTEXT" VARCHAR (100) ,
PRIMARY KEY ("NAME"),
index Printer0_ndx  ("NAME"),
index Printer1_ndx  ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table Printer
EndDropSchema

#BeginIndex
#ALTER TABLE Printer add index Printer0_ndx  ("NAME")
#ALTER TABLE Printer add index Printer1_ndx  ("OWNERNAME")
#EndIndex

BeginDropConfigSchema
drop table ENGINES
EndDropConfigSchema

BeginDropConfigSchema
drop table HOSTS
EndDropConfigSchema

BeginDropConfigSchema
drop table PORTS
EndDropConfigSchema

BeginDropConfigSchema
drop table USERS
EndDropConfigSchema

BeginDropConfigSchema
drop table USERTABLE
EndDropConfigSchema



BeginCreateSchema
create table  OperationsTable ("USERNAME" VARCHAR(50) NOT NULL,
"OPERATIONID" BIGINT NOT NULL,
"TEMPLATENAME" VARCHAR(50),
"SCHEDULEDTIME" VARCHAR(50),
"STAGE" VARCHAR(50),
"STATUS" VARCHAR(50),
PRIMARY KEY ("USERNAME",
"OPERATIONID"))
EndCreateSchema

BeginDropSchema
drop table OperationsTable
EndDropSchema


BeginCreateSchema
create table BEFailOver (
"HOSTADDRESS" VARCHAR(50) NOT NULL,
"NMSBEPORT" INTEGER NOT NULL,
"RMIREGISTRYPORT" INTEGER,
"LASTCOUNT" BIGINT,
"SERVERROLE" VARCHAR(10),
"STANDBYSERVERNAME" VARCHAR(50),
index BEFailOver0_ndx ("HOSTADDRESS"),
index BEFailOver1_ndx ("NMSBEPORT"))
EndCreateSchema

BeginDropSchema
drop table BEFailOver
EndDropSchema


BeginCreateSchema
create table PollIDToKeyMap(
"NAME" VARCHAR(50),
"ID" BIGINT,
"AGENT" VARCHAR(50),
"OID" VARCHAR(200),
"STATSDATATABLENAME" VARCHAR(100),
"OWNERNAME" VARCHAR(25))
EndCreateSchema

BeginDropSchema
drop table PollIDToKeyMap
EndDropSchema


BeginCreateSchema
create table ProvisioningVariantProps (
"VARIANTID"  varchar(50)  NOT NULL,
"PROPNAME"  varchar(50),
"PROPVAL"  varchar(50))
EndCreateSchema

BeginDropSchema
drop table ProvisioningVariantProps
EndDropSchema


BeginCreateSchema
create table ProvisioningVariant (
"DESCRIPTION"  varchar(50),
"VARIANTID"  varchar(50)  NOT NULL,
PRIMARY KEY ("VARIANTID"),
index ProvisioningVariant0_ndx ("VARIANTID"))
EndCreateSchema

BeginDropSchema
drop table ProvisioningVariant
EndDropSchema


BeginCreateSchema
create table UserConfTable(
"USERNAME" varchar(50) NOT NULL,
"OWNERNAME" varchar(50) NOT NULL,
"STATUS" varchar(20) NOT NULL,
"PASSWORDEXPIRYTIME" BIGINT,
"USEREXPIRYTIME" BIGINT,
"PASSWORDAGE" INTEGER,
"USERAGE" INTEGER,
"DESCRIPTIVENAME" varchar(100) NOT NULL,
PRIMARY KEY ("USERNAME",
"OWNERNAME"),
index UserConfTable0_ndx("STATUS"))
EndCreateSchema

BeginDropSchema
drop table UserConfTable
EndDropSchema


BeginCreateSchema
create table CORBANode(
"MOID" BIGINT(20) NOT NULL,
"ORBCLASSNAME" varchar(100),
"NAMESERVICEHOST" varchar(100) NOT NULL,
"NAMESERVICEPORT" INTEGER,
"NAMEREF" VARCHAR(100),
"INTERFACENAME" VARCHAR(100),
"DICTIONARY" VARCHAR(100),
"STATUSPOLLCOMMAND" VARCHAR(100),
"STATUSPOLLIOR" BLOB,
"DATAPOLLIOR" BLOB,
PRIMARY KEY ("MOID"),
index CORBANode0_ndx("MOID"))
EndCreateSchema

BeginDropSchema
drop table CORBANode
EndDropSchema


BeginCreateSchema
create table NetworkInventory (
"LASTMODIFIEDTIME" varchar(25),
"MODEL"  varchar(50),
"TYPE"  varchar(50),
"CONTACT"  varchar(50),
"CLASSNAME"  varchar(50),
"MANAGEDOBJECTNAME"  varchar(50),
"OPERATIONALSTATUS"  varchar(50),
"NAME"  varchar(50)  NOT NULL,
"LOCATION"  varchar(50),
"ADMINSTATUS"  varchar(50),
"VENDOR"  varchar(50),
"DESCRIPTION"  varchar(50),
PRIMARY KEY ("NAME"),
index NetworkInventory0_ndx ("NAME"))
EndCreateSchema

BeginDropSchema
drop table NetworkInventory
EndDropSchema


BeginCreateSchema
create table UIDataIdVsPRId(
   "UIDATAID" BIGINT NOT NULL,
"PRID" BIGINT NOT NULL,
PRIMARY KEY("UIDATAID",
"PRID"),
index UIDataIdVsPRId0_Indx("PRID"))
EndCreateSchema

BeginDropSchema
drop table UIDataIdVsPRId
EndDropSchema


BeginCreateSchema
create table REPORTS_DAILY(
   "POLLID" BIGINT,
"INSTANCE" varchar(100),
"TTIME" BIGINT,
"VAL" BIGINT,
"MINVALUE" BIGINT,
"MAXVALUE" BIGINT,
"TINTERVAL"  BIGINT,
index REPORTS_DAILY0_ndx("POLLID"),
index REPORTS_DAILY2_ndx("TTIME"))
EndCreateSchema

BeginDropSchema
drop table REPORTS_DAILY
EndDropSchema


BeginCreateSchema
create table ProvisionResult(
   "PRID" BIGINT NOT NULL,
"TYPE" varchar(50),
"TEMPLATENAME" varchar(100),
"SCHEDULEDTIME" BIGINT,
"STARTTIME" BIGINT,
"DURATION" INTEGER,
"USERNAME" varchar(50),
"STATUS" varchar(50),
"DETAILS" varchar(250),
"PROGRESS" INTEGER,
PRIMARY KEY("PRID"),
index ProvisionResult0_Indx("PRID"))
EndCreateSchema

BeginDropSchema
drop table ProvisionResult
EndDropSchema


BeginCreateSchema
create table REPORTS_HOURLY(
   "POLLID" BIGINT,
"INSTANCE" varchar(100),
"TTIME" BIGINT,
"VAL" BIGINT,
"MINVALUE" BIGINT,
"MAXVALUE" BIGINT,
"TINTERVAL"  BIGINT,
index REPORTS_HOURLY0_ndx("POLLID"),
index REPORTS_HOURLY2_ndx("TTIME"))
EndCreateSchema

BeginDropSchema
drop table REPORTS_HOURLY
EndDropSchema


BeginCreateSchema
create table AuthAuditExt(
                 "AUTHAUDITID" INTEGER,
"USERNAME" varchar(30),
"OPERATION" varchar(100),
"AUDITTIME" varchar(30),
"STATUS" varchar(10),
"CATEGORY" varchar(25),
"AUDITEDOBJ"  varchar(100),
index AuthAuditExt0_ndx("AUTHAUDITID"))
EndCreateSchema

BeginDropSchema
drop table AuthAuditExt
EndDropSchema


BeginCreateSchema
create table UserInputData(
   "UIDATAID" BIGINT NOT NULL,
"TEMPLATENAME" varchar(100) NOT NULL,
"USERINPUTKEY" varchar(80) NOT NULL,
"USERINPUTVALUE" varchar(250),
PRIMARY KEY("UIDATAID",
"TEMPLATENAME",
"USERINPUTKEY"),
index UserInputData0_Indx("UIDATAID"),
index UserInputData1_Indx("TEMPLATENAME"))
EndCreateSchema

BeginDropSchema
drop table UserInputData
EndDropSchema


BeginCreateSchema
create table StageIdVsConfigId(
   "PRID" BIGINT NOT NULL,
"STAGEID" varchar(100) NOT NULL,
"CONFIGID" INTEGER NOT NULL,
PRIMARY KEY("PRID",
"STAGEID",
"CONFIGID"),
index StageIdVsConfigId0_Indx("PRID"),
index StageIdVsConfigId1_Indx("STAGEID"))
EndCreateSchema

BeginDropSchema
drop table StageIdVsConfigId
EndDropSchema

BeginCreateSchema
create table LoginAudit(
"AUTHAUDITID" INTEGER NOT NULL,
"USERNAME" varchar(30) NOT NULL,
"STATUS" varchar(10) NOT NULL,
"AUDITTIME" varchar(30) NOT NULL,
PRIMARY KEY("AUTHAUDITID"),
index LoginAudit_Indx("AUTHAUDITID"))
EndCreateSchema

BeginDropSchema
drop table LoginAudit
EndDropSchema

# Password Complexity changes BEGIN
BeginCreateSchema
create table CnpPasswords(
"ID" INTEGER AUTO_INCREMENT,
"USERNAME" varchar(50) NOT NULL,
"PASSWORD" varchar(100) NOT NULL,
"DATECHANGED" DATETIME NOT NULL,
PRIMARY KEY("ID"),
index CnpPasswords0_Indx("ID"),
index CnpPasswords1_Indx("USERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpPasswords
EndDropSchema


BeginCreateSchema
create table CnpPasswordData(
"ID" INTEGER,
"MAXPASSWORDS" INTEGER,
"DEGREESOFCHANGE" INTEGER,
"UPPERCASEPRESENT" BOOL,
"LOWERCASEPRESENT" BOOL,
"NUMBERPRESENT" BOOL,
"OTHERCHARACTERPRESENT" BOOL,
PRIMARY KEY("ID"),
index CnpPasswordData0_Indx("ID"))
EndCreateSchema

BeginDropSchema
drop table CnpPasswordData
EndDropSchema
# Password Complexity changes END

BeginCreateSchema
create table NetworkElementManagement (
"NAME"  VARCHAR(100)  NOT NULL PRIMARY KEY,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"NETWORKELEMENTID"  VARCHAR(100),
"NEDATALOCDIRPATH"  VARCHAR(100),
"KEYSTATSGRANULARITYPERIOD"  INTEGER ,
"RUNNINGSWVERSION"  VARCHAR(100),
"CONNECTIONAUDIT"  INTEGER,
"NERMIVERSION"  INTEGER ,
"NEMANAGERLOCATION"  VARCHAR(100),
"SWUPGRADESTATE"  INTEGER ,
"NEDATALOCIPADDRESS"  VARCHAR(100),
"ALTERNATETIMESERVER2"  VARCHAR(100),
"ALTERNATETIMESERVER1"  VARCHAR(100),
"SYNCHREQUIREDNOTIFICATIONTIMER"  INTEGER ,
"NEXTLOADSWVERSION"  VARCHAR(100),
"COMMVERIFICATIONTIMER"  INTEGER ,
"SOFTWARESYNCHRETRYTHRESHOLD"  INTEGER ,
"TIMESERVER"  VARCHAR(100),
"INFORMATIONAUDIT"  INTEGER ,
"SANITYNOTIFICATIONRETRYCOUNT"  INTEGER ,
"RETRYRESPONSETIMER"  INTEGER ,
"SYNCHREQUESTWAITTIMER"  INTEGER ,
"PRIMARYCODESERVER"  VARCHAR(100),
"NOTIFICATIONRESPONSETIMER"  INTEGER ,
"NOTIFICATIONRESPONSEMAXCOUNTER"  INTEGER ,
"SWUPGRADETYPE"  INTEGER ,
"SECONDARYCODESERVER"  VARCHAR(100),
"PRIMARYDATASERVER"  VARCHAR(100),
"NESNMPVERSION"  INTEGER ,
"SECONDARYDATASERVER"  VARCHAR(50)
)
EndCreateSchema


BeginDropSchema
drop table NetworkElementManagement
EndDropSchema

BeginIndex
CREATE INDEX NetworkElementManagement0_ndx ON NetworkElementManagement ("NAME")
EndIndex

############## start of NECF Tables Entries #############################

BeginCreateSchema
create table NECF (
"NECFPK" INTEGER NOT NULL,
"FILENAME" VARCHAR(100)NOT NULL,
"FILETYPE" VARCHAR(10) NOT NULL,
"STARTTIME" BIGINT, 
"SOFTWAREVERSION" VARCHAR(50) NOT NULL,
"FILEVERSION" INTEGER NOT NULL,
"INITIALFILEVERSION" INTEGER NOT NULL,
"CAGENAME" VARCHAR(100),
 PRIMARY KEY ("NECFPK"))
EndCreateSchema

BeginCreateSchema
create table NECF_CRT (
"NUM" INTEGER NOT NULL,
"ID" VARCHAR(100) NOT NULL, 
"CLASS" VARCHAR(50) NOT NULL, 
"CRTPK" VARCHAR(25) NOT NULL,
"NECFFK" INTEGER NOT NULL,
 PRIMARY KEY ("CRTPK"),
 CONSTRAINT NECFFK_NECFCRT FOREIGN KEY ("NECFFK") REFERENCES "NECF" ("NECFPK") ON DELETE CASCADE)
EndCreateSchema

BeginCreateSchema
create table NECF_REL (
"NUM" INTEGER NOT NULL,
"ACTION" VARCHAR(10) NOT NULL,
"TYPE" VARCHAR(50) NOT NULL,
"TAR_ID" VARCHAR(100) NOT NULL,
"TAR_CLASS" VARCHAR(50) NOT NULL,
"SRC_ID" VARCHAR(100) NOT NULL,
"SRC_CLASS" VARCHAR(50) NOT NULL,
"NECFFK" INTEGER NOT NULL,
"RELPK" VARCHAR(25) NOT NULL,
 PRIMARY KEY ("RELPK"),
CONSTRAINT NECFFK_REL FOREIGN KEY ("NECFFK") REFERENCES "NECF" ("NECFPK") ON DELETE CASCADE)
EndCreateSchema

BeginCreateSchema
create table NECF_DEL (
"NUM" INTEGER NOT NULL,
"ID" VARCHAR(100) NOT NULL,
"CLASS" VARCHAR(50) NOT NULL,
"DELPK" VARCHAR(25) NOT NULL,
"NECFFK" INTEGER NOT NULL,
 PRIMARY KEY ("DELPK"),
CONSTRAINT NECFFK_DEL FOREIGN KEY ("NECFFK") REFERENCES "NECF" ("NECFPK") ON DELETE CASCADE)
EndCreateSchema

BeginCreateSchema
create table NECF_MOD (
"NUM" INTEGER NOT NULL,
"MODPK" VARCHAR(25) NOT NULL,
"NECFFK" INTEGER NOT NULL,
 PRIMARY KEY ("MODPK"),
 CONSTRAINT NECFFK_MOD FOREIGN KEY ("NECFFK") REFERENCES "NECF" ("NECFPK") ON DELETE CASCADE)
EndCreateSchema

BeginCreateSchema
create table NECF_SET (
"ID" VARCHAR(100) NOT NULL,
"CLASS" VARCHAR(50) NOT NULL,
"SETPK" VARCHAR(25) NOT NULL,
"MODFK" VARCHAR(25) NOT NULL,
PRIMARY KEY ("SETPK"),
CONSTRAINT MODFK_SET FOREIGN KEY ("MODFK") REFERENCES "NECF_MOD" ("MODPK") ON DELETE CASCADE)
EndCreateSchema

BeginCreateSchema
create table NECF_OP (
"NUM" INTEGER NOT NULL,
"ID" VARCHAR(100) NOT NULL,
"CLASS" VARCHAR(50) NOT NULL,
"NA" VARCHAR(50) NOT NULL,
"NECFFK" INTEGER NOT NULL,
"OPPK" VARCHAR(25) NOT NULL,
PRIMARY KEY ("OPPK"),
CONSTRAINT NECFFK_OP FOREIGN KEY ("NECFFK") REFERENCES "NECF" ("NECFPK") ON DELETE CASCADE)
EndCreateSchema

BeginCreateSchema
create table NECF_IPPARAM (
"OPFK" VARCHAR(25) NOT NULL,
"IPPARAMPK" VARCHAR(25) NOT NULL,
PRIMARY KEY ("IPPARAMPK"),
CONSTRAINT OPFK_IPPARAM FOREIGN KEY ("OPFK") REFERENCES "NECF_OP" ("OPPK") ON DELETE CASCADE)
EndCreateSchema


BeginCreateSchema
create table NECF_OPPARAM (
"OPFK" VARCHAR(25) NOT NULL,
"OPPARAMPK" VARCHAR(25) NOT NULL,
PRIMARY KEY ("OPPARAMPK"),
CONSTRAINT OPFK_OPPARAM FOREIGN KEY ("OPFK") REFERENCES "NECF_OP" ("OPPK") ON DELETE CASCADE)
EndCreateSchema


BeginCreateSchema
create table NECF_ATTR (
"ATTRPK" INTEGER NOT NULL AUTO_INCREMENT,
"NA" VARCHAR(50) NOT NULL,
"VA" VARCHAR(1024) NOT NULL,
"RELFK" VARCHAR(25),
"CRTFK" VARCHAR(25),
"SETFK" VARCHAR(25) ,
"IPPARAMFK" VARCHAR(25) ,
"OPPARAMFK" VARCHAR(25) ,
 PRIMARY KEY ("ATTRPK"),
 CONSTRAINT RELFK_ATTR FOREIGN KEY ("RELFK") REFERENCES "NECF_REL" ("RELPK") ON DELETE CASCADE,
 CONSTRAINT CRTFK_ATTR FOREIGN KEY ("CRTFK") REFERENCES "NECF_CRT" ("CRTPK") ON DELETE CASCADE,
 CONSTRAINT SETFK_ATTR FOREIGN KEY ("SETFK") REFERENCES "NECF_SET" ("SETPK") ON DELETE CASCADE,
 CONSTRAINT IPPARAMFK_ATTR FOREIGN KEY ("IPPARAMFK") REFERENCES "NECF_IPPARAM" ("IPPARAMPK") ON DELETE CASCADE,
 CONSTRAINT OPPARAMFK_ATTR FOREIGN KEY ("OPPARAMFK") REFERENCES "NECF_OPPARAM" ("OPPARAMPK") ON DELETE CASCADE)
EndCreateSchema

BeginDropSchema
drop table NECF_ATTR
EndDropSchema
BeginDropSchema
drop table NECF_IPPARAM
EndDropSchema
BeginDropSchema
drop table NECF_OPPARAM
EndDropSchema
BeginDropSchema
drop table NECF_OP
EndDropSchema
BeginDropSchema
drop table NECF_REL
EndDropSchema
BeginDropSchema
drop table NECF_SET
EndDropSchema
BeginDropSchema
drop table NECF_MOD
EndDropSchema
BeginDropSchema
drop table NECF_CRT
EndDropSchema
BeginDropSchema
drop table NECF_DEL
EndDropSchema
BeginDropSchema
drop table NECF
EndDropSchema
############## end of NECF Tables Entries #############################


################# ATCA ########################
BeginCreateSchema
create table SBNE (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"SWUPGRADETYPE"  INTEGER   ,
"SWUPGRADESTATE"  INTEGER   ,
"RUNNINGSWVERSION"  VARCHAR(100),
"NEXTLOADSWVERSION"  VARCHAR(100),
"CONFIGSYNCHSTATE"  INTEGER   ,
"ALARMSYNCHSTATE"  INTEGER   ,
"STATUSSYNCHSTATE"  INTEGER   ,
"ENTITYIDENTIFIER"  BIGINT ,
"ENTITYTYPE"  BIGINT ,
"CURRENTSWVERSION"  VARCHAR(100),
"PREVIOUSSWVERSION"  VARCHAR(100),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SBNE
EndDropSchema

BeginCreateSchema
create table ProtectionGroup (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"NVALUE"  BIGINT ,
"OPSTATE"  INTEGER   ,
"ENTITYIDENTIFIER"  BIGINT ,
"ENTITYTYPE"  BIGINT ,
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table ProtectionGroup
EndDropSchema

BeginCreateSchema
create table PhysicalContainer (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"ADMINSTATE"  BIGINT ,
"USAGESTATE"  BIGINT ,
"AVAILABILITYSTATUS"  BIGINT ,
"REASONCODE"  BIGINT ,
"IPADDRESS"  VARCHAR(50),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PhysicalContainer
EndDropSchema

BeginCreateSchema
create table PhysicalElement (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL, 
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PhysicalElement
EndDropSchema

BeginCreateSchema
create table PhysicalEntity (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"ENTITYIDENTIFIER"  BIGINT ,
"ENTITYTYPE"  BIGINT ,
"OPSTATE"  BIGINT ,
"CONTROLSTATUS"  BIGINT ,
"SERIALNUMBER"  VARCHAR(50),
"HARDWAREREVISION"  VARCHAR(50),
"MANUFACTURERNAME"  VARCHAR(50),
"FRU"  VARCHAR(10),
"USERNAME"  VARCHAR(50),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PhysicalEntity
EndDropSchema

BeginCreateSchema
create table PhysicalSubUnit (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"REASONCODE"  BIGINT ,
"ADMINSTATE"  BIGINT ,
"USAGESTATE"  BIGINT ,
"AVAILABILITYSTATUS"  BIGINT ,
"REVERTIVEUNIT"  VARCHAR(100),
"PROTECTING"  VARCHAR(100),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PhysicalSubUnit
EndDropSchema

BeginCreateSchema
create table PhysicalUnit (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"ADMINSTATE"  BIGINT ,
"USAGESTATE"  BIGINT ,
"AVAILABILITYSTATUS"  BIGINT ,
"REASONCODE"  BIGINT ,
"REVERTIVEUNIT"  VARCHAR(100),
"PROTECTING"  VARCHAR(100),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PhysicalUnit
EndDropSchema

BeginCreateSchema
create table LogicalContainer (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"CONTROLSTATUS"  BIGINT ,
"AVAILABILITYSTATUS"  BIGINT ,
"USAGESTATE"  BIGINT ,
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table LogicalContainer
EndDropSchema

BeginCreateSchema
create table LogicalElement (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"ENTITYIDENTIFIER"  BIGINT ,
"ENTITYTYPE"  BIGINT ,
"OPSTATE"  BIGINT ,
"ADMINSTATE"  BIGINT ,
"REASONCODE"  BIGINT ,
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table LogicalElement
EndDropSchema

BeginCreateSchema
create table LogicalUnit (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"CONTROLSTATUS"  BIGINT ,
"AVAILABILITYSTATUS"  BIGINT ,
"USAGESTATE"  BIGINT ,
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table LogicalUnit
EndDropSchema

BeginCreateSchema
create table AttributeValueChangeEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"SOURCEINDICATOR"  INTEGER   ,
"ATTRIBUTEID"  VARCHAR(100),
"OLDATTRIBUTEVALUE"  VARCHAR(100),
"NEWATTRIBUTEVALUE"  VARCHAR(100),
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table AttributeValueChangeEvent
EndDropSchema

BeginCreateSchema
create table AvailabilityEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"IMPACTEDMANAGEDOBJECTCLASS"  VARCHAR(100),
"IMPACTEDMANAGEDOBJECTID"  VARCHAR(100),
"OUTAGEIMPACT"  INTEGER   ,
"OUTAGECAUSE"  INTEGER   ,
"OUTAGEDURATION"  INTEGER   ,
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table AvailabilityEvent
EndDropSchema

BeginCreateSchema
create table CNEOMIManagementEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"CNEOMIEVENTTYPE"  INTEGER   ,
"MGMTREASONCODE"  INTEGER   ,
"ADDITIONALDATA"  VARCHAR(8192),
"AUDITMISSEDAUTOPROVOUT"  INTEGER   ,
"AUDITMISSEDALARMSOUT"  INTEGER   ,
"AUDITEVENTBUFFEROVERFLOWOUT"  INTEGER   ,
"AUDITMISSEDSTATECHANGESOUT"  INTEGER   ,
"AUDITMISSEDKEYSTATSOUT"  INTEGER   ,
"AUDITLASTCONNECTIONTIMEOUT"  BIGINT ,
"AUDITMISSEDNEOWNEDDATAOUT"  INTEGER   ,
"COMPLETIONPERCENTAGE"  INTEGER   ,
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CNEOMIManagementEvent
EndDropSchema


BeginCreateSchema
create table ObjectCreationDeletionEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"SOURCEINDICATOR"  INTEGER   ,
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table ObjectCreationDeletionEvent
EndDropSchema

BeginCreateSchema
create table RelationObject (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"SOURCE"  VARCHAR(100),
"TARGET"  VARCHAR(100),
"MAPPINGPRIORITY"  INTEGER   ,
"RELATIONSHIP"  VARCHAR(50),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table RelationObject
EndDropSchema

BeginCreateSchema
create table RelationshipChangeEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"SOURCEINDICATOR"  INTEGER   ,
"OLDRELATIONSHIPID"  BIGINT ,
"NEWRELATIONSHIPID"  BIGINT ,
"SOURCEOBJECTCLASS"  VARCHAR(100),
"SOURCEOBJECTID"  VARCHAR(100),
"TARGETOBJECTCLASS"  VARCHAR(100),
"TARGETOBJECTID"  VARCHAR(100),
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table RelationshipChangeEvent
EndDropSchema

BeginCreateSchema
create table StateChangeEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"SOURCEINDICATOR"  INTEGER   ,
"OLDADMINSTATE"  INTEGER   ,
"NEWADMINSTATE"  INTEGER   ,
"OLDOPERATIONALSTATE"  INTEGER   ,
"NEWOPERATIONALSTATE"  INTEGER   ,
"OLDUSAGESTATE"  INTEGER   ,
"NEWUSAGESTATE"  INTEGER   ,
"OLDAVAILABILITYSTATUS"  INTEGER   ,
"NEWAVAILABILITYSTATUS"  INTEGER   ,
"OLDCONTROLSTATUS"  INTEGER   ,
"NEWCONTROLSTATUS"  INTEGER   ,
"OLDREASONCODE"  INTEGER   ,
"NEWREASONCODE"  INTEGER   ,
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table StateChangeEvent
EndDropSchema

BeginCreateSchema
create table UserDefinedEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"USERDEFINEDEVENTCATEGORY"  BIGINT ,
"USERDEFINEDEVENTID"  BIGINT ,
"ADDITIONALDATA"  VARCHAR(8192),
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table UserDefinedEvent
EndDropSchema

BeginCreateSchema
create table EMHEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"PROBABLECAUSE"  BIGINT ,
"SPECIFICPROBLEMS"  BIGINT ,
"BACKEDUPSTATUS"  INTEGER   ,
"BACKUPOBJECTCLASS"  VARCHAR(50),
"BACKUPOBJECTID"  VARCHAR(50),
"TRENDINDICATION"  BIGINT ,
"TRIGGEREDTHRESHOLD"  VARCHAR(100),
"THRESHOLDOBSERVEDVALUE"  VARCHAR(50),
"THRESHOLDUPDOWNINDICATOR"  INTEGER   ,
"THRESHOLDHIGH"  VARCHAR(100),
"THRESHOLDLOW"  VARCHAR(100),
"THRESHOLDARMTIME"  BIGINT ,
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table EMHEvent
EndDropSchema

BeginCreateSchema
create table EMHInfoEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"INVOKEDIDENTIFIER"  INTEGER   ,
"MANAGEDOBJECTCLASS"  VARCHAR(100),
"MANAGEDOBJECTID"  VARCHAR(100),
"MODE"  INTEGER   ,
"NOTIFICATIONID"  BIGINT ,
"CORRELATEDNOTIFICATION"  BIGINT ,
"ADDITIONALINFORMATION"  VARCHAR(256),
"CORRELATIONTAG"  BIGINT ,
"SEQUENCETAG"  BIGINT ,
"USERDEVICENAME"  VARCHAR(100),
"CORRELATED"  INTEGER   ,
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table EMHInfoEvent
EndDropSchema

BeginCreateSchema
create table EMHAlert (
"ENTITY"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"PROBABLECAUSE"  BIGINT ,
"SPECIFICPROBLEMS"  BIGINT ,
"BACKEDUPSTATUS"  INTEGER   ,
"BACKUPOBJECTCLASS"  VARCHAR(50),
"BACKUPOBJECTID"  VARCHAR(50),
"TRENDINDICATION"  INTEGER   ,
"TRIGGEREDTHRESHOLDCLASS"  VARCHAR(100),
"TRIGGEREDTHRESHOLDID"  VARCHAR(100),
"THRESHOLDOBSERVEDVALUE"  VARCHAR(50),
"THRESHOLDUPDOWNINDICATOR"  INTEGER   ,
"THRESHOLDHIGH"  VARCHAR(100),
"THRESHOLDLOW"  VARCHAR(100),
"THRESHOLDARMTIME"  BIGINT ,
"INVOKEDIDENTIFIER"  INTEGER   ,
"MANAGEDOBJECTCLASS"  VARCHAR(100),
"MANAGEDOBJECTID"  VARCHAR(100),
"MODE"  INTEGER   ,
"NOTIFICATIONID"  BIGINT ,
"CORRELATEDNOTIFICATION"  BIGINT ,
"ADDITIONALINFORMATION"  VARCHAR(256),
"CORRELATIONTAG"  BIGINT ,
"SEQUENCETAG"  BIGINT ,
"USERDEVICENAME"  VARCHAR(100),
"CORRELATED"  INTEGER   ,
PRIMARY KEY ("ENTITY", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table EMHAlert
EndDropSchema

BeginCreateSchema
create table DataObject(
"NAME" varchar(100) NOT NULL,
"OWNERNAME"  VARCHAR(50)  NOT NULL ,
"ENTITYIDENTIFIER" BIGINT,
"MONAME" varchar(100),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table DataObject
EndDropSchema

BeginIndex
CREATE INDEX DataObject0_ndx ON DataObject ("NAME")
EndIndex

BeginIndex
CREATE INDEX DataObject1_ndx ON DataObject ("OWNERNAME")
EndIndex

BeginCreateSchema
create table IpConfig (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(50)  NOT NULL ,
"IPFRAGTTL"  INTEGER ,

"IPDEFAULTTTL"  INTEGER ,
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table IpConfig
EndDropSchema

BeginIndex
CREATE INDEX IpConfig0_ndx ON IpConfig ("NAME")
EndIndex

BeginIndex
CREATE INDEX IpConfig1_ndx ON IpConfig ("OWNERNAME")
EndIndex

BeginCreateSchema
create table EventControl (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(50)  NOT NULL ,
"EVENTSPERINTERVAL"  INTEGER ,
"EVENTDELIVERYFLAG"  INTEGER ,
"PROGRESSINDICATIONGENERATIONINTERVAL"  INTEGER ,
"EVENTSECONDARYDESTINATION"  VARCHAR(100),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema


BeginDropSchema
drop table EventControl
EndDropSchema

BeginIndex
CREATE INDEX EventControl0_ndx ON EventControl ("NAME")
EndIndex

BeginIndex
CREATE INDEX EventControl1_ndx ON EventControl ("OWNERNAME")
EndIndex

BeginCreateSchema
create table MotoEmsRegistry (
"KeyName"  VARCHAR(100)  NOT NULL ,
"KeyValue"  VARCHAR(100)  NOT NULL ,
"dateChanged"  DATETIME NOT NULL ,
PRIMARY KEY ("KeyName"))
EndCreateSchema


BeginDropSchema
drop table MotoEmsRegistry
EndDropSchema


############ BEGINING OF CommonPlatform CODE GENERATION CODE [DO NOT EDIT] #################
############ END OF CommonPlatform CODE GENERATION CODE [DO NOT EDIT] ######################

############ BEGINING OF CustomizedPlatform CODE GENERATION CODE [DO NOT EDIT] #################
############ END OF CustomizedPlatform CODE GENERATION CODE [DO NOT EDIT] ######################

EndModules TopoDB-MapDB-EventDB-AlertDB-PollDB-PolicyDB-USERSTORAGEDB

#Do not edit the below lines. They are used for statistical data collection.

<STATS>
create table STATSDATA%(
POLLID BIGINT,
INSTANCE varchar(100),
TTIME BIGINT,
VAL BIGINT)
</STATS>

<STRING>
create table STRINGDATA%(
POLLID BIGINT,
INSTANCE varchar(100),
TTIME BIGINT,
VALUE varchar(200))
</STRING>
