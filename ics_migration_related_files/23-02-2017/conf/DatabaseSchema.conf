//$Id: DatabaseSchema.conf,v 1.124 2001/07/30 05:30:16 tsgovind Exp $
#Schema for MYSQL

BeginModules TopoDB-MapDB-EventDB-AlertDB-PollDB-PolicyDB-USERSTORAGEDB

BeginCreateSchema
create table ObjectTypes (
"OBJKEY" varchar( 100 ) NOT NULL , 
"CLASSNAME" varchar( 50 ) )
EndCreateSchema

BeginDropSchema
drop table ObjectTypes
EndDropSchema

BeginCreateSchema
create table ManagedObject( 
"NAME" varchar(100) NOT NULL,
"DISPLAYNAME" varchar(100) NOT NULL,
"PARENTKEY" varchar(100)  NOT NULL,
"TYPE" varchar(100),
"MANAGED" varchar(10),
"STATUS" INTEGER,
"FAILURETHRESHOLD" INTEGER,
"FAILURECOUNT" INTEGER,
"POLLINTERVAL" INTEGER,
"STATUSCHANGETIME" varchar(25),
"STATUSUPDATETIME" varchar(25),
"TESTER" varchar(100),
"UCLASS" varchar(100),
"CLASSNAME" varchar(100),
"WEBNMS" varchar(100),
"OWNERNAME" varchar(25) NOT NULL,
"STATUSPOLLENABLED" varchar(10),
"ISCONTAINER" varchar(10),
"ISGROUP" varchar(10),
"NENAME"  VARCHAR(100),
PRIMARY KEY ("NAME","OWNERNAME"),
index ManagedObject0_ndx("NAME"),
index ManagedObject1_ndx ("OWNERNAME"),
index ManagedObject2_ndx ("PARENTKEY"))
EndCreateSchema

BeginDropSchema
drop table ManagedObject
drop index ManagedObject0_ndx
drop index ManagedObject1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE ManagedObject add index ManagedObject0_ndx("NAME")
#ALTER TABLE ManagedObject add index ManagedObject1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table MapContainer(
"NAME" varchar(100) NOT NULL,
"OBJNAME" varchar(100)  NOT NULL,
"MAPNAME" varchar(100) NOT NULL,
"OWNERNAME" varchar(25) NOT NULL,
"LABEL" varchar(100),
"ICONNAME" varchar(100),
"MENUNAME" varchar(100),
"WIDTH" INTEGER,
"HEIGHT" INTEGER,
"X" INTEGER,
"Y" INTEGER,
"WEBNMS" varchar(100),
"GROUPNAME" varchar(100),
"ANCHORED" varchar(10),
"CURRENTTOPOLOGY" varchar(100),
"TOPOLOGY" varchar(100),
"CONTAINMENT"	varchar(10),		
"OBJTYPE" INTEGER,
"PARENTNAME" varchar(100),
PRIMARY KEY ( "NAME","MAPNAME","OWNERNAME" ),
index MapContainer0_ndx ("MAPNAME"),
index MapContainer1_ndx ("NAME"),
index MapContainer2_ndx ("OWNERNAME"),
index MapContainer3_ndx ("OBJNAME","OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table MapContainer
drop index MapContainer0_ndx
drop index MapContainer1_ndx
drop index MapContainer2_ndx
EndDropSchema

BeginCreateSchema
create table TopoObject( 
"NAME" varchar(100) NOT NULL,
"IPADDRESS" varchar(100),
"NETMASK" varchar(100),
"COMMUNITY" varchar(100),
"WRITECOMMUNITY" varchar(100),
"SNMPPORT" INTEGER,
"ISDHCP" varchar(10),
"BASEMIBS" varchar(100),
"OWNERNAME" varchar(25) NOT NULL,
"VERSION" varchar(100),
"USERNAME" varchar(100),
"CONTEXTNAME" varchar(100),
"ISSNMP" varchar(10),
"ISNODE" varchar(10),
"ISNETWORK" varchar(10),
"ISINTERFACE" varchar(10),
PRIMARY KEY ("NAME", "OWNERNAME"),
index TopoObject0_ndx ("NAME"),
index TopoObject1_ndx ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table TopoObject
drop index TopoObject0_ndx
drop index TopoObject1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE TopoObject add index TopoObject0_ndx ("NAME")
#ALTER TABLE TopoObject add index TopoObject1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table Node( 
"NAME" varchar(100) NOT NULL,
"ISROUTER" varchar(10),
"OWNERNAME" varchar(25) NOT NULL,
PRIMARY KEY ("NAME", "OWNERNAME"),
index Node0_ndx ("NAME"),
index Node1_ndx ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table Node
drop index Node0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE Node add index Node0_ndx ("NAME")
#ALTER TABLE Node add index Node1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table Network(
"NAME" varchar(100) NOT NULL,
"DISCOVER" varchar(10),
"DISCOVERYSTATUS" INTEGER,
"OWNERNAME" varchar(25) NOT NULL,
"PARENTNETWORK" varchar(100)  NOT NULL,
"PARENTNETMASK" varchar(100),
PRIMARY KEY ("NAME","OWNERNAME"),
index Network0_ndx ("NAME"),
index Network1_ndx ("OWNERNAME"),
index Network2_ndx ("PARENTNETWORK"))
EndCreateSchema

BeginDropSchema
drop table Network
drop index Network0_ndx
drop index Network1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE Network add index Network0_ndx ("NAME")
#ALTER TABLE Network add index Network1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table IpAddress( 
"NAME" varchar(100) NOT NULL,
"PARENTNODE" varchar(100) NOT NULL,
"PARENTNET" varchar(100) NOT NULL,
"OWNERNAME" varchar(25) NOT NULL,
PRIMARY KEY ("NAME", "OWNERNAME"),
index IpAddress0_ndx ( "NAME "),
index IpAddress1_ndx ( "OWNERNAME "),
index IpAddress2_ndx ( "PARENTNODE"),
index IpAddress3_ndx ( "PARENTNET"))
EndCreateSchema

BeginDropSchema
drop table IpAddress
drop index IpAddress0_ndx
drop index IpAddress1_ndx
drop index IpAddress2_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE IpAddress add index IpAddress0_ndx ( "NAME ")
#ALTER TABLE IpAddress add index IpAddress1_ndx ( "OWNERNAME ")
#ALTER TABLE IpAddress add index IpAddress2_ndx ( "PARENTNODE")
#ALTER TABLE IpAddress add index IpAddress3_ndx ( "PARENTNET")
#EndIndex

BeginCreateSchema
create table SnmpNode( 
"NAME" varchar(100) NOT NULL,
"HOSTNETMASK" varchar(100),
"SYSDESCR" varchar(200),
"SYSNAME" varchar(100),
"SYSOID" varchar(100),
"OWNERNAME" varchar(25) NOT NULL,
PRIMARY KEY ("NAME", "OWNERNAME"),
index SnmpNode0_ndx ("NAME"),
index SnmpNode1_ndx ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SnmpNode
drop index SnmpNode0_ndx
drop index SnmpNode1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE SnmpNode add index SnmpNode0_ndx ("NAME")
#ALTER TABLE SnmpNode add index SnmpNode1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table SnmpInterface( 
"NAME" varchar(100) NOT NULL,
"HOSTNETMASK" varchar(100),
"IFINDEX" INTEGER,
"PHYSMEDIA" varchar(100),
"PHYSADDR" varchar(100),
"IFSPEED" INTEGER,
"IFDESCR" varchar(200),
"SYSOID" varchar(100),
"OWNERNAME" varchar(25) NOT NULL,
PRIMARY KEY ("NAME", "OWNERNAME"),
index SnmpInterface0_ndx ("NAME"),
index SnmpInterface1_ndx ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SnmpInterface
drop index SnmpInterface0_ndx
drop index SnmpInterface1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE SnmpInterface add index SnmpInterface0_ndx ("NAME")
#ALTER TABLE SnmpInterface add index SnmpInterface1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table TL1Node (
"LOGINCOMMAND" VARCHAR (254) ,
"INITCOMMAND" VARCHAR (254) ,
"CONNECTIONHANDLER" VARCHAR (150) ,
"INFOCOMMAND" VARCHAR (254) ,
"DICTIONARY" VARCHAR (100) ,
"SESSIONID" VARCHAR (100) ,
"TL1PORT" INTEGER ,
"NOTIFYID" VARCHAR (100) ,
"NAME" VARCHAR (100) NOT NULL ,
"OWNERNAME" VARCHAR (25) NOT NULL ,
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table TL1Node
EndDropSchema

#BeginIndex
#CREATE INDEX TL1Node0_ndx ON TL1Node ("NAME")
#CREATE INDEX TL1Node1_ndx ON TL1Node ("OWNERNAME")
#EndIndex 

BeginCreateSchema
create table TL1Interface (
"STATPOLLCOMMAND" VARCHAR (254) ,
"CONNECTIONHANDLER" VARCHAR (150) ,
"DICTIONARY" VARCHAR (100) ,
"SESSIONID" VARCHAR (100) ,
"TL1PORT" INTEGER ,
"NAME" VARCHAR (100) NOT NULL ,
"OWNERNAME" VARCHAR (25) NOT NULL ,
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table TL1Interface
EndDropSchema

#BeginIndex
#CREATE INDEX TL1Interface0_ndx ON TL1Interface ("NAME")
#CREATE INDEX TL1Interface1_ndx ON TL1Interface ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table TOPOUSERPROPS(
"NAME" varchar( 100 ) NOT NULL, 
"OWNERNAME" varchar(25) NOT NULL,
"PROPNAME" varchar( 150 ) NOT NULL,
"PROPVAL" varchar( 150 ),
index TOPOUSERPROPS0_ndx ( "NAME"),
index TOPOUSERPROPS1_ndx ( "OWNERNAME")
)
EndCreateSchema

BeginDropSchema
drop table TOPOUSERPROPS
drop index TOPOUSERPROPS0_ndx
drop index TOPOUSERPROPS1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE TOPOUSERPROPS add index TOPOUSERPROPS0_ndx ( "NAME")
#ALTER TABLE TOPOUSERPROPS add index TOPOUSERPROPS1_ndx ( "OWNERNAME")
#EndIndex

BeginCreateSchema
create table ALERTUSERPROPS(
"NAME" varchar( 100 ) NOT NULL,
"OWNERNAME" varchar(25) NOT NULL,
"PROPNAME" varchar( 150 ) NOT  NULL,
"PROPVAL" varchar( 150 ),
index ALERTUSERPROPS0_ndx ( "NAME"),
index ALERTUSERPROPS1_ndx ( "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table ALERTUSERPROPS
drop index ALERTUSERPROPS0_ndx
drop index ALERTUSERPROPS1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE ALERTUSERPROPS add index ALERTUSERPROPS0_ndx ( "NAME")
#ALTER TABLE ALERTUSERPROPS add index ALERTUSERPROPS1_ndx ( "OWNERNAME")
#EndIndex

BeginCreateSchema
create table EVENTUSERPROPS(
"NAME" INTEGER NOT NULL,
"OWNERNAME" varchar(25) NOT NULL,
"PROPNAME" varchar( 150 ) NOT NULL,
"PROPVAL" varchar( 150 ),
index EVENTUSERPROPS0_ndx  ( "NAME"),
index EVENTUSERPROPS1_ndx  ( "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table EVENTUSERPROPS
drop index EVENTUSERPROPS0_ndx
drop index EVENTUSERPROPS1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE EVENTUSERPROPS add index EVENTUSERPROPS0_ndx  ( "NAME")
#ALTER TABLE EVENTUSERPROPS add index EVENTUSERPROPS1_ndx  ( "OWNERNAME")
#EndIndex

BeginCreateSchema
create table USERTABLE(
"DBKEY" varchar(105) NOT NULL,
"HOST" varchar(50),
"PORT" varchar(5),
"ENGINENAME" varchar(50), 
"USERNAME" varchar(50), 
"AUTHPROTOCOL" varchar(10), 
"AUTHPASSWORD" varchar(50),
"PRIVPROTOCOL" varchar(10), 
"PRIVPASSWORD" varchar(50),
PRIMARY KEY ("DBKEY"))
EndCreateSchema

BeginCreateSchema
create table HOSTS(
"HOSTNAMES" varchar(100) NOT NULL,
PRIMARY KEY ("HOSTNAMES"))
EndCreateSchema

BeginCreateSchema
create table PORTS(
"PORTS" varchar(100) NOT NULL,
PRIMARY KEY ("PORTS"))
EndCreateSchema

BeginCreateSchema
create table ENGINES(
"ENGINENAMES" varchar(100) NOT NULL,
PRIMARY KEY ("ENGINENAMES"))
EndCreateSchema

BeginCreateSchema
create table USERS(
"USERNAMES" varchar(100) NOT NULL,
PRIMARY KEY("USERNAMES"))
EndCreateSchema

BeginCreateSchema
create table POLLUSERPROPS(
"NAME" varchar( 100 ) NOT NULL,
"AGENT" varchar( 100 ) NOT NULL,
"OID" varchar( 200 ) NOT NULL,
"OWNERNAME" varchar(25) NOT NULL,
"PROPNAME" varchar( 150 ) NOT NULL,
"PROPVAL" varchar( 150 ),
index POLLUSERPROPS0_ndx ( "NAME"),
index POLLUSERPROPS1_ndx ( "AGENT"),
index POLLUSERPROPS2_ndx ( "OID"),
index POLLUSERPROPS3_ndx ( "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table POLLUSERPROPS
drop index POLLUSERPROPS0_ndx
drop index POLLUSERPROPS1_ndx
drop index POLLUSERPROPS2_ndx
drop index POLLUSERPROPS3_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE POLLUSERPROPS add index POLLUSERPROPS0_ndx ( "NAME")
#ALTER TABLE POLLUSERPROPS add index POLLUSERPROPS1_ndx ( "AGENT")
#ALTER TABLE POLLUSERPROPS add index POLLUSERPROPS2_ndx ( "OID")
#ALTER TABLE POLLUSERPROPS add index POLLUSERPROPS3_ndx ( "OWNERNAME")
#EndIndex

BeginCreateSchema
create table ANNOTATION (
"ENTITY" varchar( 100 ) NOT NULL, 
"WHO" varchar( 50 ) , 
"MODTIME" BIGINT , 
"OWNERNAME" varchar(25) NOT NULL,
"NOTES"  varchar(250 ),
index ANNOTATION0_ndx ( "ENTITY"),
index ANNOTATION1_ndx ( "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table ANNOTATION
drop index ANNOTATION0_ndx
drop index ANNOTATION1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE ANNOTATION add index ANNOTATION0_ndx ( "ENTITY")
#ALTER TABLE ANNOTATION add index ANNOTATION1_ndx ( "OWNERNAME")
#EndIndex

BeginCreateSchema
create table Alert ( 
"ID" INTEGER,
"GROUPNAME" varchar(100),
"CATEGORY" varchar(100),
"SEVERITY" INTEGER,
"PREVIOUSSEVERITY" INTEGER,
"ENTITY" varchar(100) NOT NULL,
"CREATETIME" BIGINT,
"MODTIME" BIGINT,
"MMESSAGE" varchar(200),
"SOURCE" varchar(100),
"MAPNAME" varchar(100),
"WHO" varchar(100),
"STAGE" INTEGER,
"WEBNMS" varchar(100),
"OWNERNAME" varchar(25) NOT NULL,
"PRIORITY" INTEGER,
PRIMARY KEY ("ENTITY", "OWNERNAME"),
index Alert0_ndx ("ENTITY"),
index Alert1_ndx ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table Alert
drop index Alert0_ndx
drop index Alert1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE Alert add index Alert0_ndx ("ENTITY")
#ALTER TABLE Alert add index Alert1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table MapDB( 
"NAME" varchar(100) NOT NULL,
"OWNERNAME" varchar(25) NOT NULL,
"PARENT" varchar(100),
"LABEL" varchar(100),
"MENUNAME" varchar(100),
"IMAGENAME" varchar(100),
"TREEICONFILENAME" varchar(100),
"AUTOPLACEMENT" varchar(10),
"ANCHORED" varchar(10),
"HELPDOC" varchar(100),
"TOPOLOGY" varchar(100),
"CURRENTTOPOLOGY" varchar(100),
"WEBNMS" varchar(100),
"GROUPNAME" varchar(100),
"MAPSYMBOLRENDERER" varchar(100),
"MAPLINKRENDERER" varchar(100),
"MAPLISTENER" varchar(100),
PRIMARY KEY ("NAME","OWNERNAME"),
index MapDB0_ndx ("NAME"),
index MapDB1_ndx ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table MapDB
drop index MapDB0_ndx
drop index MapDB1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE MapDB add index MapDB0_ndx ("NAME")
#EndIndex

BeginCreateSchema
create table MapSymbol( 
"NAME" varchar(100) NOT NULL,
"OBJNAME" varchar(100)  NOT NULL,
"MAPNAME" varchar(100) NOT NULL,
"OWNERNAME" varchar(25) NOT NULL,
"LABEL" varchar(100),
"ICONNAME" varchar(100),
"MENUNAME" varchar(100),
"WIDTH" varchar(25),
"HEIGHT" varchar(25),
"X" varchar(25),
"Y" varchar(25),
"OBJTYPE" INTEGER,	
"WEBNMS" varchar(100),
"GROUPNAME" varchar(100),
"PARENTNAME" varchar(100),
"ANCHORED" varchar(10),
PRIMARY KEY ("NAME","MAPNAME","OWNERNAME"),
index MapSymbol0_ndx ("NAME"),
index MapSymbol1_ndx ("MAPNAME"),
index MapSymbol2_ndx ("OWNERNAME"),
index MapSymbol3_ndx ("OBJNAME","OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table MapSymbol
drop index MapSymbol0_ndx
drop index MapSymbol1_ndx
drop index MapSymbol2_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE MapSymbol add index MapSymbol0_ndx ("NAME")
#EndIndex

#BeginIndex
#ALTER TABLE MapSymbol add index MapSymbol1_ndx ("MAPNAME")
#EndIndex

BeginCreateSchema
create table MapLink( 
"NAME" varchar(100) NOT NULL,
"SOURCE" varchar(100) NOT NULL ,
"DEST" varchar(100) NOT NULL ,
"MAPNAME" varchar(100) NOT NULL,
"OWNERNAME" varchar(25) NOT NULL,
"THICKNESS" INTEGER,
"LINKTYPE" INTEGER,
"LABEL" varchar(100),
"MENUNAME" varchar(100),
"NX" varchar(25),
"NY" varchar(25),
"X" varchar(25),
"Y" varchar(25),
"OBJNAME" varchar(100)  NOT NULL,
"STATUS"  varchar(25),	
"WEBNMS" varchar(100),
"GROUPNAME" varchar(100),
PRIMARY KEY ("NAME","MAPNAME","OWNERNAME"),
index MapLink0_ndx ("NAME"),
index MapLink1_ndx ("MAPNAME"),
index MapLink2_ndx ("OWNERNAME"),
index MapLink3_ndx ("OBJNAME","OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table MapLink
drop index MapLink0_ndx
drop index MapLink1_ndx
drop index MapLink2_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE MapLink add index MapLink0_ndx ("NAME")
#EndIndex

#BeginIndex
#ALTER TABLE MapLink add index MapLink1_ndx ("MAPNAME")
#EndIndex

BeginCreateSchema
create table MAPUSERPROPS(
"NAME" varchar( 100 ) NOT NULL,
"MAPNAME" varchar(100) NOT NULL,
"OWNERNAME" varchar(25) NOT NULL,
"PROPNAME" varchar( 150 ) NOT NULL,
"PROPVAL" varchar( 150 ),
index MAPUSERPROPS0_ndx ("NAME"),
index MAPUSERPROPS1_ndx ("MAPNAME"),
index MAPUSERPROPS2_ndx ("OWNERNAME"))

EndCreateSchema

BeginDropSchema
drop table MAPUSERPROPS
drop index MAPUSERPROPS0_ndx
drop index MAPUSERPROPS1_ndx
drop index MAPUSERPROPS2_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE MAPUSERPROPS add index MAPUSERPROPS0_ndx ("NAME")
#ALTER TABLE MAPUSERPROPS add index MAPUSERPROPS1_ndx ("MAPNAME")
#ALTER TABLE MAPUSERPROPS add index MAPUSERPROPS2_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table Event( 
"ID" INTEGER NOT NULL,
"TEXT" varchar(200),
"CATEGORY" varchar(100),
"DDOMAIN" varchar(100),
"NETWORK" varchar(100),
"NODE" varchar(100),
"ENTITY" varchar(100),
"SEVERITY" INTEGER,
"TTIME" BIGINT, 
"SOURCE" varchar(100),
"HELPURL" varchar(100),
"WEBNMS" varchar(100),
"GROUPNAME" varchar(100),
"OWNERNAME" varchar(25) NOT NULL,
PRIMARY KEY ("ID","OWNERNAME"),
index Event0_ndx ("ID"),
index Event1_ndx ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table Event
drop index Event0_ndx
drop index Event1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE Event add index Event0_ndx ("ID")
#ALTER TABLE Event add index Event1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table PolledData( 
"NAME" varchar(50) NOT NULL ,
"ID" BIGINT NOT NULL ,
"AGENT" varchar(50) NOT NULL ,
"COMMUNITY" varchar(100) NOT NULL ,
"PERIOD" INTEGER NOT NULL,
"ACTIVE" varchar(10),
"OID" varchar(200) NOT NULL,
"LOGDIRECTLY" varchar(10),
"LOGFILE" varchar(100),
"SSAVE" varchar(10),
"THRESHOLD" varchar(10),
"ISMULTIPLEPOLLEDDATA" varchar(10),
"PREVIOUSSEVERITY" INTEGER,
"NUMERICTYPE" INTEGER,
"SAVEABSOLUTES" varchar(10),
"TIMEAVG" varchar(10),
"PORT" INTEGER,
"WEBNMS" varchar(100),
"GROUPNAME" varchar(100),
"LASTCOUNTERVALUE" BIGINT ,
"LASTTIMEVALUE" BIGINT ,
"TIMEVAL" BIGINT NOT NULL ,
"POLICYNAME" varchar(100),
"THRESHOLDLIST" varchar(200),
"DNSNAME" varchar(100),
"SUFFIX" varchar(20),
"STATSDATATABLENAME" varchar(100),
"POLLERNAME" varchar(200),
"FAILURECOUNT" INTEGER,
"FAILURETHRESHOLD" INTEGER,
"OWNERNAME" varchar(25) NOT NULL,
"PARENTOBJ" varchar(100),
"PROTOCOL" varchar(50),
"SAVEPOLLCOUNT" INTEGER,
"CURRENTSAVECOUNT" INTEGER,
"SAVEONTHRESHOLD" varchar(10),
"SNMPVERSION" varchar(10),
"USERNAME" varchar(30),
"CONTEXTNAME" varchar(30),
PRIMARY KEY ("NAME","AGENT","OID","OWNERNAME"),
index PolledData0_ndx ( "NAME"),
index PolledData1_ndx ( "AGENT"),
index PolledData2_ndx ( "OID"),
index PolledData3_ndx ( "ID"),
index PolledData4_ndx ( "COMMUNITY"),
index PolledData5_ndx ( "PERIOD"),
index PolledData6_ndx ( "TIMEVAL"),
index PolledData7_ndx ( "OWNERNAME"),
index PolledData8_ndx ( "PARENTOBJ"))
EndCreateSchema

BeginDropSchema
drop table PolledData
drop index PolledData0_ndx
drop index PolledData1_ndx
drop index PolledData2_ndx
drop index PolledData3_ndx
drop index PolledData4_ndx
drop index PolledData5_ndx
drop index PolledData6_ndx
drop index PolledData7_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE PolledData add index PolledData0_ndx ( "NAME")
#EndIndex

#BeginIndex
#ALTER TABLE PolledData add index PolledData1_ndx ( "AGENT")
#EndIndex

#BeginIndex
#ALTER TABLE PolledData add index PolledData2_ndx ( "OID")
#EndIndex

#BeginIndex
#ALTER TABLE PolledData add index PolledData3_ndx ( "ID")
#EndIndex

#BeginIndex
#ALTER TABLE PolledData add index PolledData4_ndx ( "COMMUNITY")
#EndIndex

#BeginIndex
#ALTER TABLE PolledData add index PolledData5_ndx ( "PERIOD")
#EndIndex

#BeginIndex
#ALTER TABLE PolledData add index PolledData6_ndx ( "TIMEVAL")
#EndIndex

#BeginIndex
#ALTER TABLE PolledData add index PolledData7_ndx ( "OWNERNAME")
#EndIndex

BeginCreateSchema
create table  ALERTLOGGER (
"VALUESTRING" varchar( 250 ))
EndCreateSchema

BeginDropSchema
drop table ALERTLOGGER
EndDropSchema

BeginCreateSchema
create table  EVENTLOGGER (
"VALUESTRING" BIGINT NOT NULL,
"POSITION" INTEGER NOT NULL,
index EVENTLOGGER0_ndx ("POSITION"))
EndCreateSchema

BeginDropSchema
drop table EVENTLOGGER
drop index EVENTLOGGER0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE EVENTLOGGER add index EVENTLOGGER0_ndx ("POSITION")
#EndIndex

BeginCreateSchema
create table  CUSTOMMAPS (
"VALUESTRING" varchar( 250 ))
EndCreateSchema

BeginDropSchema
drop table CUSTOMMAPS
EndDropSchema

BeginCreateSchema
create table  DBINTERFACES (
"VALUESTRING" varchar( 250 ))
EndCreateSchema

BeginDropSchema
drop table DBINTERFACES
EndDropSchema

BeginCreateSchema
create table  DEFAULTMAPS (
"VALUESTRING" varchar( 250 ))
EndCreateSchema

BeginDropSchema
drop table DEFAULTMAPS
EndDropSchema

BeginCreateSchema
create table  TrapDisabledMO (
"Name" VARCHAR(250) NOT NULL,
"Type" varchar( 250 ),
PRIMARY KEY ("Name"))
EndCreateSchema

BeginDropSchema
drop table TrapDisabledMO
EndDropSchema

BeginCreateSchema
create table  CHILDRENSTATUS (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index CHILDRENSTATUS0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table CHILDRENSTATUS
drop index CHILDRENSTATUS0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE CHILDRENSTATUS add index CHILDRENSTATUS0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table CUSTOMPROPS (
"KEYSTRING" VARCHAR( 250 ) NOT NULL,
"PROPKEY" varchar( 250 ) ,
"PROPVALUE" varchar ( 250 ),
index CUSTOMPROPS0_ndx ("KEYSTRING") )
EndCreateSchema

#BeginIndex
#ALTER TABLE CUSTOMPROPS add index CUSTOMPROPS0_ndx ("KEYSTRING")
#EndIndex

BeginDropSchema
drop table CUSTOMPROPS
drop index CUSTOMPROPS0_ndx
EndDropSchema

BeginCreateSchema
create table  OBJECTSTOLINK (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
index OBJECTSTOLINK0_ndx ("KEYSTRING"))
EndCreateSchema

#BeginIndex
#ALTER TABLE OBJECTSTOLINK add index OBJECTSTOLINK0_ndx ("KEYSTRING")
#EndIndex

BeginDropSchema
drop table OBJECTSTOLINK
drop index OBJECTSTOLINK0_ndx
EndDropSchema


BeginCreateSchema
create table  TOPODBSPECIALKEY (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index TOPODBSPECIALKEY0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table TOPODBSPECIALKEY
drop index TOPODBSPECIALKEY0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE TOPODBSPECIALKEY add index TOPODBSPECIALKEY0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table  DBMAP (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index DBMAP0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table DBMAP
drop index DBMAP0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE DBMAP add index DBMAP0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table  DBEVENT (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index DBEVENT0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table DBEVENT
drop index DBEVENT0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE DBEVENT add index DBEVENT0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table  DBALERT (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index DBALERT0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table DBALERT
drop index DBALERT0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE DBALERT add index DBALERT0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table  DBPOLL (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index DBPOLL0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table DBPOLL
drop index DBPOLL0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE DBPOLL add index DBPOLL0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table  ObjectSchedulerRUNNABLE (
"VALUESTRING" varchar( 250 ) NOT NULL,
"TIMEVAL" BIGINT NOT NULL,
PRIMARY KEY ("VALUESTRING"),
index ObjectSchedulerRUNNABLE0_ndx ("TIMEVAL"),
index ObjectSchedulerRUNNABLE1_ndx ("VALUESTRING"))
EndCreateSchema

BeginDropSchema
drop table ObjectSchedulerRUNNABLE
drop index ObjectSchedulerRUNNABLE0_ndx
drop index ObjectSchedulerRUNNABLE1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE ObjectSchedulerRUNNABLE add index ObjectSchedulerRUNNABLE0_ndx ("TIMEVAL")
#EndIndex

#BeginIndex
#ALTER TABLE ObjectSchedulerRUNNABLE add index ObjectSchedulerRUNNABLE1_ndx ("VALUESTRING")
#EndIndex

BeginCreateSchema
create table MapGroup(
"NAME" varchar(100) NOT NULL,
"OBJNAME" varchar(100)  NOT NULL,
"MAPNAME" varchar(100) NOT NULL,
"OWNERNAME" varchar(25) NOT NULL,
"LABEL" varchar(100),
"ICONNAME" varchar(100),
"MENUNAME" varchar(100),
"WIDTH" INTEGER,
"HEIGHT" INTEGER,
"X" INTEGER,
"Y" INTEGER,
"WEBNMS" varchar(100),
"GROUPNAME" varchar(100),
"OBJTYPE" INTEGER,
"ANCHORED" varchar(10),
PRIMARY KEY ("NAME","MAPNAME","OWNERNAME"),
index MapGroup0_ndx ("MAPNAME"),
index MapGroup1_ndx ("NAME"),
index MapGroup2_ndx ("OWNERNAME"),
index MapGroup3_ndx ("OBJNAME","OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table MapGroup
drop index MapGroup0_ndx
drop index MapGroup1_ndx
drop index MapGroup2_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE MapGroup add index MapGroup0_ndx ("MAPNAME")
#EndIndex

#BeginIndex
#ALTER TABLE MapGroup add index MapGroup1_ndx ("NAME")
#EndIndex

BeginCreateSchema
create table ManagedGroupObject(
"NAME" varchar(100) NOT NULL PRIMARY KEY,
index ManagedGroupObject0_ndx ("NAME"))
EndCreateSchema

BeginDropSchema
drop table ManagedGroupObject
EndDropSchema

#BeginIndex
#ALTER TABLE ManagedGroupObject add index ManagedGroupObject0_ndx ("NAME")
#EndIndex

BeginCreateSchema
create table GroupTable (
"NAME" varchar(100) NOT NULL,
"OWNERNAME" varchar(25) NOT NULL,
"MEMBERNAME" varchar(100) NOT NULL,
"MEMBEROWNERNAME" varchar(25) NOT NULL )
EndCreateSchema

BeginDropSchema
drop table GroupTable
EndDropSchema

BeginCreateSchema
create table TaskAudit (
"EXECUTIONID" INTEGER,
"USERNAME" varchar(50),
"TASKNAME" varchar(100),
"DEVICELIST" text,
"DATASOURCE" varchar(50),
"EXECUTEDTIME" varchar(30))
EndCreateSchema

BeginDropSchema
drop table TaskAudit
EndDropSchema


BeginCreateSchema
create table DeviceAudit (
"ID" INTEGER,
"USERNAME" varchar(50),
"TASKNAME" varchar(50),
"SUBTASKNAME" varchar(50),
"DEVICENAME" varchar(50),
"TIMEOFSTART" varchar(30),
"TIMEOFFINISH" varchar(30),
"STATUS" varchar(15),
"ROLLBACKSTATUS" varchar(15),
"EXECUTIONID" INTEGER,
"DEVICELIST" varchar(50))
EndCreateSchema

BeginDropSchema
drop table DeviceAudit
EndDropSchema

BeginCreateSchema
create table AttributeAudit(
"ID" INTEGER,
"IDENTIFIER" varchar(100),
"TIMEOFFINISH" varchar(30),
"RETRIES" INTEGER,
"STATUS" varchar(200),
"OUTPUT" BLOB)
EndCreateSchema

BeginDropSchema
drop table AttributeAudit
EndDropSchema

BeginCreateSchema
create table ConfigTasks(
USERNAME varchar(50),
TASKNAME varchar(50),
PROTOCOL varchar(10),
VERSION varchar(10),
SUBTASKS varchar(200),
ROLLBACKNEEDED varchar(5),
ROLLBACKTYPE integer,
ROLLBACKDOCUMENT varchar(50),
MIBSTOBELOADED varchar(100),
DESCRIPTION text,
ISTEMPLATE varchar(5))
EndCreateSchema

BeginDropSchema
drop table ConfigTasks
EndDropSchema

BeginCreateSchema
create table ConfigTaskDetails(
AKEY  integer, 
USERNAME varchar(50),
TASKNAME varchar(50),
TYPE varchar(2),
PARENTKEY integer)
EndCreateSchema

BeginDropSchema
drop table ConfigTaskDetails
EndDropSchema

BeginCreateSchema
create table ConfigAttributes(
AKEY  varchar(120), 
NAME varchar(100),
VALUE varchar(250))
EndCreateSchema

BeginDropSchema
drop table ConfigAttributes
EndDropSchema

BeginCreateSchema
create table PendingTasks(
USERNAME varchar(50), 
TASKNAME varchar(50),
SUBTASKNAME varchar(50),
DEVICENAME varchar(50),
STATUS varchar(20),
PORT varchar(5),
RETRIES INTEGER,
TIMEOUT INTEGER,
AINDEX INTEGER,
EXECUTIONID INTEGER)
EndCreateSchema

BeginDropSchema
drop table PendingTasks
EndDropSchema

BeginCreateSchema
create table PendingDevices(
DKEY varchar(200), 
NAME varchar(200),
VALUE varchar(200))
EndCreateSchema

BeginDropSchema
drop table PendingDevices
EndDropSchema

BeginCreateSchema
create table DeviceList(
USERNAME varchar(50),
PROTOCOL varchar(10),
DEVICELISTNAME VARCHAR(50))
EndCreateSchema

BeginDropSchema
drop table DeviceList
EndDropSchema

BeginCreateSchema
create table DeviceListDetails(
DKEY VARCHAR(200),
DEVICENAME VARCHAR(50),
PORT varchar(5),
RETRIES INTEGER,
TIMEOUT INTEGER,
DEVICESEQUENCE INTEGER)
EndCreateSchema

BeginDropSchema
drop table DeviceListDetails
EndDropSchema


BeginCreateSchema
create table DeviceUserProps(
DKEY varchar(200), 
NAME varchar(200),
VALUE varchar(200))
EndCreateSchema

BeginDropSchema
drop table DeviceUserProps
EndDropSchema

BeginCreateSchema
create table TaskToDeviceListMap(
USERNAME VARCHAR(50),
TASKNAME VARCHAR(50),
DEVICELISTNAMES VARCHAR(200))
EndCreateSchema

BeginDropSchema
drop table TaskToDeviceListMap
EndDropSchema

BeginCreateSchema
create table PollingObjects(
NAME varchar(50) NOT NULL,
STATUS varchar(10),
PRIMARY KEY("NAME"))
EndCreateSchema

BeginCreateSchema
create table ConfigProvider (
PROTOCOL varchar(100) NOT NULL,
CONFIGPROVIDER varchar(100) NOT NULL )
EndCreateSchema

BeginDropSchema
drop table ConfigProvider
EndDropSchema

BeginDropSchema
drop table PollingObjects
EndDropSchema

BeginCreateSchema
create table PollingAttributes(
"NAME" varchar(50),
"TYPE" varchar(10),
"PROPERTY" varchar(20),
"`CONDITION`" varchar(50),
"VALUE" varchar(100))
EndCreateSchema

BeginDropSchema
drop table PollingAttributes
EndDropSchema

BeginCreateSchema
create table Providers(
"PROVIDERNAME" varchar(15) NOT NULL,
"VALUE" varchar(100),
PRIMARY KEY("PROVIDERNAME"))
EndCreateSchema

BeginDropSchema
drop table Providers
EndDropSchema

BeginCreateSchema
create table StatsTables(
TableName varchar(100) NOT NULL,
CreateSchema varchar(255),
PRIMARY KEY("TableName"))
EndCreateSchema

BeginDropSchema
drop table StatsTables
EndDropSchema


BeginCreateSchema
create table ThresholdObjects(
"NAME" varchar(20) NOT NULL,
"KIND" varchar(15),
"SEVERITY" INTEGER,
"TRIGGERSEVERITY" INTEGER,
"RESETSEVERITY" INTEGER,
"THRESHOLDTYPE" varchar(5),
"CATEGORY" varchar(20),
"THRESHOLDVALUE" BIGINT,
"REARMVALUE" BIGINT,
"MMESSAGE" varchar(100),
"CLEARMESSAGE" varchar(100),
"SENDCLEAR" varchar(10),
"ALLOWED" varchar(50),
"DISALLOWED" varchar(50),
"OID" varchar(50),
"OIDTYPE" varchar(10),
PRIMARY KEY("NAME"))
EndCreateSchema

BeginDropSchema
drop table ThresholdObjects
EndDropSchema

BeginCreateSchema
create table CustomView(
"MODULE" varchar(25) NOT NULL,
"VIEWID" varchar(50) NOT NULL,
"USERNAME" varchar(50) NOT NULL,
"VIEWNAME" varchar(100) NOT NULL,
"PARENT" varchar(50) NOT NULL,
"CONSTRAIN" varchar(200),
"SQLSTRING" text,
PRIMARY KEY ("VIEWID","USERNAME" ),
index CustomView0_ndx ("MODULE","USERNAME","VIEWNAME","PARENT"),
index CustomView1_ndx ("VIEWID","USERNAME" ))
EndCreateSchema

#BeginIndex
#ALTER TABLE CustomView add index CustomView0_ndx ("MODULE","USERNAME","VIEWNAME","PARENT")
#ALTER TABLE CustomView add index CustomView1_ndx ("VIEWID","USERNAME")
#EndIndex

BeginDropConfigSchema
drop table CustomView
drop index CustomView0_ndx
drop index CustomView1_ndx
EndDropConfigSchema

BeginCreateSchema
create table CustomViewProps(
"MODULE" varchar(25) NOT NULL,
"VIEWID" varchar(50) NOT NULL,
"USERNAME" varchar(50) NOT NULL,
"CRITERIAID" INTEGER NOT NULL,
"PROPKEY" varchar(100),
"OPERATOR" varchar(15),
"PROPVALUE1" varchar(100),
"PROPVALUE2" varchar(100),
PRIMARY KEY ("VIEWID","USERNAME","CRITERIAID"),
index CustomViewProps0_ndx ("VIEWID","USERNAME" ))
EndCreateSchema

#BeginIndex
#ALTER TABLE CustomViewProps add index CustomViewProps0_ndx ("VIEWID","USERNAME")
#EndIndex

BeginDropConfigSchema
drop table CustomViewProps
drop index CustomViewProps0_ndx
EndDropConfigSchema

BeginCreateSchema
create table CustomViewColumns(
"MODULE" varchar(25) NOT NULL,
"VIEWID" varchar(50) NOT NULL,
"USERNAME" varchar(50) NOT NULL,
"DISPLAYNAME" varchar(50),
"COLUMNNAME" varchar(50) NOT NULL,
"WIDTH" INTEGER,
"COLUMNINDEX" INTEGER,
PRIMARY KEY ("VIEWID","USERNAME","COLUMNNAME"),
index CustomViewColumns0_ndx ("VIEWID","USERNAME" ))
EndCreateSchema

#BeginIndex
#ALTER TABLE CustomViewColumns add index CustomViewColumns0_ndx ("VIEWID", "USERNAME")
#EndIndex

BeginDropConfigSchema
drop table CustomViewColumns
drop index CustomViewColumns0_ndx
EndDropConfigSchema

BeginCreateSchema
create table PanelTree (
"NODEID" VARCHAR(100) NOT NULL,
"NODETYPE" VARCHAR(100) NOT NULL,
"USERNAME" VARCHAR(50) NOT NULL,
"PARENT" VARCHAR(100),
"PREVIOUSNODE" VARCHAR(100), 
"MODULENAME" varchar(30),
PRIMARY KEY ("NODEID","USERNAME"))
EndCreateSchema

BeginDropConfigSchema
drop table PanelTree 
EndDropConfigSchema

BeginCreateSchema
create table PanelProps (
"NODEID" VARCHAR(100) NOT NULL,
"USERNAME" VARCHAR(50) NOT NULL,
"ATTRIBNAME" VARCHAR(30) NOT NULL,
"ATTRIBVALUE" VARCHAR(100),
PRIMARY KEY ("NODEID","USERNAME","ATTRIBNAME"))
EndCreateSchema

BeginDropConfigSchema
drop table PanelProps
EndDropConfigSchema

BeginCreateSchema
create table PollFilters(
CLASSNAME varchar(100) NOT NULL,
PRIMARY KEY("CLASSNAME"))
EndCreateSchema

BeginDropSchema
drop table PollFilters
EndDropSchema

BeginCreateSchema
create table GenericFaultTable ( 
"TYPE" varchar(100) NOT NULL,
"NAME" varchar(100) NOT NULL,
PRIMARY KEY ("TYPE","NAME"))
EndCreateSchema

BeginDropSchema
drop table GenericFaultTable
EndDropSchema

BeginCreateSchema
create table TrapFilter ( 
"NAME" varchar(100),
"ENTERPRISEOID" varchar(100),
"GT" varchar(10),
"ST" varchar(10),
"TRAPOID" varchar(100),
"CLASSNAME" varchar(100),
"STATE" varchar(50))
EndCreateSchema

BeginDropSchema
drop table TrapFilter
EndDropSchema

BeginCreateSchema
create table TrapEventParser ( 
"TYPE" varchar(100) NOT NULL,
"NAME" varchar(100) NOT NULL,
"PROPKEY" varchar(100),
"PROPVALUE" blob)
EndCreateSchema

BeginDropSchema
drop table TrapEventParser
EndDropSchema

BeginCreateSchema
create table EventAlertFilter ( 
"TYPE" varchar(100) NOT NULL,
"FILTERNAME" varchar(100) NOT NULL,
"ACTIONNAME" varchar(100),
"PROPKEY" varchar(100),
"PROPVALUE" blob)
EndCreateSchema

BeginDropSchema
drop table EventAlertFilter
EndDropSchema

BeginCreateSchema
create table Reports(
"CLASSNAME" varchar(100) NOT NULL,
"DAILY" varchar(10),
"WEEKLY" varchar(10),
"HOUR" varchar(100),
"MONTHDAYS" varchar(50),
"WEEKDAYS" varchar(50),
"TIMEVAL" BIGINT,
PRIMARY KEY("CLASSNAME"))
EndCreateSchema

BeginDropSchema
drop table Reports
EndDropSchema

BeginCreateSchema
create table DataCollectionAttributes(
"NAME" varchar(50),
"PROPKEY" varchar(50),
"PROPNAME" varchar(30),
"PROPVAL" varchar(200))
EndCreateSchema

BeginDropSchema
drop table DataCollectionAttributes
EndDropSchema

BeginCreateSchema
create table UserPasswordTable(
"USERNAME" varchar(50) NOT NULL,
"PASSWORD" varchar(100),
"OWNERNAME" varchar(50) NOT NULL,
PRIMARY KEY ("USERNAME","OWNERNAME"),
index UserPasswordTable0_ndx ("USERNAME"))
EndCreateSchema

BeginDropSchema
drop table UserPasswordTable
drop index UserPasswordTable0_ndx
EndDropSchema

BeginCreateSchema
create table UserGroupTable(
"USERNAME" varchar(50) NOT NULL,
"GROUPNAME" varchar(100) NOT NULL,
"OWNERNAME" varchar(50) NOT NULL,
PRIMARY KEY ("USERNAME","GROUPNAME","OWNERNAME"),
index UserGroupTable0_ndx ("USERNAME","GROUPNAME" ),
index UserGroupTable1_ndx ("USERNAME"),
index UserGroupTable2_ndx ("GROUPNAME"))
EndCreateSchema

BeginDropSchema
drop table UserGroupTable
drop index UserGroupTable0_ndx
drop index UserGroupTable1_ndx
drop index UserGroupTable2_ndx
EndDropSchema

BeginCreateSchema
create table ViewPropertiesTable(
"VIEWNAME" varchar(50) NOT NULL,
"PROPERTYNAME" varchar(50) NOT NULL,
"PROPERTYVALUE" varchar(50),
PRIMARY KEY ("VIEWNAME","PROPERTYNAME"),
index ViewPropertiesTable0_ndx ("VIEWNAME"))
EndCreateSchema

BeginDropSchema
drop table ViewPropertiesTable
drop index ViewPropertiesTable0_ndx
EndDropSchema

BeginCreateSchema
create table ViewsToGroupTable(
"VIEWNAME" varchar(50) NOT NULL,
"GROUPNAME" varchar(50) NOT NULL,
"OWNERNAME" varchar(50) NOT NULL,
PRIMARY KEY ("VIEWNAME","GROUPNAME","OWNERNAME"),
index ViewsToGroupTable0_ndx ("VIEWNAME","GROUPNAME"),
index ViewsToGroupTable1_ndx ("GROUPNAME"))
EndCreateSchema

BeginDropSchema
drop table ViewsToGroupTable
drop index ViewsToGroupTable0_ndx
drop index ViewsToGroupTable1_ndx
EndDropSchema

BeginCreateSchema
create table ViewToOperationsTable(
"VIEWNAME" varchar(50) NOT NULL,
"OPERATIONSNAME" varchar(50) NOT NULL,
"OPERATIONSTYPE" INTEGER,
PRIMARY KEY ("VIEWNAME","OPERATIONSNAME"))
EndCreateSchema

BeginDropSchema
drop table ViewToOperationsTable
EndDropSchema

BeginCreateSchema
create table OperationsTreeTable(
"PARENTOPERATION" varchar(50) NOT NULL,
"CHILDOPERATION" varchar(50) NOT NULL,
"LEAFNODE" INTEGER,
PRIMARY KEY ("PARENTOPERATION","CHILDOPERATION"),
index OperationsTreeTable0_ndx ("PARENTOPERATION"),
index OperationsTreeTable1_ndx ("CHILDOPERATION"))
EndCreateSchema

BeginDropSchema
drop table OperationsTreeTable
drop index OperationsTreeTable0_ndx
drop index OperationsTreeTable1_ndx
EndDropSchema

BeginCreateSchema
create table NamedViewToAuthorizedViewTable(
"NAMEDVIEWNAME" varchar(50) NOT NULL,
"AUTHORIZEDVIEWNAME" varchar(50) NOT NULL)
EndCreateSchema

BeginDropSchema
drop table NamedViewToAuthorizedViewTable
EndDropSchema
        
#by senthil
BeginCreateSchema
create table NotificationLog(
"NOTIINDEX" INTEGER NOT NULL,
"LOGTIME" BIGINT,
"NOVARBINDS" INTEGER,
"NOTIOID" varchar(100),
PRIMARY KEY ("NOTIINDEX"),
index NotificationLog0_ndx ("NOTIINDEX"))
EndCreateSchema

BeginDropSchema
drop table NotificationLog
drop index NotificationLog0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE NotificationLog add index NotificationLog0_ndx ("NOTIINDEX")
#EndIndex

BeginCreateSchema
create table VarBindLog(
"NOTIINDEX" INTEGER NOT NULL,
"VARINDEX" INTEGER NOT NULL,
"VARTYPE" INTEGER,
"VARVALUE" VARCHAR(200),
PRIMARY KEY ("NOTIINDEX","VARINDEX"),
index VarBindLog0_ndx ("NOTIINDEX"),
index VarBindLog1_ndx ("VARINDEX"))
EndCreateSchema

BeginDropSchema
drop table VarBindLog
drop index VarBindLog0_ndx
drop index VarBindLog1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE VarBindLog add index VarBindLog0_ndx ("NOTIINDEX")
#ALTER TABLE VarBindLog add index VarBindLog1_ndx ("VARINDEX")
#EndIndex

BeginCreateSchema
create table AgentDefValObject (
"NAME" VARCHAR (100) NOT NULL ,
"VALUE" VARCHAR (100) ,
PRIMARY KEY ("NAME"),
index AgentDefValObject0_ndx ("NAME"))
EndCreateSchema

BeginDropSchema
drop table AgentDefValObject
EndDropSchema

#BeginIndex
#CREATE INDEX AgentDefValObject0_ndx ON AgentDefValObject ("NAME")
#EndIndex 

BeginCreateSchema
create table PolicyObject(
"NAME" varchar(100) NOT NULL,
"GROUPNAME" varchar(100),
"STATUS" INTEGER,
"PERIOD" INTEGER,
"POLICYOBJECTCUSTOMIZER" varchar(50),
"HELPURL" varchar(100),
 PRIMARY KEY("NAME"),
index PolicyObject0_ndx ("NAME"))
EndCreateSchema

BeginDropSchema
drop table PolicyObject
EndDropSchema

#BeginIndex
#ALTER TABLE PolicyObject add index PolicyObject0_ndx ("NAME")
#EndIndex

BeginCreateSchema
create table PolicyActionCondition(
"NAME" varchar(100) NOT NULL,
"OBJKEY" varchar(100) NOT NULL,
"POLICYACTION" varchar(100),
"POLICYCONDITION" varchar(100),
PRIMARY KEY("NAME" , "OBJKEY"),
index PolicyActionCondition0_ndx ("NAME"))
EndCreateSchema

BeginDropSchema
drop table PolicyActionCondition
EndDropSchema

#BeginIndex
#ALTER TABLE PolicyActionCondition add index PolicyActionCondition0_ndx ("NAME")
#EndIndex

BeginCreateSchema
create table POLICYUSERPROPS(
"NAME" varchar( 100 ) NOT NULL, 
"OWNERNAME" varchar(25) NOT NULL,
"PROPNAME" varchar( 150 ) NOT NULL,
"PROPVAL" varchar( 150 ),
index POLICYUSERPROPS0_ndx ("NAME"),
index POLICYUSERPROPS1_ndx ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table POLICYUSERPROPS
drop index POLICYUSERPROPS0_ndx
drop index POLICYUSERPROPS1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE POLICYUSERPROPS add index POLICYUSERPROPS0_ndx ("NAME")
#ALTER TABLE POLICYUSERPROPS add index POLICYUSERPROPS1_ndx ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table  DBPOLICY (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"),
index dbpolicy0_ndx ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table DBPOLICY
drop index dbpolicy0_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE DBPOLICY add index dbpolicy0_ndx ("KEYSTRING")
#EndIndex

BeginCreateSchema
create table  PolicyScheduleTime (
"TIMEKEY" varchar( 250 ) NOT NULL,
"NAME" VARCHAR(250) NOT NULL )
EndCreateSchema

BeginDropSchema
drop table PolicyScheduleTime
EndDropSchema

BeginCreateSchema
create table AlertPolicyObject ( 
"NAME" varchar(80) NOT NULL,
"ACTIONNAME" varchar(80) NOT NULL,
"PROPKEY" varchar(80) NOT NULL,
"PROPVALUE" varchar(100),
PRIMARY KEY("NAME" , "ACTIONNAME" , "PROPKEY") )
EndCreateSchema

BeginDropSchema
drop table AlertPolicyObject
EndDropSchema

BeginCreateSchema
create table ENGINETABLE( 
"DBKEY" varchar(57) NOT NULL,
"HOST" varchar(50),
"PORT" varchar(5),
"ENGINENAME" varchar(50),
"ENGINEID" varchar(64),
"ENGINETIME" varchar(10),
"ENGINEBOOTS" varchar(10),
PRIMARY KEY ("DBKEY"))
EndCreateSchema

BeginDropSchema
drop table ENGINETABLE
EndDropSchema

BeginCreateSchema
create table USMTABLE( 
"DBKEY" varchar(116) NOT NULL,
"HOST" varchar(50),
"PORT" varchar(5), 
"ENGINENAME" varchar(50),
"ENGINEID" varchar(64), 
"USERNAME" varchar(50), 
"SECURITYLEVEL" varchar(5),
"SECURITYNAME" varchar(50), 
"AUTHPROTOCOL" varchar(10), 
"AUTHPASSWORD" varchar(255),
"AUTHKEY" varchar(255),
"PRIVPROTOCOL" varchar(10), 
"PRIVPASSWORD" varchar(255),
"PRIVKEY" varchar(255),
"ENGINETIME" varchar(10), 
"ENGINEBOOTS" varchar(10),
"LATESTRCVDENGTIME" varchar(10),
"USMLOCALTIME" varchar(30),
PRIMARY KEY ("DBKEY"))
EndCreateSchema

BeginDropSchema
drop table USMTABLE
EndDropSchema

BeginCreateSchema
create table SwitchObject ( 
"NAME" VARCHAR (100) NOT NULL , 
"OWNERNAME" VARCHAR (25) NOT NULL , 
"ROOTPORT" INTEGER , 
"ROOTCOST" INTEGER , 
"NUMPORTS" INTEGER , 
PRIMARY KEY ("NAME","OWNERNAME"),
index SwitchObject0_ndx  ("NAME"),
index SwitchObject1_ndx  ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SwitchObject  
drop index SwitchObject0_ndx
drop index SwitchObject1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE SwitchObject add index SwitchObject0_ndx  ("NAME") 
#ALTER TABLE SwitchObject add index SwitchObject1_ndx  ("OWNERNAME") 
#EndIndex

BeginCreateSchema
create table PortObject ( 
"NAME" VARCHAR (100) NOT NULL , 
"OWNERNAME" VARCHAR (25) NOT NULL , 
"PORTIFINDEX" INTEGER , 
"PORTIFDESCR" VARCHAR (100) , 
"PORTSTATE" VARCHAR (100) , 
"PORTIFSPEED" INTEGER , 
PRIMARY KEY ("NAME","OWNERNAME"),
index PortObject0_ndx  ("NAME"), 
index PortObject1_ndx  ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PortObject  
drop index PortObject0_ndx
drop index PortObject1_ndx
EndDropSchema

#BeginIndex
#ALTER TABLE PortObject add index PortObject0_ndx  ("NAME") 
#ALTER TABLE PortObject add index PortObject1_ndx  ("OWNERNAME")
#EndIndex

BeginCreateSchema
create table Printer (
"NAME" VARCHAR (100) NOT NULL ,
"OWNERNAME" VARCHAR (25) NOT NULL , 
"DEVICESTATUS" INTEGER ,
"PRINTERSTATUS" INTEGER ,
"PRINTERDETECTEDERRSTATUS" INTEGER ,
"CONSOLEDISPBUFFERTEXT" VARCHAR (100) ,
PRIMARY KEY ("NAME"),
index Printer0_ndx  ("NAME"),
index Printer1_ndx  ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table Printer
EndDropSchema

#BeginIndex
#ALTER TABLE Printer add index Printer0_ndx  ("NAME")
#ALTER TABLE Printer add index Printer1_ndx  ("OWNERNAME")
#EndIndex

BeginDropConfigSchema
drop table ENGINES
EndDropConfigSchema

BeginDropConfigSchema
drop table HOSTS
EndDropConfigSchema

BeginDropConfigSchema
drop table PORTS
EndDropConfigSchema

BeginDropConfigSchema
drop table USERS
EndDropConfigSchema

BeginDropConfigSchema
drop table USERTABLE
EndDropConfigSchema



BeginCreateSchema
create table  OperationsTable ("USERNAME" VARCHAR(50) NOT NULL,
"OPERATIONID" BIGINT NOT NULL,
"TEMPLATENAME" VARCHAR(50),
"SCHEDULEDTIME" VARCHAR(50),
"STAGE" VARCHAR(50),
"STATUS" VARCHAR(50),
PRIMARY KEY ("USERNAME",
"OPERATIONID"))
EndCreateSchema

BeginDropSchema
drop table OperationsTable
EndDropSchema


BeginCreateSchema
create table BEFailOver (
"HOSTADDRESS" VARCHAR(50) NOT NULL,
"NMSBEPORT" INTEGER NOT NULL,
"RMIREGISTRYPORT" INTEGER,
"LASTCOUNT" BIGINT,
"SERVERROLE" VARCHAR(10),
"STANDBYSERVERNAME" VARCHAR(50),
index BEFailOver0_ndx ("HOSTADDRESS"),
index BEFailOver1_ndx ("NMSBEPORT"))
EndCreateSchema

BeginDropSchema
drop table BEFailOver
EndDropSchema


BeginCreateSchema
create table PollIDToKeyMap(
"NAME" VARCHAR(50),
"ID" BIGINT,
"AGENT" VARCHAR(50),
"OID" VARCHAR(200),
"STATSDATATABLENAME" VARCHAR(100),
"OWNERNAME" VARCHAR(25))
EndCreateSchema

BeginDropSchema
drop table PollIDToKeyMap
EndDropSchema


BeginCreateSchema
create table ProvisioningVariantProps (
"VARIANTID"  varchar(50)  NOT NULL,
"PROPNAME"  varchar(50),
"PROPVAL"  varchar(50))
EndCreateSchema

BeginDropSchema
drop table ProvisioningVariantProps
EndDropSchema


BeginCreateSchema
create table ProvisioningVariant (
"DESCRIPTION"  varchar(50),
"VARIANTID"  varchar(50)  NOT NULL,
PRIMARY KEY ("VARIANTID"),
index ProvisioningVariant0_ndx ("VARIANTID"))
EndCreateSchema

BeginDropSchema
drop table ProvisioningVariant
EndDropSchema


BeginCreateSchema
create table UserConfTable(
"USERNAME" varchar(50) NOT NULL,
"OWNERNAME" varchar(50) NOT NULL,
"STATUS" varchar(20) NOT NULL,
"PASSWORDEXPIRYTIME" BIGINT,
"USEREXPIRYTIME" BIGINT,
"PASSWORDAGE" INTEGER,
"USERAGE" INTEGER,
"DESCRIPTIVENAME" varchar(100) NOT NULL,
PRIMARY KEY ("USERNAME",
"OWNERNAME"),
index UserConfTable0_ndx("STATUS"))
EndCreateSchema

BeginDropSchema
drop table UserConfTable
EndDropSchema


BeginCreateSchema
create table CORBANode(
"NAME" varchar(100) NOT NULL,
"OWNERNAME" varchar(100) NOT NULL,
"ORBCLASSNAME" varchar(100),
"NAMESERVICEHOST" varchar(100) NOT NULL,
"NAMESERVICEPORT" INTEGER,
"NAMEREF" VARCHAR(100),
"INTERFACENAME" VARCHAR(100),
"DICTIONARY" VARCHAR(100),
"STATUSPOLLCOMMAND" VARCHAR(100),
"STATUSPOLLIOR" BLOB,
"DATAPOLLIOR" BLOB,
PRIMARY KEY ("NAME",
"OWNERNAME" ),
index CORBANode0_ndx("NAME"),
index CORBANode1_ndx ("OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CORBANode
EndDropSchema


BeginCreateSchema
create table NetworkInventory (
"LASTMODIFIEDTIME" varchar(25),
"MODEL"  varchar(50),
"TYPE"  varchar(50),
"CONTACT"  varchar(50),
"CLASSNAME"  varchar(50),
"MANAGEDOBJECTNAME"  varchar(50),
"OPERATIONALSTATUS"  varchar(50),
"NAME"  varchar(50)  NOT NULL,
"LOCATION"  varchar(50),
"ADMINSTATUS"  varchar(50),
"VENDOR"  varchar(50),
"DESCRIPTION"  varchar(50),
PRIMARY KEY ("NAME"),
index NetworkInventory0_ndx ("NAME"))
EndCreateSchema

BeginDropSchema
drop table NetworkInventory
EndDropSchema


BeginCreateSchema
create table UIDataIdVsPRId(
   "UIDATAID" BIGINT NOT NULL,
"PRID" BIGINT NOT NULL,
PRIMARY KEY("UIDATAID",
"PRID"),
index UIDataIdVsPRId0_Indx("PRID"))
EndCreateSchema

BeginDropSchema
drop table UIDataIdVsPRId
EndDropSchema


BeginCreateSchema
create table REPORTS_DAILY(
   "POLLID" BIGINT,
"INSTANCE" varchar(100),
"TTIME" BIGINT,
"VAL" BIGINT,
"MINVALUE" BIGINT,
"MAXVALUE" BIGINT,
"TINTERVAL"  BIGINT,
index REPORTS_DAILY0_ndx("POLLID"),
index REPORTS_DAILY2_ndx("TTIME"))
EndCreateSchema

BeginDropSchema
drop table REPORTS_DAILY
EndDropSchema


BeginCreateSchema
create table ProvisionResult(
   "PRID" BIGINT NOT NULL,
"TYPE" varchar(50),
"TEMPLATENAME" varchar(100),
"SCHEDULEDTIME" BIGINT,
"STARTTIME" BIGINT,
"DURATION" INTEGER,
"USERNAME" varchar(50),
"STATUS" varchar(50),
"DETAILS" varchar(250),
"PROGRESS" INTEGER,
PRIMARY KEY("PRID"),
index ProvisionResult0_Indx("PRID"))
EndCreateSchema

BeginDropSchema
drop table ProvisionResult
EndDropSchema


BeginCreateSchema
create table REPORTS_HOURLY(
   "POLLID" BIGINT,
"INSTANCE" varchar(100),
"TTIME" BIGINT,
"VAL" BIGINT,
"MINVALUE" BIGINT,
"MAXVALUE" BIGINT,
"TINTERVAL"  BIGINT,
index REPORTS_HOURLY0_ndx("POLLID"),
index REPORTS_HOURLY2_ndx("TTIME"))
EndCreateSchema

BeginDropSchema
drop table REPORTS_HOURLY
EndDropSchema


BeginCreateSchema
create table AuthAudit(
                 "AUTHAUDITID" INTEGER,
"USERNAME" varchar(30),
"OPERATION" varchar(100),
"AUDITTIME" varchar(30),
"STATUS" varchar(10),
"CATEGORY" varchar(25),
"AUDITEDOBJ"  varchar(100),
index AuthAuditExt0_ndx("AUTHAUDITID"))
EndCreateSchema

BeginDropSchema
drop table AuthAuditExt
EndDropSchema


BeginCreateSchema
create table UserInputData(
   "UIDATAID" BIGINT NOT NULL,
"TEMPLATENAME" varchar(100) NOT NULL,
"USERINPUTKEY" varchar(80) NOT NULL,
"USERINPUTVALUE" varchar(250),
PRIMARY KEY("UIDATAID",
"TEMPLATENAME",
"USERINPUTKEY"),
index UserInputData0_Indx("UIDATAID"),
index UserInputData1_Indx("TEMPLATENAME"))
EndCreateSchema

BeginDropSchema
drop table UserInputData
EndDropSchema


BeginCreateSchema
create table StageIdVsConfigId(
   "PRID" BIGINT NOT NULL,
"STAGEID" varchar(100) NOT NULL,
"CONFIGID" INTEGER NOT NULL,
PRIMARY KEY("PRID",
"STAGEID",
"CONFIGID"),
index StageIdVsConfigId0_Indx("PRID"),
index StageIdVsConfigId1_Indx("STAGEID"))
EndCreateSchema

BeginDropSchema
drop table StageIdVsConfigId
EndDropSchema

BeginCreateSchema
create table LoginAudit(
"AUTHAUDITID" INTEGER NOT NULL,
"USERNAME" varchar(30) NOT NULL,
"STATUS" varchar(10) NOT NULL,
"AUDITTIME" varchar(30) NOT NULL,
PRIMARY KEY("AUTHAUDITID"),
index LoginAudit_Indx("AUTHAUDITID"))
EndCreateSchema

BeginDropSchema
drop table LoginAudit
EndDropSchema

# Password Complexity changes BEGIN
BeginCreateSchema
create table CnpPasswords(
"ID" INTEGER AUTO_INCREMENT,
"USERNAME" varchar(50) NOT NULL,
"PASSWORD" varchar(100) NOT NULL,
"DATECHANGED" DATETIME NOT NULL,
PRIMARY KEY("ID"),
index CnpPasswords0_Indx("ID"),
index CnpPasswords1_Indx("USERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpPasswords
EndDropSchema


BeginCreateSchema
create table CnpPasswordData(
"ID" INTEGER,
"MAXPASSWORDS" INTEGER,
"DEGREESOFCHANGE" INTEGER,
"UPPERCASEPRESENT" BOOL,
"LOWERCASEPRESENT" BOOL,
"NUMBERPRESENT" BOOL,
"OTHERCHARACTERPRESENT" BOOL,
PRIMARY KEY("ID"),
index CnpPasswordData0_Indx("ID"))
EndCreateSchema

BeginDropSchema
drop table CnpPasswordData
EndDropSchema
# Password Complexity changes END

BeginCreateSchema
create table NetworkElementManagement (
"NAME"  VARCHAR(100)  NOT NULL PRIMARY KEY,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"NETWORKELEMENTID"  VARCHAR(100),
"NEDATALOCDIRPATH"  VARCHAR(100),
"KEYSTATSGRANULARITYPERIOD"  INTEGER ,
"RUNNINGSWVERSION"  VARCHAR(100),
"CONNECTIONAUDIT"  INTEGER,
"NERMIVERSION"  INTEGER ,
"NEMANAGERLOCATION"  VARCHAR(100),
"SWUPGRADESTATE"  INTEGER ,
"NEDATALOCIPADDRESS"  VARCHAR(100),
"ALTERNATETIMESERVER2"  VARCHAR(100),
"ALTERNATETIMESERVER1"  VARCHAR(100),
"SYNCHREQUIREDNOTIFICATIONTIMER"  INTEGER ,
"NEXTLOADSWVERSION"  VARCHAR(100),
"COMMVERIFICATIONTIMER"  INTEGER ,
"SOFTWARESYNCHRETRYTHRESHOLD"  INTEGER ,
"TIMESERVER"  VARCHAR(100),
"INFORMATIONAUDIT"  INTEGER ,
"SANITYNOTIFICATIONRETRYCOUNT"  INTEGER ,
"RETRYRESPONSETIMER"  INTEGER ,
"SYNCHREQUESTWAITTIMER"  INTEGER ,
"PRIMARYCODESERVER"  VARCHAR(100),
"NOTIFICATIONRESPONSETIMER"  INTEGER ,
"NOTIFICATIONRESPONSEMAXCOUNTER"  INTEGER ,
"SWUPGRADETYPE"  INTEGER ,
"SECONDARYCODESERVER"  VARCHAR(100),
"PRIMARYDATASERVER"  VARCHAR(100),
"NESNMPVERSION"  INTEGER ,
"SECONDARYDATASERVER"  VARCHAR(50)
)
EndCreateSchema


BeginDropSchema
drop table NetworkElementManagement
EndDropSchema

BeginIndex
CREATE INDEX NetworkElementManagement0_ndx ON NetworkElementManagement ("NAME")
EndIndex

############## start of NECF Tables Entries #############################

BeginCreateSchema
create table NECF (
"NECFPK" INTEGER NOT NULL,
"FILENAME" VARCHAR(100)NOT NULL,
"FILETYPE" VARCHAR(10) NOT NULL,
"STARTTIME" BIGINT, 
"SOFTWAREVERSION" VARCHAR(50) NOT NULL,
"FILEVERSION" INTEGER NOT NULL,
"INITIALFILEVERSION" INTEGER NOT NULL,
"CAGENAME" VARCHAR(100),
 PRIMARY KEY ("NECFPK"))
EndCreateSchema

BeginCreateSchema
create table NECF_CRT (
"NUM" INTEGER NOT NULL,
"ID" VARCHAR(100) NOT NULL, 
"CLASS" VARCHAR(50) NOT NULL, 
"CRTPK" VARCHAR(25) NOT NULL,
"NECFFK" INTEGER NOT NULL,
 PRIMARY KEY ("CRTPK"),
 CONSTRAINT NECFFK_NECFCRT FOREIGN KEY ("NECFFK") REFERENCES "NECF" ("NECFPK") ON DELETE CASCADE)
EndCreateSchema

BeginCreateSchema
create table NECF_REL (
"NUM" INTEGER NOT NULL,
"ACTION" VARCHAR(10) NOT NULL,
"TYPE" VARCHAR(50) NOT NULL,
"TAR_ID" VARCHAR(100) NOT NULL,
"TAR_CLASS" VARCHAR(50) NOT NULL,
"SRC_ID" VARCHAR(100) NOT NULL,
"SRC_CLASS" VARCHAR(50) NOT NULL,
"NECFFK" INTEGER NOT NULL,
"RELPK" VARCHAR(25) NOT NULL,
 PRIMARY KEY ("RELPK"),
CONSTRAINT NECFFK_REL FOREIGN KEY ("NECFFK") REFERENCES "NECF" ("NECFPK") ON DELETE CASCADE)
EndCreateSchema

BeginCreateSchema
create table NECF_DEL (
"NUM" INTEGER NOT NULL,
"ID" VARCHAR(100) NOT NULL,
"CLASS" VARCHAR(50) NOT NULL,
"DELPK" VARCHAR(25) NOT NULL,
"NECFFK" INTEGER NOT NULL,
 PRIMARY KEY ("DELPK"),
CONSTRAINT NECFFK_DEL FOREIGN KEY ("NECFFK") REFERENCES "NECF" ("NECFPK") ON DELETE CASCADE)
EndCreateSchema

BeginCreateSchema
create table NECF_MOD (
"NUM" INTEGER NOT NULL,
"MODPK" VARCHAR(25) NOT NULL,
"NECFFK" INTEGER NOT NULL,
 PRIMARY KEY ("MODPK"),
 CONSTRAINT NECFFK_MOD FOREIGN KEY ("NECFFK") REFERENCES "NECF" ("NECFPK") ON DELETE CASCADE)
EndCreateSchema

BeginCreateSchema
create table NECF_SET (
"ID" VARCHAR(100) NOT NULL,
"CLASS" VARCHAR(50) NOT NULL,
"SETPK" VARCHAR(25) NOT NULL,
"MODFK" VARCHAR(25) NOT NULL,
PRIMARY KEY ("SETPK"),
CONSTRAINT MODFK_SET FOREIGN KEY ("MODFK") REFERENCES "NECF_MOD" ("MODPK") ON DELETE CASCADE)
EndCreateSchema

BeginCreateSchema
create table NECF_OP (
"NUM" INTEGER NOT NULL,
"ID" VARCHAR(100) NOT NULL,
"CLASS" VARCHAR(50) NOT NULL,
"NA" VARCHAR(50) NOT NULL,
"NECFFK" INTEGER NOT NULL,
"OPPK" VARCHAR(25) NOT NULL,
PRIMARY KEY ("OPPK"),
CONSTRAINT NECFFK_OP FOREIGN KEY ("NECFFK") REFERENCES "NECF" ("NECFPK") ON DELETE CASCADE)
EndCreateSchema

BeginCreateSchema
create table NECF_IPPARAM (
"OPFK" VARCHAR(25) NOT NULL,
"IPPARAMPK" VARCHAR(25) NOT NULL,
PRIMARY KEY ("IPPARAMPK"),
CONSTRAINT OPFK_IPPARAM FOREIGN KEY ("OPFK") REFERENCES "NECF_OP" ("OPPK") ON DELETE CASCADE)
EndCreateSchema


BeginCreateSchema
create table NECF_OPPARAM (
"OPFK" VARCHAR(25) NOT NULL,
"OPPARAMPK" VARCHAR(25) NOT NULL,
PRIMARY KEY ("OPPARAMPK"),
CONSTRAINT OPFK_OPPARAM FOREIGN KEY ("OPFK") REFERENCES "NECF_OP" ("OPPK") ON DELETE CASCADE)
EndCreateSchema


BeginCreateSchema
create table NECF_ATTR (
"ATTRPK" INTEGER NOT NULL AUTO_INCREMENT,
"NA" VARCHAR(50) NOT NULL,
"VA" VARCHAR(1024) NOT NULL,
"RELFK" VARCHAR(25),
"CRTFK" VARCHAR(25),
"SETFK" VARCHAR(25) ,
"IPPARAMFK" VARCHAR(25) ,
"OPPARAMFK" VARCHAR(25) ,
 PRIMARY KEY ("ATTRPK"),
 CONSTRAINT RELFK_ATTR FOREIGN KEY ("RELFK") REFERENCES "NECF_REL" ("RELPK") ON DELETE CASCADE,
 CONSTRAINT CRTFK_ATTR FOREIGN KEY ("CRTFK") REFERENCES "NECF_CRT" ("CRTPK") ON DELETE CASCADE,
 CONSTRAINT SETFK_ATTR FOREIGN KEY ("SETFK") REFERENCES "NECF_SET" ("SETPK") ON DELETE CASCADE,
 CONSTRAINT IPPARAMFK_ATTR FOREIGN KEY ("IPPARAMFK") REFERENCES "NECF_IPPARAM" ("IPPARAMPK") ON DELETE CASCADE,
 CONSTRAINT OPPARAMFK_ATTR FOREIGN KEY ("OPPARAMFK") REFERENCES "NECF_OPPARAM" ("OPPARAMPK") ON DELETE CASCADE)
EndCreateSchema

BeginDropSchema
drop table NECF_ATTR
EndDropSchema
BeginDropSchema
drop table NECF_IPPARAM
EndDropSchema
BeginDropSchema
drop table NECF_OPPARAM
EndDropSchema
BeginDropSchema
drop table NECF_OP
EndDropSchema
BeginDropSchema
drop table NECF_REL
EndDropSchema
BeginDropSchema
drop table NECF_SET
EndDropSchema
BeginDropSchema
drop table NECF_MOD
EndDropSchema
BeginDropSchema
drop table NECF_CRT
EndDropSchema
BeginDropSchema
drop table NECF_DEL
EndDropSchema
BeginDropSchema
drop table NECF
EndDropSchema
############## end of NECF Tables Entries #############################


################# ATCA ########################
BeginCreateSchema
create table SBNE (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"SWUPGRADETYPE"  INTEGER   ,
"SWUPGRADESTATE"  INTEGER   ,
"RUNNINGSWVERSION"  VARCHAR(100),
"NEXTLOADSWVERSION"  VARCHAR(100),
"CONFIGSYNCHSTATE"  INTEGER   ,
"ALARMSYNCHSTATE"  INTEGER   ,
"STATUSSYNCHSTATE"  INTEGER   ,
"ENTITYIDENTIFIER"  BIGINT ,
"ENTITYTYPE"  BIGINT ,
"CURRENTSWVERSION"  VARCHAR(100),
"PREVIOUSSWVERSION"  VARCHAR(100),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SBNE
EndDropSchema

BeginCreateSchema
create table ProtectionGroup (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"NVALUE"  BIGINT ,
"OPSTATE"  INTEGER   ,
"ENTITYIDENTIFIER"  BIGINT ,
"ENTITYTYPE"  BIGINT ,
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table ProtectionGroup
EndDropSchema

BeginCreateSchema
create table PhysicalContainer (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"ADMINSTATE"  BIGINT ,
"USAGESTATE"  BIGINT ,
"AVAILABILITYSTATUS"  BIGINT ,
"REASONCODE"  BIGINT ,
"IPADDRESS"  VARCHAR(50),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PhysicalContainer
EndDropSchema

BeginCreateSchema
create table PhysicalElement (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL, 
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PhysicalElement
EndDropSchema

BeginCreateSchema
create table PhysicalEntity (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"ENTITYIDENTIFIER"  BIGINT ,
"ENTITYTYPE"  BIGINT ,
"OPSTATE"  BIGINT ,
"CONTROLSTATUS"  BIGINT ,
"SERIALNUMBER"  VARCHAR(50),
"HARDWAREREVISION"  VARCHAR(50),
"MANUFACTURERNAME"  VARCHAR(50),
"FRU"  VARCHAR(10),
"USERNAME"  VARCHAR(50),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PhysicalEntity
EndDropSchema

BeginCreateSchema
create table PhysicalSubUnit (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"REASONCODE"  BIGINT ,
"ADMINSTATE"  BIGINT ,
"USAGESTATE"  BIGINT ,
"AVAILABILITYSTATUS"  BIGINT ,
"REVERTIVEUNIT"  VARCHAR(100),
"PROTECTING"  VARCHAR(100),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PhysicalSubUnit
EndDropSchema

BeginCreateSchema
create table PhysicalUnit (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"ADMINSTATE"  BIGINT ,
"USAGESTATE"  BIGINT ,
"AVAILABILITYSTATUS"  BIGINT ,
"REASONCODE"  BIGINT ,
"REVERTIVEUNIT"  VARCHAR(100),
"PROTECTING"  VARCHAR(100),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PhysicalUnit
EndDropSchema

BeginCreateSchema
create table LogicalContainer (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"CONTROLSTATUS"  BIGINT ,
"AVAILABILITYSTATUS"  BIGINT ,
"USAGESTATE"  BIGINT ,
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table LogicalContainer
EndDropSchema

BeginCreateSchema
create table LogicalElement (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"ENTITYIDENTIFIER"  BIGINT ,
"ENTITYTYPE"  BIGINT ,
"OPSTATE"  BIGINT ,
"ADMINSTATE"  BIGINT ,
"REASONCODE"  BIGINT ,
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table LogicalElement
EndDropSchema

BeginCreateSchema
create table LogicalUnit (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"CONTROLSTATUS"  BIGINT ,
"AVAILABILITYSTATUS"  BIGINT ,
"USAGESTATE"  BIGINT ,
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table LogicalUnit
EndDropSchema

BeginCreateSchema
create table AttributeValueChangeEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"SOURCEINDICATOR"  INTEGER   ,
"ATTRIBUTEID"  VARCHAR(100),
"OLDATTRIBUTEVALUE"  VARCHAR(100),
"NEWATTRIBUTEVALUE"  VARCHAR(100),
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table AttributeValueChangeEvent
EndDropSchema

BeginCreateSchema
create table AvailabilityEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"IMPACTEDMANAGEDOBJECTCLASS"  VARCHAR(100),
"IMPACTEDMANAGEDOBJECTID"  VARCHAR(100),
"OUTAGEIMPACT"  INTEGER   ,
"OUTAGECAUSE"  INTEGER   ,
"OUTAGEDURATION"  INTEGER   ,
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table AvailabilityEvent
EndDropSchema

BeginCreateSchema
create table CNEOMIManagementEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"CNEOMIEVENTTYPE"  INTEGER   ,
"MGMTREASONCODE"  INTEGER   ,
"ADDITIONALDATA"  VARCHAR(8192),
"AUDITMISSEDAUTOPROVOUT"  INTEGER   ,
"AUDITMISSEDALARMSOUT"  INTEGER   ,
"AUDITEVENTBUFFEROVERFLOWOUT"  INTEGER   ,
"AUDITMISSEDSTATECHANGESOUT"  INTEGER   ,
"AUDITMISSEDKEYSTATSOUT"  INTEGER   ,
"AUDITLASTCONNECTIONTIMEOUT"  BIGINT ,
"AUDITMISSEDNEOWNEDDATAOUT"  INTEGER   ,
"COMPLETIONPERCENTAGE"  INTEGER   ,
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CNEOMIManagementEvent
EndDropSchema


BeginCreateSchema
create table ObjectCreationDeletionEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"SOURCEINDICATOR"  INTEGER   ,
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table ObjectCreationDeletionEvent
EndDropSchema

BeginCreateSchema
create table RelationObject (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"SOURCE"  VARCHAR(100),
"TARGET"  VARCHAR(100),
"MAPPINGPRIORITY"  INTEGER   ,
"RELATIONSHIP"  VARCHAR(50),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table RelationObject
EndDropSchema

BeginCreateSchema
create table RelationshipChangeEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"SOURCEINDICATOR"  INTEGER   ,
"OLDRELATIONSHIPID"  BIGINT ,
"NEWRELATIONSHIPID"  BIGINT ,
"SOURCEOBJECTCLASS"  VARCHAR(100),
"SOURCEOBJECTID"  VARCHAR(100),
"TARGETOBJECTCLASS"  VARCHAR(100),
"TARGETOBJECTID"  VARCHAR(100),
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table RelationshipChangeEvent
EndDropSchema

BeginCreateSchema
create table StateChangeEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"SOURCEINDICATOR"  INTEGER   ,
"OLDADMINSTATE"  INTEGER   ,
"NEWADMINSTATE"  INTEGER   ,
"OLDOPERATIONALSTATE"  INTEGER   ,
"NEWOPERATIONALSTATE"  INTEGER   ,
"OLDUSAGESTATE"  INTEGER   ,
"NEWUSAGESTATE"  INTEGER   ,
"OLDAVAILABILITYSTATUS"  INTEGER   ,
"NEWAVAILABILITYSTATUS"  INTEGER   ,
"OLDCONTROLSTATUS"  INTEGER   ,
"NEWCONTROLSTATUS"  INTEGER   ,
"OLDREASONCODE"  INTEGER   ,
"NEWREASONCODE"  INTEGER   ,
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table StateChangeEvent
EndDropSchema

BeginCreateSchema
create table UserDefinedEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"USERDEFINEDEVENTCATEGORY"  BIGINT ,
"USERDEFINEDEVENTID"  BIGINT ,
"ADDITIONALDATA"  VARCHAR(8192),
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table UserDefinedEvent
EndDropSchema

BeginCreateSchema
create table EMHEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"PROBABLECAUSE"  BIGINT ,
"SPECIFICPROBLEMS"  BIGINT ,
"BACKEDUPSTATUS"  INTEGER   ,
"BACKUPOBJECTCLASS"  VARCHAR(50),
"BACKUPOBJECTID"  VARCHAR(50),
"TRENDINDICATION"  BIGINT ,
"TRIGGEREDTHRESHOLD"  VARCHAR(100),
"THRESHOLDOBSERVEDVALUE"  VARCHAR(50),
"THRESHOLDUPDOWNINDICATOR"  INTEGER   ,
"THRESHOLDHIGH"  VARCHAR(100),
"THRESHOLDLOW"  VARCHAR(100),
"THRESHOLDARMTIME"  BIGINT ,
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table EMHEvent
EndDropSchema

BeginCreateSchema
create table EMHInfoEvent (
"ID"  INTEGER     NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"INVOKEDIDENTIFIER"  INTEGER   ,
"MANAGEDOBJECTCLASS"  VARCHAR(100),
"MANAGEDOBJECTID"  VARCHAR(100),
"MODE"  INTEGER   ,
"NOTIFICATIONID"  BIGINT ,
"CORRELATEDNOTIFICATION"  BIGINT ,
"ADDITIONALINFORMATION"  VARCHAR(256),
"CORRELATIONTAG"  BIGINT ,
"SEQUENCETAG"  BIGINT ,
"USERDEVICENAME"  VARCHAR(100),
"CORRELATED"  INTEGER   ,
PRIMARY KEY ("ID", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table EMHInfoEvent
EndDropSchema

BeginCreateSchema
create table EMHAlert (
"ENTITY"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(25)  NOT NULL ,
"PROBABLECAUSE"  BIGINT ,
"SPECIFICPROBLEMS"  BIGINT ,
"BACKEDUPSTATUS"  INTEGER   ,
"BACKUPOBJECTCLASS"  VARCHAR(50),
"BACKUPOBJECTID"  VARCHAR(50),
"TRENDINDICATION"  INTEGER   ,
"TRIGGEREDTHRESHOLDCLASS"  VARCHAR(100),
"TRIGGEREDTHRESHOLDID"  VARCHAR(100),
"THRESHOLDOBSERVEDVALUE"  VARCHAR(50),
"THRESHOLDUPDOWNINDICATOR"  INTEGER   ,
"THRESHOLDHIGH"  VARCHAR(100),
"THRESHOLDLOW"  VARCHAR(100),
"THRESHOLDARMTIME"  BIGINT ,
"INVOKEDIDENTIFIER"  INTEGER   ,
"MANAGEDOBJECTCLASS"  VARCHAR(100),
"MANAGEDOBJECTID"  VARCHAR(100),
"MODE"  INTEGER   ,
"NOTIFICATIONID"  BIGINT ,
"CORRELATEDNOTIFICATION"  BIGINT ,
"ADDITIONALINFORMATION"  VARCHAR(256),
"CORRELATIONTAG"  BIGINT ,
"SEQUENCETAG"  BIGINT ,
"USERDEVICENAME"  VARCHAR(100),
"CORRELATED"  INTEGER   ,
PRIMARY KEY ("ENTITY", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table EMHAlert
EndDropSchema

BeginCreateSchema
create table DataObject(
"NAME" varchar(100) NOT NULL,
"OWNERNAME"  VARCHAR(50)  NOT NULL ,
"ENTITYIDENTIFIER" BIGINT,
"MONAME" varchar(100),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table DataObject
EndDropSchema

BeginIndex
CREATE INDEX DataObject0_ndx ON DataObject ("NAME")
EndIndex

BeginIndex
CREATE INDEX DataObject1_ndx ON DataObject ("OWNERNAME")
EndIndex

BeginCreateSchema
create table IpConfig (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(50)  NOT NULL ,
"IPFRAGTTL"  INTEGER ,

"IPDEFAULTTTL"  INTEGER ,
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table IpConfig
EndDropSchema

BeginIndex
CREATE INDEX IpConfig0_ndx ON IpConfig ("NAME")
EndIndex

BeginIndex
CREATE INDEX IpConfig1_ndx ON IpConfig ("OWNERNAME")
EndIndex

BeginCreateSchema
create table EventControl (
"NAME"  VARCHAR(100)  NOT NULL ,
"OWNERNAME"  VARCHAR(50)  NOT NULL ,
"EVENTSPERINTERVAL"  INTEGER ,
"EVENTDELIVERYFLAG"  INTEGER ,
"PROGRESSINDICATIONGENERATIONINTERVAL"  INTEGER ,
"EVENTSECONDARYDESTINATION"  VARCHAR(100),
PRIMARY KEY ("NAME", "OWNERNAME"))
EndCreateSchema


BeginDropSchema
drop table EventControl
EndDropSchema

BeginIndex
CREATE INDEX EventControl0_ndx ON EventControl ("NAME")
EndIndex

BeginIndex
CREATE INDEX EventControl1_ndx ON EventControl ("OWNERNAME")
EndIndex

BeginCreateSchema
create table MotoEmsRegistry (
"KeyName"  VARCHAR(100)  NOT NULL ,
"KeyValue"  VARCHAR(100)  NOT NULL ,
"dateChanged"  DATETIME NOT NULL ,
PRIMARY KEY ("KeyName"))
EndCreateSchema


BeginDropSchema
drop table MotoEmsRegistry
EndDropSchema


############ BEGINING OF CommonPlatform CODE GENERATION CODE [DO NOT EDIT] #################

BeginCreateSchema
create table PhysicalUnitStream(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"CURRENTSTREAMLEVEL" BIGINT,
"CONFIGSTREAMLEVEL" BIGINT,
"STREAMDESTINATION" VARCHAR(128) ,
"STREAMDATACONFIG" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PhysicalUnitStream
EndDropSchema

BeginIndex
CREATE INDEX PhysicalUnitStream0_ndx ON PhysicalUnitStream("NAME")
EndIndex

BeginIndex
CREATE INDEX PhysicalUnitStream1_ndx ON PhysicalUnitStream("OWNERNAME")
EndIndex

BeginCreateSchema
create table LogicalUnitStream(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"CURRENTSTREAMLEVEL" BIGINT,
"CONFIGSTREAMLEVEL" BIGINT,
"STREAMDESTINATION" VARCHAR(128) ,
"STREAMDATACONFIG" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table LogicalUnitStream
EndDropSchema

BeginIndex
CREATE INDEX LogicalUnitStream0_ndx ON LogicalUnitStream("NAME")
EndIndex

BeginIndex
CREATE INDEX LogicalUnitStream1_ndx ON LogicalUnitStream("OWNERNAME")
EndIndex

BeginCreateSchema
create table LogStreamDataConfig(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"STARTXMIT" VARCHAR(128) ,
"STOPXMIT" VARCHAR(128) ,
"PERIODICITY" BIGINT,
"FILTERCONFIG" VARCHAR(128) ,
"CONTROLCONFIG" VARCHAR(128) ,
"ACTIVE" VARCHAR(10),
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table LogStreamDataConfig
EndDropSchema

BeginIndex
CREATE INDEX LogStreamDataConfig0_ndx ON LogStreamDataConfig("NAME")
EndIndex

BeginIndex
CREATE INDEX LogStreamDataConfig1_ndx ON LogStreamDataConfig("OWNERNAME")
EndIndex

BeginCreateSchema
create table LogStream(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"LOGGINGENABLED" VARCHAR(10),
"NUMBEROFLOGSAVAILABLE" BIGINT,
"CURRENTSTREAMLEVEL" BIGINT,
"CONFIGSTREAMLEVEL" BIGINT,
"STREAMDESTINATION" VARCHAR(128) ,
"CAPABLEOFSTREAMING" VARCHAR(10),
"CAPABLEOFLOGGING" VARCHAR(10),
"CAPABLEOFDISABLINGLOGGING" VARCHAR(10),
"DECODINGSCHEME" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table LogStream
EndDropSchema

BeginIndex
CREATE INDEX LogStream0_ndx ON LogStream("NAME")
EndIndex

BeginIndex
CREATE INDEX LogStream1_ndx ON LogStream("OWNERNAME")
EndIndex

BeginCreateSchema
create table Constituent(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table Constituent
EndDropSchema

BeginIndex
CREATE INDEX Constituent0_ndx ON Constituent("NAME")
EndIndex

BeginIndex
CREATE INDEX Constituent1_ndx ON Constituent("OWNERNAME")
EndIndex

BeginCreateSchema
create table ConnectivityData(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"ADMINSTATE" BIGINT,
"OPSTATE" BIGINT,
"USAGESTATE" BIGINT,
"CONTROLSTATUS" BIGINT,
"AVAILABILITYSTATUS" BIGINT,
"REASONCODE" BIGINT,
"USERNAME" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table ConnectivityData
EndDropSchema

BeginIndex
CREATE INDEX ConnectivityData0_ndx ON ConnectivityData("NAME")
EndIndex

BeginIndex
CREATE INDEX ConnectivityData1_ndx ON ConnectivityData("OWNERNAME")
EndIndex

BeginCreateSchema
create table Interface(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"ADMINSTATE" BIGINT,
"OPSTATE" BIGINT,
"USAGESTATE" BIGINT,
"CONTROLSTATUS" BIGINT,
"AVAILABILITYSTATUS" BIGINT,
"REASONCODE" BIGINT,
"USERNAME" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table Interface
EndDropSchema

BeginIndex
CREATE INDEX Interface0_ndx ON Interface("NAME")
EndIndex

BeginIndex
CREATE INDEX Interface1_ndx ON Interface("OWNERNAME")
EndIndex

BeginCreateSchema
create table InterfaceContainer(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"ADMINSTATE" BIGINT,
"OPSTATE" BIGINT,
"USAGESTATE" BIGINT,
"CONTROLSTATUS" BIGINT,
"AVAILABILITYSTATUS" BIGINT,
"REASONCODE" BIGINT,
"USERNAME" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table InterfaceContainer
EndDropSchema

BeginIndex
CREATE INDEX InterfaceContainer0_ndx ON InterfaceContainer("NAME")
EndIndex

BeginIndex
CREATE INDEX InterfaceContainer1_ndx ON InterfaceContainer("OWNERNAME")
EndIndex

BeginCreateSchema
create table Endpoint (
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"ADMINSTATE" BIGINT,
"OPSTATE" BIGINT,
"USAGESTATE" BIGINT,
"CONTROLSTATUS" BIGINT,
"AVAILABILITYSTATUS" BIGINT,
"REASONCODE" BIGINT,
"USERNAME" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table Endpoint
EndDropSchema

BeginIndex
CREATE INDEX Endpoint0_ndx ON Endpoint ("NAME")
EndIndex

BeginIndex
CREATE INDEX Endpoint1_ndx ON Endpoint ("OWNERNAME")
EndIndex

BeginCreateSchema
create table BlackBoxLogStream(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table BlackBoxLogStream
EndDropSchema

BeginIndex
CREATE INDEX BlackBoxLogStream0_ndx ON BlackBoxLogStream("NAME")
EndIndex

BeginIndex
CREATE INDEX BlackBoxLogStream1_ndx ON BlackBoxLogStream("OWNERNAME")
EndIndex

BeginCreateSchema
create table CoreFileMgmtLogStream(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CoreFileMgmtLogStream
EndDropSchema

BeginIndex
CREATE INDEX CoreFileMgmtLogStream0_ndx ON CoreFileMgmtLogStream("NAME")
EndIndex

BeginIndex
CREATE INDEX CoreFileMgmtLogStream1_ndx ON CoreFileMgmtLogStream("OWNERNAME")
EndIndex

BeginCreateSchema
create table HapNeControl(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"AGENTADDRESS" VARCHAR(128) ,
"LATITUDE" BIGINT,
"LONGITUDE" BIGINT,
"LOADTIMEOUT" BIGINT,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table HapNeControl
EndDropSchema

BeginIndex
CREATE INDEX HapNeControl0_ndx ON HapNeControl("NAME")
EndIndex

BeginIndex
CREATE INDEX HapNeControl1_ndx ON HapNeControl("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpEthernetPortGroup(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"GROUPNAME" VARCHAR(128) ,
"MAC" VARCHAR(128) ,
"MONITORINGMODE" VARCHAR(128) ,
"ARPINTERVAL" BIGINT,
"ARPIPTARGET" VARCHAR(128) ,
"DOWNDELAY" BIGINT,
"LACPRATE" VARCHAR(10),
"MAXBONDS" BIGINT,
"MIIMON" BIGINT,
"MODE" BIGINT,
"UPDELAY" BIGINT,
"USECARRIER" VARCHAR(10),
"XMITHASHPOLICY" VARCHAR(128) ,
"ARPVALIDATE" BIGINT,
"BOOTPROTO" VARCHAR(128) ,
"STARTMODE" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpEthernetPortGroup
EndDropSchema

BeginIndex
CREATE INDEX CnpEthernetPortGroup0_ndx ON CnpEthernetPortGroup("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpEthernetPortGroup1_ndx ON CnpEthernetPortGroup("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpFileSystemInfo(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"FSEXISTS" VARCHAR(10),
"DEVICE" VARCHAR(128) ,
"MOUNTPOINT" VARCHAR(128) ,
"FSTYPE" VARCHAR(128) ,
"MODE" VARCHAR(128) ,
"SIZE" VARCHAR(128) ,
"BRDMGRFSWARNTH" BIGINT,
"BRDMGRFSCRITTH" BIGINT,
"BRDMGRFSCURSEVERITY" VARCHAR(128) ,
"BRDMGRFSPREVSEVERITY" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpFileSystemInfo
EndDropSchema

BeginIndex
CREATE INDEX CnpFileSystemInfo0_ndx ON CnpFileSystemInfo("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpFileSystemInfo1_ndx ON CnpFileSystemInfo("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpRaidPortGroup(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpRaidPortGroup
EndDropSchema

BeginIndex
CREATE INDEX CnpRaidPortGroup0_ndx ON CnpRaidPortGroup("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpRaidPortGroup1_ndx ON CnpRaidPortGroup("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpServerInfo(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"BRDMGRCPUWARNTH" BIGINT,
"BRDMGRCPUCRITTH" BIGINT,
"BRDMGRMEMWARNTH" BIGINT,
"BRDMGRMEMCRITTH" BIGINT,
"BRDMGRFCCRITTH" BIGINT,
"BRDMGRETHCRITTH" BIGINT,
"BRDMGRIPDIAGLIST" VARCHAR(128) ,
"ASSOCIATEDDEVICES" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpServerInfo
EndDropSchema

BeginIndex
CREATE INDEX CnpServerInfo0_ndx ON CnpServerInfo("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpServerInfo1_ndx ON CnpServerInfo("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpEthernetPort(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"PRIMARYSLAVE" VARCHAR(10),
"DEVICE" VARCHAR(128) ,
"MAC" VARCHAR(128) ,
"ONBOOT" VARCHAR(10),
"BOOTPROTO" VARCHAR(128) ,
"USERCTL" VARCHAR(10),
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpEthernetPort
EndDropSchema

BeginIndex
CREATE INDEX CnpEthernetPort0_ndx ON CnpEthernetPort("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpEthernetPort1_ndx ON CnpEthernetPort("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpRaidPort(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"DEVICE" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpRaidPort
EndDropSchema

BeginIndex
CREATE INDEX CnpRaidPort0_ndx ON CnpRaidPort("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpRaidPort1_ndx ON CnpRaidPort("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpCageInfo(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"SOURCEHOSTIP" VARCHAR(128) ,
"READCOMMUNITYSTRING" VARCHAR(128) ,
"WRITECOMMUNITYSTRING" VARCHAR(128) ,
"SNMPTIMEOUT" BIGINT,
"SNMPRETRIES" BIGINT,
"POLLINGINTERVAL" BIGINT,
"SECURITYLEVEL" VARCHAR(128) ,
"V3CONTEXTNAME" VARCHAR(128) ,
"V3USERNAME" VARCHAR(128) ,
"V3AUTHPROTOCOL" VARCHAR(128) ,
"V3PRIVPROTOCOL" VARCHAR(128) ,
"V3PRIVPASSWORD" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpCageInfo
EndDropSchema

BeginIndex
CREATE INDEX CnpCageInfo0_ndx ON CnpCageInfo("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpCageInfo1_ndx ON CnpCageInfo("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpACL(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"IPCHAIN" VARCHAR(128) ,
"RULENUMBER" BIGINT,
"PROTOCOL" VARCHAR(128) ,
"INIFACE" VARCHAR(128) ,
"OUTIFACE" VARCHAR(128) ,
"SOURCEIP" VARCHAR(128) ,
"SOURCEMASK" VARCHAR(128) ,
"SOURCEPORTSTART" VARCHAR(128) ,
"SOURCEPORTEND" VARCHAR(128) ,
"ICMPTYPE" VARCHAR(128) ,
"DESTINATIONIP" VARCHAR(128) ,
"DESTINATIONMASK" VARCHAR(128) ,
"DESTINATIONPORTSTART" VARCHAR(128) ,
"DESTINATIONPORTEND" VARCHAR(128) ,
"TARGET" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpACL
EndDropSchema

BeginIndex
CREATE INDEX CnpACL0_ndx ON CnpACL("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpACL1_ndx ON CnpACL("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpFruInfo(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"MFGDATETIME" VARCHAR(128) ,
"MANUFACTURERNAME" VARCHAR(128) ,
"PRODUCTNAME" VARCHAR(128) ,
"SERIALNUMBER" VARCHAR(128) ,
"PARTNUMBER" VARCHAR(128) ,
"MODELNUMBER" VARCHAR(128) ,
"PRODUCTVERSION" VARCHAR(128) ,
"ASSETTAG" VARCHAR(128) ,
"PRESENCESTATUS" VARCHAR(10),
"HOTSWAPSTATE" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpFruInfo
EndDropSchema

BeginIndex
CREATE INDEX CnpFruInfo0_ndx ON CnpFruInfo("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpFruInfo1_ndx ON CnpFruInfo("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpSystemInfo(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"ALARMPROXYSNMPPORT" BIGINT,
"ALARMPROXYTRAPCOMMUNITYSTRING" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpSystemInfo
EndDropSchema

BeginIndex
CREATE INDEX CnpSystemInfo0_ndx ON CnpSystemInfo("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpSystemInfo1_ndx ON CnpSystemInfo("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpLocationInfo(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"SITEID" VARCHAR(128) ,
"BUILDINGID" VARCHAR(128) ,
"FLOORID" VARCHAR(128) ,
"CABINETID" VARCHAR(128) ,
"MOUNTEDHEIGHT" BIGINT,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpLocationInfo
EndDropSchema

BeginIndex
CREATE INDEX CnpLocationInfo0_ndx ON CnpLocationInfo("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpLocationInfo1_ndx ON CnpLocationInfo("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpMonDevInfo(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"MONITORINGMETHOD" BIGINT,
"SOURCEHOSTIP" VARCHAR(128) ,
"READCOMMUNITYSTRING" VARCHAR(128) ,
"WRITECOMMUNITYSTRING" VARCHAR(128) ,
"SNMPTIMEOUT" BIGINT,
"SNMPRETRIES" BIGINT,
"POLLINGINTERVAL" BIGINT,
"SECURITYLEVEL" VARCHAR(128) ,
"V3CONTEXTNAME" VARCHAR(128) ,
"V3USERNAME" VARCHAR(128) ,
"V3AUTHPROTOCOL" VARCHAR(128) ,
"V3PRIVPROTOCOL" VARCHAR(128) ,
"V3PRIVPASSWORD" VARCHAR(128) ,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpMonDevInfo
EndDropSchema

BeginIndex
CREATE INDEX CnpMonDevInfo0_ndx ON CnpMonDevInfo("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpMonDevInfo1_ndx ON CnpMonDevInfo("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpCage(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpCage
EndDropSchema

BeginIndex
CREATE INDEX CnpCage0_ndx ON CnpCage("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpCage1_ndx ON CnpCage("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpClusterManager(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpClusterManager
EndDropSchema

BeginIndex
CREATE INDEX CnpClusterManager0_ndx ON CnpClusterManager("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpClusterManager1_ndx ON CnpClusterManager("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpClusterManagerPG(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpClusterManagerPG
EndDropSchema

BeginIndex
CREATE INDEX CnpClusterManagerPG0_ndx ON CnpClusterManagerPG("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpClusterManagerPG1_ndx ON CnpClusterManagerPG("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpEmsServer(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpEmsServer
EndDropSchema

BeginIndex
CREATE INDEX CnpEmsServer0_ndx ON CnpEmsServer("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpEmsServer1_ndx ON CnpEmsServer("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpEmsServerPG(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpEmsServerPG
EndDropSchema

BeginIndex
CREATE INDEX CnpEmsServerPG0_ndx ON CnpEmsServerPG("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpEmsServerPG1_ndx ON CnpEmsServerPG("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpExtSwitch(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpExtSwitch
EndDropSchema

BeginIndex
CREATE INDEX CnpExtSwitch0_ndx ON CnpExtSwitch("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpExtSwitch1_ndx ON CnpExtSwitch("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpFan(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpFan
EndDropSchema

BeginIndex
CREATE INDEX CnpFan0_ndx ON CnpFan("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpFan1_ndx ON CnpFan("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpPEM(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpPEM
EndDropSchema

BeginIndex
CREATE INDEX CnpPEM0_ndx ON CnpPEM("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpPEM1_ndx ON CnpPEM("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpRaid(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpRaid
EndDropSchema

BeginIndex
CREATE INDEX CnpRaid0_ndx ON CnpRaid("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpRaid1_ndx ON CnpRaid("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpRaidController(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpRaidController
EndDropSchema

BeginIndex
CREATE INDEX CnpRaidController0_ndx ON CnpRaidController("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpRaidController1_ndx ON CnpRaidController("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpRaidFan(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpRaidFan
EndDropSchema

BeginIndex
CREATE INDEX CnpRaidFan0_ndx ON CnpRaidFan("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpRaidFan1_ndx ON CnpRaidFan("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpRaidLogicalDrive(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpRaidLogicalDrive
EndDropSchema

BeginIndex
CREATE INDEX CnpRaidLogicalDrive0_ndx ON CnpRaidLogicalDrive("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpRaidLogicalDrive1_ndx ON CnpRaidLogicalDrive("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpRaidLogicalUnit(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpRaidLogicalUnit
EndDropSchema

BeginIndex
CREATE INDEX CnpRaidLogicalUnit0_ndx ON CnpRaidLogicalUnit("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpRaidLogicalUnit1_ndx ON CnpRaidLogicalUnit("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpRaidPEM(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpRaidPEM
EndDropSchema

BeginIndex
CREATE INDEX CnpRaidPEM0_ndx ON CnpRaidPEM("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpRaidPEM1_ndx ON CnpRaidPEM("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpRaidPhysicalDrive(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpRaidPhysicalDrive
EndDropSchema

BeginIndex
CREATE INDEX CnpRaidPhysicalDrive0_ndx ON CnpRaidPhysicalDrive("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpRaidPhysicalDrive1_ndx ON CnpRaidPhysicalDrive("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpShmm(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpShmm
EndDropSchema

BeginIndex
CREATE INDEX CnpShmm0_ndx ON CnpShmm("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpShmm1_ndx ON CnpShmm("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpSwitch(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpSwitch
EndDropSchema

BeginIndex
CREATE INDEX CnpSwitch0_ndx ON CnpSwitch("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpSwitch1_ndx ON CnpSwitch("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpTermServer(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpTermServer
EndDropSchema

BeginIndex
CREATE INDEX CnpTermServer0_ndx ON CnpTermServer("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpTermServer1_ndx ON CnpTermServer("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpSwitchUnit(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpSwitchUnit
EndDropSchema

BeginIndex
CREATE INDEX CnpSwitchUnit0_ndx ON CnpSwitchUnit("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpSwitchUnit1_ndx ON CnpSwitchUnit("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpRTM(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpRTM
EndDropSchema

BeginIndex
CREATE INDEX CnpRTM0_ndx ON CnpRTM("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpRTM1_ndx ON CnpRTM("OWNERNAME")
EndIndex

BeginCreateSchema
create table BlackBoxDataConfig(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table BlackBoxDataConfig
EndDropSchema

BeginIndex
CREATE INDEX BlackBoxDataConfig0_ndx ON BlackBoxDataConfig("NAME")
EndIndex

BeginIndex
CREATE INDEX BlackBoxDataConfig1_ndx ON BlackBoxDataConfig("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpAirFilter(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpAirFilter
EndDropSchema

BeginIndex
CREATE INDEX CnpAirFilter0_ndx ON CnpAirFilter("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpAirFilter1_ndx ON CnpAirFilter("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpSystemAlarmPanel(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpSystemAlarmPanel
EndDropSchema

BeginIndex
CREATE INDEX CnpSystemAlarmPanel0_ndx ON CnpSystemAlarmPanel("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpSystemAlarmPanel1_ndx ON CnpSystemAlarmPanel("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpShelfEEPROM(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpShelfEEPROM
EndDropSchema

BeginIndex
CREATE INDEX CnpShelfEEPROM0_ndx ON CnpShelfEEPROM("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpShelfEEPROM1_ndx ON CnpShelfEEPROM("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpShmmBMC(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpShmmBMC
EndDropSchema

BeginIndex
CREATE INDEX CnpShmmBMC0_ndx ON CnpShmmBMC("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpShmmBMC1_ndx ON CnpShmmBMC("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpEmsSensor(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpEmsSensor
EndDropSchema

BeginIndex
CREATE INDEX CnpEmsSensor0_ndx ON CnpEmsSensor("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpEmsSensor1_ndx ON CnpEmsSensor("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpExternalServer(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpExternalServer
EndDropSchema

BeginIndex
CREATE INDEX CnpExternalServer0_ndx ON CnpExternalServer("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpExternalServer1_ndx ON CnpExternalServer("OWNERNAME")
EndIndex

############ END OF CommonPlatform CODE GENERATION CODE [DO NOT EDIT] ######################

############ BEGINING OF CustomizedPlatform CODE GENERATION CODE [DO NOT EDIT] #################

BeginCreateSchema
create table EnumServerLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table EnumServerLink
EndDropSchema

BeginIndex
CREATE INDEX EnumServerLink0_ndx ON EnumServerLink("NAME")
EndIndex

BeginIndex
CREATE INDEX EnumServerLink1_ndx ON EnumServerLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SubLdapServerLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SubLdapServerLink
EndDropSchema

BeginIndex
CREATE INDEX SubLdapServerLink0_ndx ON SubLdapServerLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SubLdapServerLink1_ndx ON SubLdapServerLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table PeerMMSCLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PeerMMSCLink
EndDropSchema

BeginIndex
CREATE INDEX PeerMMSCLink0_ndx ON PeerMMSCLink("NAME")
EndIndex

BeginIndex
CREATE INDEX PeerMMSCLink1_ndx ON PeerMMSCLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SmppServerLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SmppServerLink
EndDropSchema

BeginIndex
CREATE INDEX SmppServerLink0_ndx ON SmppServerLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SmppServerLink1_ndx ON SmppServerLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SmtpServerLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SmtpServerLink
EndDropSchema

BeginIndex
CREATE INDEX SmtpServerLink0_ndx ON SmtpServerLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SmtpServerLink1_ndx ON SmtpServerLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table TranscoderLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table TranscoderLink
EndDropSchema

BeginIndex
CREATE INDEX TranscoderLink0_ndx ON TranscoderLink("NAME")
EndIndex

BeginIndex
CREATE INDEX TranscoderLink1_ndx ON TranscoderLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table VaspLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table VaspLink
EndDropSchema

BeginIndex
CREATE INDEX VaspLink0_ndx ON VaspLink("NAME")
EndIndex

BeginIndex
CREATE INDEX VaspLink1_ndx ON VaspLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table Mm1Link(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table Mm1Link
EndDropSchema

BeginIndex
CREATE INDEX Mm1Link0_ndx ON Mm1Link("NAME")
EndIndex

BeginIndex
CREATE INDEX Mm1Link1_ndx ON Mm1Link("OWNERNAME")
EndIndex

BeginCreateSchema
create table BackupServerLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table BackupServerLink
EndDropSchema

BeginIndex
CREATE INDEX BackupServerLink0_ndx ON BackupServerLink("NAME")
EndIndex

BeginIndex
CREATE INDEX BackupServerLink1_ndx ON BackupServerLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table PrepaidServerLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PrepaidServerLink
EndDropSchema

BeginIndex
CREATE INDEX PrepaidServerLink0_ndx ON PrepaidServerLink("NAME")
EndIndex

BeginIndex
CREATE INDEX PrepaidServerLink1_ndx ON PrepaidServerLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table TapLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table TapLink
EndDropSchema

BeginIndex
CREATE INDEX TapLink0_ndx ON TapLink("NAME")
EndIndex

BeginIndex
CREATE INDEX TapLink1_ndx ON TapLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table MateLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table MateLink
EndDropSchema

BeginIndex
CREATE INDEX MateLink0_ndx ON MateLink("NAME")
EndIndex

BeginIndex
CREATE INDEX MateLink1_ndx ON MateLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table Ss7PCLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table Ss7PCLink
EndDropSchema

BeginIndex
CREATE INDEX Ss7PCLink0_ndx ON Ss7PCLink("NAME")
EndIndex

BeginIndex
CREATE INDEX Ss7PCLink1_ndx ON Ss7PCLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SmtpClientLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SmtpClientLink
EndDropSchema

BeginIndex
CREATE INDEX SmtpClientLink0_ndx ON SmtpClientLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SmtpClientLink1_ndx ON SmtpClientLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SmppClientLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SmppClientLink
EndDropSchema

BeginIndex
CREATE INDEX SmppClientLink0_ndx ON SmppClientLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SmppClientLink1_ndx ON SmppClientLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table Ss7AssociationLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table Ss7AssociationLink
EndDropSchema

BeginIndex
CREATE INDEX Ss7AssociationLink0_ndx ON Ss7AssociationLink("NAME")
EndIndex

BeginIndex
CREATE INDEX Ss7AssociationLink1_ndx ON Ss7AssociationLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table BillingServerLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table BillingServerLink
EndDropSchema

BeginIndex
CREATE INDEX BillingServerLink0_ndx ON BillingServerLink("NAME")
EndIndex

BeginIndex
CREATE INDEX BillingServerLink1_ndx ON BillingServerLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table MsgArchiveServerLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table MsgArchiveServerLink
EndDropSchema

BeginIndex
CREATE INDEX MsgArchiveServerLink0_ndx ON MsgArchiveServerLink("NAME")
EndIndex

BeginIndex
CREATE INDEX MsgArchiveServerLink1_ndx ON MsgArchiveServerLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table DnsServerLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table DnsServerLink
EndDropSchema

BeginIndex
CREATE INDEX DnsServerLink0_ndx ON DnsServerLink("NAME")
EndIndex

BeginIndex
CREATE INDEX DnsServerLink1_ndx ON DnsServerLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table AckFwdSystemLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table AckFwdSystemLink
EndDropSchema

BeginIndex
CREATE INDEX AckFwdSystemLink0_ndx ON AckFwdSystemLink("NAME")
EndIndex

BeginIndex
CREATE INDEX AckFwdSystemLink1_ndx ON AckFwdSystemLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table ExternalIPLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table ExternalIPLink
EndDropSchema

BeginIndex
CREATE INDEX ExternalIPLink0_ndx ON ExternalIPLink("NAME")
EndIndex

BeginIndex
CREATE INDEX ExternalIPLink1_ndx ON ExternalIPLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table EsmeLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table EsmeLink
EndDropSchema

BeginIndex
CREATE INDEX EsmeLink0_ndx ON EsmeLink("NAME")
EndIndex

BeginIndex
CREATE INDEX EsmeLink1_ndx ON EsmeLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SmscLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SmscLink
EndDropSchema

BeginIndex
CREATE INDEX SmscLink0_ndx ON SmscLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SmscLink1_ndx ON SmscLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table TapClientLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table TapClientLink
EndDropSchema

BeginIndex
CREATE INDEX TapClientLink0_ndx ON TapClientLink("NAME")
EndIndex

BeginIndex
CREATE INDEX TapClientLink1_ndx ON TapClientLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table XmlClientLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table XmlClientLink
EndDropSchema

BeginIndex
CREATE INDEX XmlClientLink0_ndx ON XmlClientLink("NAME")
EndIndex

BeginIndex
CREATE INDEX XmlClientLink1_ndx ON XmlClientLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table InterMateLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table InterMateLink
EndDropSchema

BeginIndex
CREATE INDEX InterMateLink0_ndx ON InterMateLink("NAME")
EndIndex

BeginIndex
CREATE INDEX InterMateLink1_ndx ON InterMateLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table EsmeNetworkConnectionLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table EsmeNetworkConnectionLink
EndDropSchema

BeginIndex
CREATE INDEX EsmeNetworkConnectionLink0_ndx ON EsmeNetworkConnectionLink("NAME")
EndIndex

BeginIndex
CREATE INDEX EsmeNetworkConnectionLink1_ndx ON EsmeNetworkConnectionLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table EsmeQueuedMessageLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table EsmeQueuedMessageLink
EndDropSchema

BeginIndex
CREATE INDEX EsmeQueuedMessageLink0_ndx ON EsmeQueuedMessageLink("NAME")
EndIndex

BeginIndex
CREATE INDEX EsmeQueuedMessageLink1_ndx ON EsmeQueuedMessageLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table LnpServerLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table LnpServerLink
EndDropSchema

BeginIndex
CREATE INDEX LnpServerLink0_ndx ON LnpServerLink("NAME")
EndIndex

BeginIndex
CREATE INDEX LnpServerLink1_ndx ON LnpServerLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table EsmeLocalConnectionLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table EsmeLocalConnectionLink
EndDropSchema

BeginIndex
CREATE INDEX EsmeLocalConnectionLink0_ndx ON EsmeLocalConnectionLink("NAME")
EndIndex

BeginIndex
CREATE INDEX EsmeLocalConnectionLink1_ndx ON EsmeLocalConnectionLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SmscLocalConnectionLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SmscLocalConnectionLink
EndDropSchema

BeginIndex
CREATE INDEX SmscLocalConnectionLink0_ndx ON SmscLocalConnectionLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SmscLocalConnectionLink1_ndx ON SmscLocalConnectionLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SmscNetworkConnectionLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SmscNetworkConnectionLink
EndDropSchema

BeginIndex
CREATE INDEX SmscNetworkConnectionLink0_ndx ON SmscNetworkConnectionLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SmscNetworkConnectionLink1_ndx ON SmscNetworkConnectionLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SmscQueuedMessageLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SmscQueuedMessageLink
EndDropSchema

BeginIndex
CREATE INDEX SmscQueuedMessageLink0_ndx ON SmscQueuedMessageLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SmscQueuedMessageLink1_ndx ON SmscQueuedMessageLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table TapLocalConnectionLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table TapLocalConnectionLink
EndDropSchema

BeginIndex
CREATE INDEX TapLocalConnectionLink0_ndx ON TapLocalConnectionLink("NAME")
EndIndex

BeginIndex
CREATE INDEX TapLocalConnectionLink1_ndx ON TapLocalConnectionLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table TapNetworkConnectionLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table TapNetworkConnectionLink
EndDropSchema

BeginIndex
CREATE INDEX TapNetworkConnectionLink0_ndx ON TapNetworkConnectionLink("NAME")
EndIndex

BeginIndex
CREATE INDEX TapNetworkConnectionLink1_ndx ON TapNetworkConnectionLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table XmlcLocalConnectionLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table XmlcLocalConnectionLink
EndDropSchema

BeginIndex
CREATE INDEX XmlcLocalConnectionLink0_ndx ON XmlcLocalConnectionLink("NAME")
EndIndex

BeginIndex
CREATE INDEX XmlcLocalConnectionLink1_ndx ON XmlcLocalConnectionLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table XmlcNetworkConnectionLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table XmlcNetworkConnectionLink
EndDropSchema

BeginIndex
CREATE INDEX XmlcNetworkConnectionLink0_ndx ON XmlcNetworkConnectionLink("NAME")
EndIndex

BeginIndex
CREATE INDEX XmlcNetworkConnectionLink1_ndx ON XmlcNetworkConnectionLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table LoadBalancerLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table LoadBalancerLink
EndDropSchema

BeginIndex
CREATE INDEX LoadBalancerLink0_ndx ON LoadBalancerLink("NAME")
EndIndex

BeginIndex
CREATE INDEX LoadBalancerLink1_ndx ON LoadBalancerLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table BmgwServerThrottleLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table BmgwServerThrottleLink
EndDropSchema

BeginIndex
CREATE INDEX BmgwServerThrottleLink0_ndx ON BmgwServerThrottleLink("NAME")
EndIndex

BeginIndex
CREATE INDEX BmgwServerThrottleLink1_ndx ON BmgwServerThrottleLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table BmgwServerUnavailableLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table BmgwServerUnavailableLink
EndDropSchema

BeginIndex
CREATE INDEX BmgwServerUnavailableLink0_ndx ON BmgwServerUnavailableLink("NAME")
EndIndex

BeginIndex
CREATE INDEX BmgwServerUnavailableLink1_ndx ON BmgwServerUnavailableLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table UsageControlServiceLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table UsageControlServiceLink
EndDropSchema

BeginIndex
CREATE INDEX UsageControlServiceLink0_ndx ON UsageControlServiceLink("NAME")
EndIndex

BeginIndex
CREATE INDEX UsageControlServiceLink1_ndx ON UsageControlServiceLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table DiskUsage(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table DiskUsage
EndDropSchema

BeginIndex
CREATE INDEX DiskUsage0_ndx ON DiskUsage("NAME")
EndIndex

BeginIndex
CREATE INDEX DiskUsage1_ndx ON DiskUsage("OWNERNAME")
EndIndex

BeginCreateSchema
create table FileSystem(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table FileSystem
EndDropSchema

BeginIndex
CREATE INDEX FileSystem0_ndx ON FileSystem("NAME")
EndIndex

BeginIndex
CREATE INDEX FileSystem1_ndx ON FileSystem("OWNERNAME")
EndIndex

BeginCreateSchema
create table HssServerLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table HssServerLink
EndDropSchema

BeginIndex
CREATE INDEX HssServerLink0_ndx ON HssServerLink("NAME")
EndIndex

BeginIndex
CREATE INDEX HssServerLink1_ndx ON HssServerLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table HssServerUnavailableConnection(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table HssServerUnavailableConnection
EndDropSchema

BeginIndex
CREATE INDEX HssServerUnavailableConnection0_ndx ON HssServerUnavailableConnection("NAME")
EndIndex

BeginIndex
CREATE INDEX HssServerUnavailableConnection1_ndx ON HssServerUnavailableConnection("OWNERNAME")
EndIndex

BeginCreateSchema
create table ImsGsmGwServerLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table ImsGsmGwServerLink
EndDropSchema

BeginIndex
CREATE INDEX ImsGsmGwServerLink0_ndx ON ImsGsmGwServerLink("NAME")
EndIndex

BeginIndex
CREATE INDEX ImsGsmGwServerLink1_ndx ON ImsGsmGwServerLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table ImsGsmGwServerThrottleLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table ImsGsmGwServerThrottleLink
EndDropSchema

BeginIndex
CREATE INDEX ImsGsmGwServerThrottleLink0_ndx ON ImsGsmGwServerThrottleLink("NAME")
EndIndex

BeginIndex
CREATE INDEX ImsGsmGwServerThrottleLink1_ndx ON ImsGsmGwServerThrottleLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SCSCFServerThrottleLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SCSCFServerThrottleLink
EndDropSchema

BeginIndex
CREATE INDEX SCSCFServerThrottleLink0_ndx ON SCSCFServerThrottleLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SCSCFServerThrottleLink1_ndx ON SCSCFServerThrottleLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table HssServerThrottleLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table HssServerThrottleLink
EndDropSchema

BeginIndex
CREATE INDEX HssServerThrottleLink0_ndx ON HssServerThrottleLink("NAME")
EndIndex

BeginIndex
CREATE INDEX HssServerThrottleLink1_ndx ON HssServerThrottleLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table ContentAdaptationLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table ContentAdaptationLink
EndDropSchema

BeginIndex
CREATE INDEX ContentAdaptationLink0_ndx ON ContentAdaptationLink("NAME")
EndIndex

BeginIndex
CREATE INDEX ContentAdaptationLink1_ndx ON ContentAdaptationLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SmtpLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SmtpLink
EndDropSchema

BeginIndex
CREATE INDEX SmtpLink0_ndx ON SmtpLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SmtpLink1_ndx ON SmtpLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SmtpLocalConnectionLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SmtpLocalConnectionLink
EndDropSchema

BeginIndex
CREATE INDEX SmtpLocalConnectionLink0_ndx ON SmtpLocalConnectionLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SmtpLocalConnectionLink1_ndx ON SmtpLocalConnectionLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SmtpNetworkConnectionLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SmtpNetworkConnectionLink
EndDropSchema

BeginIndex
CREATE INDEX SmtpNetworkConnectionLink0_ndx ON SmtpNetworkConnectionLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SmtpNetworkConnectionLink1_ndx ON SmtpNetworkConnectionLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SmtpQueuedMessageLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SmtpQueuedMessageLink
EndDropSchema

BeginIndex
CREATE INDEX SmtpQueuedMessageLink0_ndx ON SmtpQueuedMessageLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SmtpQueuedMessageLink1_ndx ON SmtpQueuedMessageLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table StatSizeAuditLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table StatSizeAuditLink
EndDropSchema

BeginIndex
CREATE INDEX StatSizeAuditLink0_ndx ON StatSizeAuditLink("NAME")
EndIndex

BeginIndex
CREATE INDEX StatSizeAuditLink1_ndx ON StatSizeAuditLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table CapacityLicenseLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CapacityLicenseLink
EndDropSchema

BeginIndex
CREATE INDEX CapacityLicenseLink0_ndx ON CapacityLicenseLink("NAME")
EndIndex

BeginIndex
CREATE INDEX CapacityLicenseLink1_ndx ON CapacityLicenseLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table PersonalizationConfig(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PersonalizationConfig
EndDropSchema

BeginIndex
CREATE INDEX PersonalizationConfig0_ndx ON PersonalizationConfig("NAME")
EndIndex

BeginIndex
CREATE INDEX PersonalizationConfig1_ndx ON PersonalizationConfig("OWNERNAME")
EndIndex

BeginCreateSchema
create table SpamServerLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SpamServerLink
EndDropSchema

BeginIndex
CREATE INDEX SpamServerLink0_ndx ON SpamServerLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SpamServerLink1_ndx ON SpamServerLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SpamServerThrottleLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SpamServerThrottleLink
EndDropSchema

BeginIndex
CREATE INDEX SpamServerThrottleLink0_ndx ON SpamServerThrottleLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SpamServerThrottleLink1_ndx ON SpamServerThrottleLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SpamServerUnavailableConnection(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SpamServerUnavailableConnection
EndDropSchema

BeginIndex
CREATE INDEX SpamServerUnavailableConnection0_ndx ON SpamServerUnavailableConnection("NAME")
EndIndex

BeginIndex
CREATE INDEX SpamServerUnavailableConnection1_ndx ON SpamServerUnavailableConnection("OWNERNAME")
EndIndex

BeginCreateSchema
create table PrepaidServerThrottleLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table PrepaidServerThrottleLink
EndDropSchema

BeginIndex
CREATE INDEX PrepaidServerThrottleLink0_ndx ON PrepaidServerThrottleLink("NAME")
EndIndex

BeginIndex
CREATE INDEX PrepaidServerThrottleLink1_ndx ON PrepaidServerThrottleLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table M2paLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table M2paLink
EndDropSchema

BeginIndex
CREATE INDEX M2paLink0_ndx ON M2paLink("NAME")
EndIndex

BeginIndex
CREATE INDEX M2paLink1_ndx ON M2paLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table M2paLogicalUnit(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table M2paLogicalUnit
EndDropSchema

BeginIndex
CREATE INDEX M2paLogicalUnit0_ndx ON M2paLogicalUnit("NAME")
EndIndex

BeginIndex
CREATE INDEX M2paLogicalUnit1_ndx ON M2paLogicalUnit("OWNERNAME")
EndIndex

BeginCreateSchema
create table M2paSystemInfo(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table M2paSystemInfo
EndDropSchema

BeginIndex
CREATE INDEX M2paSystemInfo0_ndx ON M2paSystemInfo("NAME")
EndIndex

BeginIndex
CREATE INDEX M2paSystemInfo1_ndx ON M2paSystemInfo("OWNERNAME")
EndIndex

BeginCreateSchema
create table GeoRedSMSReplLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table GeoRedSMSReplLink
EndDropSchema

BeginIndex
CREATE INDEX GeoRedSMSReplLink0_ndx ON GeoRedSMSReplLink("NAME")
EndIndex

BeginIndex
CREATE INDEX GeoRedSMSReplLink1_ndx ON GeoRedSMSReplLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table GeoRedSMSReplThrottleLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table GeoRedSMSReplThrottleLink
EndDropSchema

BeginIndex
CREATE INDEX GeoRedSMSReplThrottleLink0_ndx ON GeoRedSMSReplThrottleLink("NAME")
EndIndex

BeginIndex
CREATE INDEX GeoRedSMSReplThrottleLink1_ndx ON GeoRedSMSReplThrottleLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table RemoteSMSCThrottleLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table RemoteSMSCThrottleLink
EndDropSchema

BeginIndex
CREATE INDEX RemoteSMSCThrottleLink0_ndx ON RemoteSMSCThrottleLink("NAME")
EndIndex

BeginIndex
CREATE INDEX RemoteSMSCThrottleLink1_ndx ON RemoteSMSCThrottleLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table MsmMemUtilization(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table MsmMemUtilization
EndDropSchema

BeginIndex
CREATE INDEX MsmMemUtilization0_ndx ON MsmMemUtilization("NAME")
EndIndex

BeginIndex
CREATE INDEX MsmMemUtilization1_ndx ON MsmMemUtilization("OWNERNAME")
EndIndex

BeginCreateSchema
create table MsgBladeLU(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table MsgBladeLU
EndDropSchema

BeginIndex
CREATE INDEX MsgBladeLU0_ndx ON MsgBladeLU("NAME")
EndIndex

BeginIndex
CREATE INDEX MsgBladeLU1_ndx ON MsgBladeLU("OWNERNAME")
EndIndex

BeginCreateSchema
create table MsgBladeLUContainer(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table MsgBladeLUContainer
EndDropSchema

BeginIndex
CREATE INDEX MsgBladeLUContainer0_ndx ON MsgBladeLUContainer("NAME")
EndIndex

BeginIndex
CREATE INDEX MsgBladeLUContainer1_ndx ON MsgBladeLUContainer("OWNERNAME")
EndIndex

BeginCreateSchema
create table ClassOfService(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table ClassOfService
EndDropSchema

BeginIndex
CREATE INDEX ClassOfService0_ndx ON ClassOfService("NAME")
EndIndex

BeginIndex
CREATE INDEX ClassOfService1_ndx ON ClassOfService("OWNERNAME")
EndIndex

BeginCreateSchema
create table EnumServiceLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table EnumServiceLink
EndDropSchema

BeginIndex
CREATE INDEX EnumServiceLink0_ndx ON EnumServiceLink("NAME")
EndIndex

BeginIndex
CREATE INDEX EnumServiceLink1_ndx ON EnumServiceLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table Ss7Service(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table Ss7Service
EndDropSchema

BeginIndex
CREATE INDEX Ss7Service0_ndx ON Ss7Service("NAME")
EndIndex

BeginIndex
CREATE INDEX Ss7Service1_ndx ON Ss7Service("OWNERNAME")
EndIndex

BeginCreateSchema
create table Congestion(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table Congestion
EndDropSchema

BeginIndex
CREATE INDEX Congestion0_ndx ON Congestion("NAME")
EndIndex

BeginIndex
CREATE INDEX Congestion1_ndx ON Congestion("OWNERNAME")
EndIndex

BeginCreateSchema
create table MessagingSystem(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table MessagingSystem
EndDropSchema

BeginIndex
CREATE INDEX MessagingSystem0_ndx ON MessagingSystem("NAME")
EndIndex

BeginIndex
CREATE INDEX MessagingSystem1_ndx ON MessagingSystem("OWNERNAME")
EndIndex

BeginCreateSchema
create table StatisticsThreshold(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table StatisticsThreshold
EndDropSchema

BeginIndex
CREATE INDEX StatisticsThreshold0_ndx ON StatisticsThreshold("NAME")
EndIndex

BeginIndex
CREATE INDEX StatisticsThreshold1_ndx ON StatisticsThreshold("OWNERNAME")
EndIndex

BeginCreateSchema
create table QueueOverflow(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table QueueOverflow
EndDropSchema

BeginIndex
CREATE INDEX QueueOverflow0_ndx ON QueueOverflow("NAME")
EndIndex

BeginIndex
CREATE INDEX QueueOverflow1_ndx ON QueueOverflow("OWNERNAME")
EndIndex

BeginCreateSchema
create table BmgwClientThrottleLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table BmgwClientThrottleLink
EndDropSchema

BeginIndex
CREATE INDEX BmgwClientThrottleLink0_ndx ON BmgwClientThrottleLink("NAME")
EndIndex

BeginIndex
CREATE INDEX BmgwClientThrottleLink1_ndx ON BmgwClientThrottleLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table ImsGsmGwClientThrottleLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table ImsGsmGwClientThrottleLink
EndDropSchema

BeginIndex
CREATE INDEX ImsGsmGwClientThrottleLink0_ndx ON ImsGsmGwClientThrottleLink("NAME")
EndIndex

BeginIndex
CREATE INDEX ImsGsmGwClientThrottleLink1_ndx ON ImsGsmGwClientThrottleLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table SCSCFClientThrottleLink(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table SCSCFClientThrottleLink
EndDropSchema

BeginIndex
CREATE INDEX SCSCFClientThrottleLink0_ndx ON SCSCFClientThrottleLink("NAME")
EndIndex

BeginIndex
CREATE INDEX SCSCFClientThrottleLink1_ndx ON SCSCFClientThrottleLink("OWNERNAME")
EndIndex

BeginCreateSchema
create table MpSystemConfig(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
"SYSTEMNAME" VARCHAR(128) ,
"GRROLE" BIGINT,
"PRODUCTTYPE" BIGINT,
"ENABLECMCONFIGFILESYSTEMREDUNDANCY" VARCHAR(10),
"ENABLECMDYNAMICFILESYSTEMREDUNDANCY" VARCHAR(10),
"CMXFSMOUNTFAILURECOUNTER" BIGINT,
"CMCONFIGFILESYSTEMREDUNDANCYNUM" BIGINT,
"CMCONFIGFILESYSTEMREDUNDANCYSTATE" VARCHAR(10),
"CMDYNAMICFILESYSTEMREDUNDANCYSTATE" VARCHAR(10),
"CONFIGTYPE" BIGINT,
"PLATFORMREVISION" BIGINT,
"GROUPMESSAGINGMODE" BIGINT,
"APPLICATIONTYPE" BIGINT,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table MpSystemConfig
EndDropSchema

BeginIndex
CREATE INDEX MpSystemConfig0_ndx ON MpSystemConfig("NAME")
EndIndex

BeginIndex
CREATE INDEX MpSystemConfig1_ndx ON MpSystemConfig("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpPSBlackBoxLS(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpPSBlackBoxLS
EndDropSchema

BeginIndex
CREATE INDEX CnpPSBlackBoxLS0_ndx ON CnpPSBlackBoxLS("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpPSBlackBoxLS1_ndx ON CnpPSBlackBoxLS("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpPSCoreFileMgmtLS(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpPSCoreFileMgmtLS
EndDropSchema

BeginIndex
CREATE INDEX CnpPSCoreFileMgmtLS0_ndx ON CnpPSCoreFileMgmtLS("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpPSCoreFileMgmtLS1_ndx ON CnpPSCoreFileMgmtLS("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpPayloadServer(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpPayloadServer
EndDropSchema

BeginIndex
CREATE INDEX CnpPayloadServer0_ndx ON CnpPayloadServer("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpPayloadServer1_ndx ON CnpPayloadServer("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpPayloadServerPG(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpPayloadServerPG
EndDropSchema

BeginIndex
CREATE INDEX CnpPayloadServerPG0_ndx ON CnpPayloadServerPG("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpPayloadServerPG1_ndx ON CnpPayloadServerPG("OWNERNAME")
EndIndex

BeginCreateSchema
create table CnpPSBlackBoxDC(
"NAME" VARCHAR(128)  NOT NULL,
"OWNERNAME" VARCHAR(128)  NOT NULL,
PRIMARY KEY ( "NAME", "OWNERNAME"))
EndCreateSchema

BeginDropSchema
drop table CnpPSBlackBoxDC
EndDropSchema

BeginIndex
CREATE INDEX CnpPSBlackBoxDC0_ndx ON CnpPSBlackBoxDC("NAME")
EndIndex

BeginIndex
CREATE INDEX CnpPSBlackBoxDC1_ndx ON CnpPSBlackBoxDC("OWNERNAME")
EndIndex

############ END OF CustomizedPlatform CODE GENERATION CODE [DO NOT EDIT] ######################

EndModules TopoDB-MapDB-EventDB-AlertDB-PollDB-PolicyDB-USERSTORAGEDB

#Do not edit the below lines. They are used for statistical data collection.

<STATS>
create table STATSDATA%(
POLLID BIGINT,
INSTANCE varchar(100),
TTIME BIGINT,
VAL BIGINT)
</STATS>

<STRING>
create table STRINGDATA%(
POLLID BIGINT,
INSTANCE varchar(100),
TTIME BIGINT,
VALUE varchar(200))
</STRING>
