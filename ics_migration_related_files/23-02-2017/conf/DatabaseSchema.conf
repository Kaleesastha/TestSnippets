#$Id: DatabaseSchema.conf,v 1.48 2010/12/02 08:44:53 prabakaran Exp $
#Schema for POSTGRESQL

BeginModules TopoDB-MapDB-EventDB-AlertDB-PollDB-PolicyDB-USERSTORAGEDB

BeginCreateSchema
create table ObjectTypes (
"OBJKEY" varchar( 100 ) PRIMARY KEY, 
"CLASSNAME" varchar( 50 ) )
EndCreateSchema

BeginDropSchema
drop table ObjectTypes
EndDropSchema

BeginCreateSchema
create table USERTABLE(
"DBKEY" varchar(105) NOT NULL,
"HOST" varchar(50),
"PORT" varchar(5),
"ENGINENAME" varchar(50), 
"USERNAME" varchar(50), 
"AUTHPROTOCOL" varchar(10), 
"AUTHPASSWORD" varchar(50),
"PRIVPROTOCOL" varchar(10), 
"PRIVPASSWORD" varchar(50),
PRIMARY KEY ("DBKEY"))
EndCreateSchema

BeginCreateSchema
create table HOSTS(
"HOSTNAMES" varchar(100),
PRIMARY KEY ("HOSTNAMES"))
EndCreateSchema

BeginCreateSchema
create table PORTS(
"PORTS" varchar(100),
PRIMARY KEY ("PORTS"))
EndCreateSchema

BeginCreateSchema
create table ENGINES(
"ENGINENAMES" varchar(100),
PRIMARY KEY ("ENGINENAMES"))
EndCreateSchema

BeginCreateSchema
create table USERS(
"USERNAMES" varchar(100),
PRIMARY KEY("USERNAMES"))
EndCreateSchema

BeginCreateSchema
create table  TrapDisabledMO (
"Name" VARCHAR(250) NOT NULL,
"Type" varchar( 250 ),
PRIMARY KEY ("Name"))
EndCreateSchema

BeginDropSchema
drop table TrapDisabledMO
EndDropSchema


BeginCreateSchema
create table  CHILDRENSTATUS (
"KEYSTRING" VARCHAR(250) PRIMARY KEY,
"VALUESTRING" varchar( 250 ))
EndCreateSchema

BeginDropSchema
drop table CHILDRENSTATUS
EndDropSchema

BeginCreateSchema
create table  OBJECTSTOLINK (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ))
EndCreateSchema

BeginIndex
CREATE INDEX OBJECTSTOLINK0_ndx ON OBJECTSTOLINK("KEYSTRING")
EndIndex

BeginDropSchema
drop table OBJECTSTOLINK
EndDropSchema


BeginCreateSchema
create table  ObjectSchedulerRUNNABLE (
"MOID" Numeric(19) PRIMARY KEY,
"TIMEVAL" Numeric(19) NOT NULL,
"CLASSNAME" varchar (150) NOT NULL
)
EndCreateSchema

BeginDropSchema
drop table ObjectSchedulerRUNNABLE
EndDropSchema

#BeginIndex
#CREATE INDEX ObjectSchedulerRUNNABLE0_ndx ON ObjectSchedulerRUNNABLE("TIMEVAL")
#CREATE INDEX ObjectSchedulerRUNNABLE1_ndx ON ObjectSchedulerRUNNABLE("MOID")
#EndIndex

BeginCreateSchema
create table TaskAudit (
"EXECUTIONID" Numeric(20),
"USERNAME" varchar(50),
"TASKNAME" varchar(50),
"DEVICELIST" varchar(1000),
"DATASOURCE" varchar(50),
"EXECUTEDTIME" varchar(30))
EndCreateSchema

BeginDropSchema
drop table TaskAudit
EndDropSchema


BeginCreateSchema
create table DeviceAudit (
"ID" Numeric(20),
"USERNAME" varchar(50),
"TASKNAME" varchar(50),
"SUBTASKNAME" varchar(50),
"DEVICENAME" varchar(50),
"TIMEOFSTART" varchar(30),
"TIMEOFFINISH" varchar(30),
"STATUS" varchar(15),
"ROLLBACKSTATUS" varchar(15),
"EXECUTIONID" Numeric(20),
"DEVICELIST" varchar(50))
EndCreateSchema

BeginDropSchema
drop table DeviceAudit
EndDropSchema

BeginCreateSchema
create table AttributeAudit(
"ID" Numeric(20),
"IDENTIFIER" varchar(100),
"TIMEOFFINISH" varchar(30),
"RETRIES" Numeric(10),
"STATUS" varchar(200),
"OUTPUT" BYTEA)
EndCreateSchema

BeginDropSchema
drop table AttributeAudit
EndDropSchema

BeginCreateSchema
create table ConfigTasks(
USERNAME varchar(50),
TASKNAME varchar(50),
PROTOCOL varchar(10),
VERSION varchar(10),
SUBTASKS varchar(200),
ROLLBACKNEEDED varchar(5),
ROLLBACKTYPE Numeric(2),
ROLLBACKDOCUMENT varchar(50),
MIBSTOBELOADED varchar(100),
DESCRIPTION varchar(1000),
ISTEMPLATE varchar(5))
EndCreateSchema

BeginDropSchema
drop table ConfigTasks
EndDropSchema

BeginCreateSchema
create table ConfigTaskDetails(
AKEY  Numeric(10), 
USERNAME varchar(50),
TASKNAME varchar(50),
TYPE varchar(2),
PARENTKEY Numeric(10))
EndCreateSchema

BeginDropSchema
drop table ConfigTaskDetails
EndDropSchema

BeginCreateSchema
create table ConfigAttributes(
AKEY  varchar(120), 
NAME varchar(100),
VALUE varchar(1000))
EndCreateSchema

BeginDropSchema
drop table ConfigAttributes
EndDropSchema

BeginCreateSchema
create table PendingTasks(
USERNAME varchar(50), 
TASKNAME varchar(50),
SUBTASKNAME varchar(50),
DEVICENAME varchar(50),
STATUS varchar(20),
PORT varchar(5),
RETRIES Numeric(3),
TIMEOUT Numeric(10),
AINDEX Numeric(20),
EXECUTIONID Numeric(20))
EndCreateSchema

BeginDropSchema
drop table PendingTasks
EndDropSchema

BeginCreateSchema
create table PendingDevices (
DKEY varchar(200), 
NAME varchar(200),
VALUE varchar(200))
EndCreateSchema

BeginDropSchema
drop table PendingDevices
EndDropSchema



BeginCreateSchema
create table DeviceList(
USERNAME varchar(50),
PROTOCOL varchar(10),
DEVICELISTNAME VARCHAR(50))
EndCreateSchema

BeginDropSchema
drop table DeviceList
EndDropSchema

BeginCreateSchema
create table DeviceListDetails(
DKEY VARCHAR(200),
DEVICENAME VARCHAR(50),
PORT varchar(5),
RETRIES INTEGER,
TIMEOUT INTEGER,
DEVICESEQUENCE INTEGER)
EndCreateSchema

BeginDropSchema
drop table DeviceListDetails
EndDropSchema

BeginCreateSchema
create table DeviceUserProps (
DKEY varchar(200), 
NAME varchar(200),
VALUE varchar(200))
EndCreateSchema

BeginDropSchema
drop table DeviceUserProps
EndDropSchema


BeginCreateSchema
create table ConfigProvider (
PROTOCOL varchar(100) NOT NULL,
CONFIGPROVIDER varchar(100) NOT NULL )
EndCreateSchema

BeginDropSchema
drop table ConfigProvider
EndDropSchema

BeginCreateSchema
create table TaskToDeviceListMap(
USERNAME VARCHAR(50),
TASKNAME VARCHAR(50),
DEVICELISTNAMES VARCHAR(200))
EndCreateSchema

BeginDropSchema
drop table TaskToDeviceListMap
EndDropSchema



BeginCreateSchema
create table PollingObjects(
"NAME" varchar(50),
"STATUS" varchar(10),
PRIMARY KEY("NAME"))
EndCreateSchema

BeginDropSchema
drop table PollingObjects
EndDropSchema

BeginCreateSchema
create table PollingAttributes(
"NAME" varchar(50),
"TYPE" varchar(10),
"PROPERTY" varchar(20),
"POLLCONDITION" varchar(50),
"VALUE" varchar(100))
EndCreateSchema

BeginDropSchema
drop table PollingAttributes
EndDropSchema

BeginCreateSchema
create table Providers(
"PROVIDERNAME" varchar(15),
"VALUE" varchar(100),
PRIMARY KEY("PROVIDERNAME"))
EndCreateSchema

BeginDropSchema
drop table Providers
EndDropSchema

BeginCreateSchema
create table StatsTables(
"TableName" varchar(100) NOT NULL,
"CreateSchema" varchar(255),
PRIMARY KEY("TableName"))
EndCreateSchema

BeginDropSchema
drop table StatsTables
EndDropSchema


BeginCreateSchema
create table ThresholdObjects(
"NAME" varchar(20),
"KIND" varchar(15),
"SEVERITY" INTEGER,
"TRIGGERSEVERITY" INTEGER,
"RESETSEVERITY" INTEGER,
"THRESHOLDTYPE" varchar(5),
"CATEGORY" varchar(20),
"THRESHOLDVALUE" Numeric(19),
"REARMVALUE" Numeric(19),
"MMESSAGE" varchar(100),
"CLEARMESSAGE" varchar(100),
"SENDCLEAR" varchar(10),
"ALLOWED" varchar(50),
"DISALLOWED" varchar(50),
"OID" varchar(200),
"OIDTYPE" varchar(10),
PRIMARY KEY("NAME"))
EndCreateSchema

BeginDropSchema
drop table ThresholdObjects
EndDropSchema


BeginCreateSchema
create table CustomView(
"MODULE" varchar(25) NOT NULL,
"VIEWID" varchar(150) NOT NULL,
"USERNAME" varchar(50) NOT NULL,
"VIEWNAME" varchar(100) NOT NULL,
"PARENT" varchar(50) NOT NULL,
"CONSTRAIN" varchar(200),
"SQLSTRING" varchar(1000),
PRIMARY KEY ("VIEWID","USERNAME"))
EndCreateSchema

BeginIndex
CREATE INDEX CustomView0_ndx ON CustomView("MODULE","USERNAME","VIEWNAME","PARENT")
CREATE INDEX CustomView1_ndx ON CustomView("VIEWID")
CREATE INDEX CustomView2_ndx ON CustomView("USERNAME")
EndIndex

BeginDropSchema
drop table CustomView
EndDropSchema

BeginCreateSchema
create table CustomViewProps(
"MODULE" varchar(25) NOT NULL,
"VIEWID" varchar(150) NOT NULL,
"USERNAME" varchar(50) NOT NULL,
"CRITERIAID" INTEGER NOT NULL,
"PROPKEY" varchar(100),
"OPERATOR" varchar(15),
"PROPVALUE1" varchar(100),
"PROPVALUE2" varchar(100),
PRIMARY KEY ("VIEWID","USERNAME","CRITERIAID"))
EndCreateSchema

BeginIndex
CREATE INDEX CustomViewProps0_ndx ON CustomViewProps("VIEWID","USERNAME")
EndIndex

BeginDropSchema
drop table CustomViewProps
EndDropSchema

BeginCreateSchema
create table CustomViewColumns(
"MODULE" varchar(25) NOT NULL,
"VIEWID" varchar(150) NOT NULL,
"USERNAME" varchar(50) NOT NULL,
"DISPLAYNAME" varchar(50),
"COLUMNNAME" varchar(50) NOT NULL,
"WIDTH" INTEGER,
"COLUMNINDEX" INTEGER,
PRIMARY KEY ("VIEWID","USERNAME","COLUMNNAME"))
EndCreateSchema

BeginIndex
CREATE INDEX CustomViewColumns0_ndx ON CustomViewColumns("VIEWID", "USERNAME")
EndIndex

BeginDropSchema
drop table CustomViewColumns
EndDropSchema

BeginCreateSchema
create table PanelTree (
"NODEID" VARCHAR(150) NOT NULL,
"NODETYPE" VARCHAR(100) NOT NULL,
"USERNAME" VARCHAR(50) NOT NULL,
"PARENT" VARCHAR(100),
"PREVIOUSNODE" VARCHAR(100), 
"MODULENAME" varchar(30),
"PANELPROPS" VARCHAR(1000),
PRIMARY KEY ("NODEID","USERNAME"))
EndCreateSchema

BeginDropSchema
drop table PanelTree 
EndDropSchema


BeginCreateSchema
create table Reports(
"CLASSNAME" varchar(100) NOT NULL,
"DAILY" varchar(10),
"WEEKLY" varchar(10),
"HOUR" varchar(100),
"MONTHDAYS" varchar(50),
"WEEKDAYS" varchar(50),
"TIMEVAL" Numeric(19),
PRIMARY KEY("CLASSNAME"))
EndCreateSchema

BeginDropSchema
drop table Reports
EndDropSchema

BeginCreateSchema
create table DataCollectionAttributes(
"NAME" varchar(50),
"PROPKEY" varchar(50),
"PROPNAME" varchar(30),
"PROPVAL" varchar(200))
EndCreateSchema

BeginDropSchema
drop table DataCollectionAttributes
EndDropSchema

BeginCreateSchema
create table UserPasswordTable(
"USERNAME" varchar(50) NOT NULL,
"PASSWORD" varchar(50),
"OWNERNAME" varchar(50) NOT NULL,
PRIMARY KEY ("USERNAME","OWNERNAME"))
EndCreateSchema

BeginIndex
CREATE INDEX UserPasswordTable0_ndx ON UserPasswordTable("USERNAME")
EndIndex

BeginDropSchema
drop table UserPasswordTable
EndDropSchema

BeginCreateSchema
create table UserGroupTable(
"USERNAME" varchar(50) NOT NULL,
"GROUPNAME" varchar(100) NOT NULL,
"OWNERNAME" varchar(50) NOT NULL,
PRIMARY KEY ("USERNAME","GROUPNAME","OWNERNAME"))
EndCreateSchema

BeginIndex
CREATE INDEX UserGroupTable0_ndx ON UserGroupTable("USERNAME","GROUPNAME")
CREATE INDEX UserGroupTable1_ndx ON UserGroupTable("USERNAME")
CREATE INDEX UserGroupTable2_ndx ON UserGroupTable("GROUPNAME")
EndIndex

BeginDropSchema
drop table UserGroupTable
EndDropSchema

BeginCreateSchema
create table ViewPropertiesTable(
"VIEWNAME" varchar(50) NOT NULL,
"PROPERTYNAME" varchar(50) NOT NULL,
"PROPERTYVALUE" varchar(50),
PRIMARY KEY ("VIEWNAME","PROPERTYNAME"))
EndCreateSchema

BeginIndex
CREATE INDEX ViewPropertiesTable0_ndx ON ViewpropertiesTable("VIEWNAME")
EndIndex

BeginDropSchema
drop table ViewPropertiesTable
EndDropSchema


BeginCreateSchema
create table ViewsToGroupTable(
"VIEWNAME" varchar(50) NOT NULL,
"GROUPNAME" varchar(50) NOT NULL,
"OWNERNAME" varchar(50) NOT NULL,
PRIMARY KEY ("VIEWNAME","GROUPNAME","OWNERNAME"))
EndCreateSchema

BeginIndex
CREATE INDEX ViewsToGroupTable0_ndx ON ViewsToGroupTable("VIEWNAME","GROUPNAME")
CREATE INDEX ViewsToGroupTable1_ndx ON ViewsToGroupTable("GROUPNAME")
EndIndex

BeginDropSchema
drop table ViewsToGroupTable
EndDropSchema


BeginCreateSchema
create table ViewToOperationsTable(
"VIEWNAME" varchar(50) NOT NULL,
"OPERATIONSNAME" varchar(50) NOT NULL,
"OPERATIONSTYPE" INTEGER,
PRIMARY KEY ("VIEWNAME","OPERATIONSNAME"))
EndCreateSchema

BeginDropSchema
drop table ViewToOperationsTable
EndDropSchema

BeginCreateSchema
create table OperationsTreeTable(
"PARENTOPERATION" varchar(50) NOT NULL,
"CHILDOPERATION" varchar(50) NOT NULL,
"LEAFNODE" INTEGER,
PRIMARY KEY ("PARENTOPERATION","CHILDOPERATION"))
EndCreateSchema

BeginIndex
CREATE INDEX OperationsTreeTable0_ndx ON OperationsTreeTable("PARENTOPERATION")
CREATE INDEX OperationsTreeTable1_ndx ON OperationsTreeTable("CHILDOPERATION")
EndIndex

BeginDropSchema
drop table OperationsTreeTable
EndDropSchema

BeginCreateSchema
create table NamedViewToAuthorizedViewTable(
"NAMEDVIEWNAME" varchar(50) NOT NULL,
"AUTHORIZEDVIEWNAME" varchar(50) NOT NULL)
EndCreateSchema

BeginDropSchema
drop table NamedViewToAuthorizedViewTable
EndDropSchema

#by senthil
BeginCreateSchema
create table NotificationLog(
"NOTIINDEX" INTEGER NOT NULL,
"LOGTIME" Numeric(19),
"NOVARBINDS" INTEGER,
"NOTIOID" varchar(100),
PRIMARY KEY ("NOTIINDEX"))
EndCreateSchema

BeginDropSchema
drop table NotificationLog
EndDropSchema

#BeginIndex
#CREATE INDEX NotificationLog0_ndx ON NotificationLog("NOTIINDEX")
#EndIndex

BeginCreateSchema
create table VarBindLog(
"NOTIINDEX" INTEGER NOT NULL,
"VARINDEX" INTEGER NOT NULL,
"VARTYPE" INTEGER,
"VARVALUE" VARCHAR(200),
PRIMARY KEY ("NOTIINDEX","VARINDEX"))
EndCreateSchema

BeginDropSchema
drop table VarBindLog
EndDropSchema

BeginIndex
CREATE INDEX VarBindLog0_ndx ON VarBindLog("NOTIINDEX")
CREATE INDEX VarBindLog1_ndx ON VarBindLog("VARINDEX")
EndIndex

BeginCreateSchema
create table PolicyObject(
"NAME" varchar(100) NOT NULL,
"GROUPNAME" varchar(100),
"STATUS" INTEGER,
"PERIOD" INTEGER,
"POLICYOBJECTCUSTOMIZER" varchar(50),
"HELPURL" varchar(100),
 PRIMARY KEY("NAME"))
EndCreateSchema

BeginDropSchema
drop table PolicyObject
EndDropSchema

#BeginIndex
#CREATE INDEX PolicyObject0_ndx ON PolicyObject("NAME")
#EndIndex

BeginCreateSchema
create table PolicyActionCondition(
"NAME" varchar(100) NOT NULL ,
"OBJKEY" varchar(100) NOT NULL,
"POLICYACTION" varchar(100),
"POLICYCONDITION" varchar(100),
PRIMARY KEY("NAME","OBJKEY"))
EndCreateSchema

BeginDropSchema
drop table PolicyActionCondition
EndDropSchema

BeginIndex
CREATE INDEX PolicyActionCondition0_ndx ON PolicyActionCondition("NAME")
EndIndex


BeginCreateSchema
create table POLICYUSERPROPS(
"NAME" varchar( 100 ) NOT NULL, 
"OWNERNAME" varchar(25) NOT NULL,
"PROPNAME" varchar( 150 ) NOT NULL,
"PROPVAL" varchar( 150 ))
EndCreateSchema

BeginDropSchema
drop table POLICYUSERPROPS
EndDropSchema

BeginIndex
CREATE INDEX POLICYUSERPROPS0_ndx ON POLICYUSERPROPS("NAME")
CREATE INDEX POLICYUSERPROPS1_ndx ON POLICYUSERPROPS("OWNERNAME")
EndIndex

BeginCreateSchema
create table  DBPOLICY (
"KEYSTRING" VARCHAR(250) NOT NULL,
"VALUESTRING" varchar( 250 ),
PRIMARY KEY ("KEYSTRING"))
EndCreateSchema

BeginDropSchema
drop table DBPOLICY
EndDropSchema

#BeginIndex
#CREATE INDEX dbpolicy0_ndx ON DBPOLICY("KEYSTRING")
#EndIndex


BeginCreateSchema
create table  PolicyScheduleTime (
"TIMEKEY" varchar( 250 ) NOT NULL,
"NAME" VARCHAR(250) NOT NULL )
EndCreateSchema

BeginDropSchema
drop table PolicyScheduleTime
EndDropSchema

BeginCreateSchema
create table AlertPolicyObject ( 
"NAME" varchar(80) NOT NULL,
"ACTIONNAME" varchar(80) NOT NULL,
"PROPKEY" varchar(80) NOT NULL,
"PROPVALUE" varchar(100),
PRIMARY KEY("NAME" , "ACTIONNAME" , "PROPKEY") )
EndCreateSchema

BeginDropSchema
drop table AlertPolicyObject
EndDropSchema

BeginCreateSchema
create table ENGINETABLE( 
"DBKEY" varchar(57) NOT NULL,
"HOST" varchar(50),
"PORT" varchar(5),
"ENGINENAME" varchar(50),
"ENGINEID" varchar(64),
"ENGINETIME" varchar(10),
"ENGINEBOOTS" varchar(10),
PRIMARY KEY ("DBKEY"))
EndCreateSchema

BeginDropSchema
drop table ENGINETABLE
EndDropSchema


BeginCreateSchema
create table USMTABLE(
"DBKEY" varchar (116) NOT NULL , 
"HOST" varchar (50) , 
"PORT" varchar (5) , 
"ENGINENAME" varchar (50) , 
"ENGINEID" varchar (64) , 
"USERNAME" varchar (50) , 
"SECURITYLEVEL" varchar (5) , 
"SECURITYNAME" varchar (50) , 
"AUTHPROTOCOL" varchar (10) , 
"AUTHPASSWORD" varchar (255) , 
"AUTHKEY" varchar (255) , 
"PRIVPROTOCOL" varchar (10) , 
"PRIVPASSWORD" varchar (255) , 
"PRIVKEY" varchar (255) , 
"ENGINETIME" varchar (10) , 
"ENGINEBOOTS" varchar (10) , 
"LATESTRCVDENGTIME" varchar (10) , 
"USMLOCALTIME" varchar (30) , 
PRIMARY KEY ("DBKEY"))
EndCreateSchema


BeginDropSchema
drop table USMTABLE
EndDropSchema

BeginCreateSchema
create table MonitorNmsParameter(
"PARAMETERNAME" varchar(200) NOT NULL,
"CURRENTTIME" Numeric(19) NOT NULL,
"PARAMETERVALUE" Numeric(19),
"TINTERVAL"  Numeric(19),
PRIMARY KEY("PARAMETERNAME","CURRENTTIME"))
EndCreateSchema

BeginDropSchema
drop table MonitorNmsParameter
drop index MonitorNmsParameter0_ndx
drop index MonitorNmsParameter1_ndx
EndDropSchema

BeginIndex
CREATE INDEX MonitorNmsParameter0_ndx ON MonitorNmsParameter("PARAMETERNAME")
CREATE INDEX MonitorNmsParameter1_ndx ON MonitorNmsParameter("CURRENTTIME")
EndIndex


#BeginCreateSchema
#create table SwitchObject ( 
#"NAME" VARCHAR (100) NOT NULL , 
#"OWNERNAME" VARCHAR (25) NOT NULL , 
#"ROOTPORT" INTEGER , 
#"ROOTCOST" INTEGER , 
#"NUMPORTS" INTEGER , 
#PRIMARY KEY ("NAME","OWNERNAME"))
#EndCreateSchema

#BeginDropSchema
#drop table SwitchObject  
#EndDropSchema


#BeginIndex
#CREATE INDEX SwitchObject0_ndx ON SwitchObject ("NAME") 
#CREATE INDEX SwitchObject1_ndx ON SwitchObject ("OWNERNAME") 
#EndIndex


#BeginCreateSchema
#create table PortObject ( 
#"NAME" VARCHAR (100) NOT NULL , 
#"OWNERNAME" VARCHAR (25) NOT NULL , 
#"PORTIFINDEX" INTEGER , 
#"PORTIFDESCR" VARCHAR (100) , 
#"PORTSTATE" VARCHAR (100) , 
#"PORTIFSPEED" INTEGER , 
#PRIMARY KEY ("NAME","OWNERNAME"))
#EndCreateSchema

#BeginDropSchema
#drop table PortObject  
#EndDropSchema

#BeginIndex
#CREATE INDEX PortObject0_ndx ON PortObject ("NAME") 
#CREATE INDEX PortObject1_ndx ON PortObject ("OWNERNAME")
#EndIndex

#BeginCreateSchema
#create table Printer (
#"NAME" VARCHAR (100) NOT NULL ,
#"OWNERNAME" VARCHAR (25) NOT NULL ,
#"DEVICESTATUS" INTEGER ,
#"PRINTERSTATUS" INTEGER ,
#"PRINTERDETECTEDERRSTATUS" INTEGER ,
#"CONSOLEDISPBUFFERTEXT" VARCHAR (100) ,
#PRIMARY KEY ("NAME","OWNERNAME"))
#EndCreateSchema


#BeginDropSchema
#drop table Printer
#EndDropSchema

#BeginIndex
#CREATE INDEX Printer0_ndx ON Printer ("NAME")
#CREATE INDEX Printer1_ndx ON Printer ("OWNERNAME")
#EndIndex

BeginDropSchema
drop table ENGINES
EndDropSchema

BeginDropSchema
drop table HOSTS
EndDropSchema

BeginDropSchema
drop table PORTS
EndDropSchema

BeginDropSchema
drop table USERS
EndDropSchema

BeginDropSchema
drop table USERTABLE
EndDropSchema



BeginCreateSchema
create table  OperationsTable ("USERNAME" VARCHAR(50) NOT NULL,
"OPERATIONID" Numeric(19) NOT NULL,
"TEMPLATENAME" VARCHAR(50),
"SCHEDULEDTIME" VARCHAR(50),
"STAGE" VARCHAR(50),
"STATUS" VARCHAR(50),
PRIMARY KEY ("USERNAME","OPERATIONID"))
EndCreateSchema

BeginDropSchema
drop table OperationsTable
EndDropSchema


BeginCreateSchema
create table BEFailOver (
"HOSTADDRESS" VARCHAR(50) NOT NULL,
"NMSBEPORT" INTEGER NOT NULL,
"RMIREGISTRYPORT" INTEGER,
"LASTCOUNT" Numeric(19),
"SERVERROLE" VARCHAR(10),
"STANDBYSERVERNAME" VARCHAR(50))
EndCreateSchema

BeginIndex
CREATE INDEX BEFailOver0_ndx ON BEFailOver ("HOSTADDRESS")
CREATE INDEX BEFailOver1_ndx ON BEFailOver ("NMSBEPORT")
EndIndex

BeginDropSchema
drop table BEFailOver
EndDropSchema


BeginCreateSchema
create table PollIDToKeyMap(
"NAME" VARCHAR(50),
"ID" Numeric(13),
"AGENT" VARCHAR(50),
"OID" VARCHAR(200),
"STATSDATATABLENAME" VARCHAR(100),
"OWNERNAME" VARCHAR(25))
EndCreateSchema

BeginDropSchema
drop table PollIDToKeyMap
EndDropSchema


BeginCreateSchema
create table ProvisioningVariantProps (
"VARIANTID"  varchar(50)  NOT NULL,
"PROPNAME"  varchar(50),
"PROPVAL"  varchar(50))
EndCreateSchema

BeginDropSchema
drop table ProvisioningVariantProps
EndDropSchema


BeginCreateSchema
create table ProvisioningVariant (
"DESCRIPTION"  varchar(50),
"VARIANTID"  varchar(50)  NOT NULL,
PRIMARY KEY ("VARIANTID"))
EndCreateSchema

BeginIndex
CREATE INDEX ProvisioningVariant0_ndx ON ProvisioningVariant ("VARIANTID")
EndIndex

BeginDropSchema
drop table ProvisioningVariant
EndDropSchema


BeginCreateSchema
create table UserConfTable(
"USERNAME" varchar(50) NOT NULL,
"OWNERNAME" varchar(50) NOT NULL,
"STATUS" varchar(20) NOT NULL,
"PASSWORDEXPIRYTIME" Numeric(19),
"USEREXPIRYTIME" Numeric(19),
"PASSWORDAGE" INTEGER,
"USERAGE" INTEGER,
"DESCRIPTIVENAME" varchar(100) NOT NULL,
PRIMARY KEY ("USERNAME",
"OWNERNAME"))
EndCreateSchema

BeginIndex
CREATE INDEX UserConfTable0_ndx ON UserConfTable("STATUS")
EndIndex

BeginDropSchema
drop table UserConfTable
EndDropSchema



BeginCreateSchema
create table NetworkInventory (
"LASTMODIFIEDTIME" varchar(25),
"MODEL"  varchar(50),
"TYPE"  varchar(50),
"CONTACT"  varchar(50),
"CLASSNAME"  varchar(50),
"MANAGEDOBJECTNAME"  varchar(50),
"OPERATIONALSTATUS"  varchar(50),
"NAME"  varchar(50)  NOT NULL,
"LOCATION"  varchar(50),
"ADMINSTATUS"  varchar(50),
"VENDOR"  varchar(50),
"DESCRIPTION"  varchar(50),
PRIMARY KEY ("NAME"))
EndCreateSchema

BeginIndex
CREATE INDEX NetworkInventory0_ndx ON NetworkInventory ("NAME")
EndIndex

BeginDropSchema
drop table NetworkInventory
EndDropSchema


BeginCreateSchema
create table REPORTS_HOURLY(
"POLLID" Numeric(19),
"INSTANCE" varchar(100),
"TTIME" Numeric(19),
"VAL" Numeric(19),
"MINVALUE" Numeric(19),
"MAXVALUE" Numeric(19),
"TINTERVAL"  Numeric(19))
EndCreateSchema

BeginIndex
CREATE INDEX REPORTS_HOURLY0_ndx ON REPORTS_HOURLY("POLLID")
CREATE INDEX REPORTS_HOURLY2_ndx ON REPORTS_HOURLY("TTIME")
EndIndex

BeginDropSchema
drop table REPORTS_HOURLY
EndDropSchema


BeginCreateSchema
create table REPORTS_DAILY(
"POLLID" Numeric(19),
"INSTANCE" varchar(100),
"TTIME" Numeric(19),
"VAL" Numeric(19),
"MINVALUE" Numeric(19),
"MAXVALUE" Numeric(19),
"TINTERVAL"  Numeric(19))
EndCreateSchema

BeginIndex
CREATE INDEX REPORTS_DAILY0_ndx ON REPORTS_DAILY("POLLID")
CREATE INDEX REPORTS_DAILY2_ndx ON REPORTS_DAILY("TTIME")
EndIndex

BeginDropSchema
drop table REPORTS_DAILY
EndDropSchema


BeginCreateSchema
create table ProvisionResult(
"PRID" Numeric(19) NOT NULL,
"TYPE" varchar(50),
"TEMPLATENAME" varchar(100),
"SCHEDULEDTIME" Numeric(19),
"STARTTIME" Numeric(19),
"DURATION" INTEGER,
"USERNAME" varchar(50),
"STATUS" varchar(50),
"DETAILS" varchar(250),
"PROGRESS" INTEGER,
PRIMARY KEY("PRID"))
EndCreateSchema

BeginIndex
CREATE INDEX ProvisionResult0_Indx ON ProvisionResult("PRID")
EndIndex

BeginDropSchema
drop table ProvisionResult
EndDropSchema


BeginCreateSchema
create table UserInputData(
"UIDATAID" Numeric(19) NOT NULL,
"TEMPLATENAME" varchar(100) NOT NULL,
"USERINPUTKEY" varchar(80) NOT NULL,
"USERINPUTVALUE" varchar(250),
PRIMARY KEY("UIDATAID","TEMPLATENAME","USERINPUTKEY"))
EndCreateSchema

BeginIndex
CREATE INDEX UserInputData0_Indx ON UserInputData("UIDATAID")
CREATE INDEX UserInputData1_Indx ON UserInputData("TEMPLATENAME")
EndIndex

BeginDropSchema
drop table UserInputData
EndDropSchema


BeginCreateSchema
create table StageIdVsConfigId(
"PRID" Numeric(19) NOT NULL,
"STAGEID" varchar(100) NOT NULL,
"CONFIGID" INTEGER NOT NULL,
PRIMARY KEY("PRID","STAGEID","CONFIGID"))
EndCreateSchema

BeginIndex
CREATE INDEX StageIdVsConfigId0_Indx ON StageIdVsConfigId("PRID")
CREATE INDEX StageIdVsConfigId1_Indx ON StageIdVsConfigId("STAGEID")
EndIndex

BeginDropSchema
drop table StageIdVsConfigId
EndDropSchema


BeginCreateSchema
create table UIDataIdVsPRId(
"UIDATAID" Numeric(19) NOT NULL,
"PRID" Numeric(19) NOT NULL,
PRIMARY KEY("UIDATAID","PRID"))
EndCreateSchema

BeginIndex
CREATE INDEX UIDataIdVsPRId0_Indx ON UIDataIdVsPRId("PRID")
EndIndex

BeginDropSchema
drop table UIDataIdVsPRId
EndDropSchema


#BeginIndex
#alter table ALERTUSERPROPS drop constraint FKCFB5A6A93E26DDB
##EndIndex
#
##BeginIndex
##alter table ALERTUSERPROPS add constraint FKCFB5A6A93E26DDB foreign key (ENTITY) references Alert on delete cascade
##EndIndex
#
##BeginIndex
##alter table EVENTUSERPROPS drop constraint FK54B8432B87584B8F
##EndIndex
#
##BeginIndex
##alter table EVENTUSERPROPS add constraint FK54B8432B87584B8F foreign key (ID) references Event on delete cascade
##EndIndex
#
##BeginIndex
##alter table TOPOUSERPROPS drop constraint FK483583EBFBE5F355
##EndIndex
#
##BeginIndex
##alter table TOPOUSERPROPS add constraint FK483583EBFBE5F355 foreign key (MOID) references ManagedObject on delete cascade
##EndIndex

#BeginIndex
#alter table MAPUSERPROPS drop constraint FK30B70EA9AF738122  
#EndIndex

BeginIndex
alter table MAPUSERPROPS add constraint FK30B70EA9AF738122 foreign key (NAME,MAPNAME) references MapSymbol(NAME,MAPNAME) on delete cascade
EndIndex


BeginIndex
CREATE INDEX PARENTOBJ_ndx ON PolledData ("PARENTOBJ")
EndIndex


BeginCreateSchema
create table WIDGETLEVEL(
"ASSOCIATIONID" numeric(13) PRIMARY KEY NOT NULL,
"COLUMNID" integer,
"WIDGETLEVEL" integer)
EndCreateSchema

BeginIndex
CREATE INDEX WidgetLevel0_Indx on WIDGETLEVEL("ASSOCIATIONID")
EndIndex

BeginDropSchema
drop table WIDGETLEVEL
EndDropSchema


BeginCreateSchema
create table WIDGETASSOCIATION(
"ASSOCIATIONID" numeric(13) PRIMARY KEY NOT NULL,
"DASHBOARDID" numeric(13) NOT NULL,
"WIDGETID" numeric(13) NOT NULL,
"NAME" varchar(100) NOT NULL,
"CRITERIA" varchar(250) NULL,
"DESCRIPTION" varchar(100))
EndCreateSchema

BeginIndex
CREATE INDEX WidgetAssociation0_Indx on WIDGETASSOCIATION("ASSOCIATIONID")
EndIndex

BeginDropSchema
drop table WIDGETASSOCIATION
EndDropSchema


BeginCreateSchema
create table WIDGET(
"ID" numeric(13) PRIMARY KEY NOT NULL,
"NAME" varchar(100),
"DESCRIPTION" varchar(150),
"DATASOURCEID" numeric(13) NOT NULL,
"CRITERIAID" numeric(13))
EndCreateSchema

BeginIndex
CREATE INDEX Widget0_Indx on WIDGET("ID")
CREATE INDEX Widget1_Indx on WIDGET("DATASOURCEID")
CREATE INDEX Widget2_Indx on WIDGET("CRITERIAID")
EndIndex

BeginDropSchema
drop table WIDGET
EndDropSchema


BeginCreateSchema
create table WIDGETCRITERIA(
"CRITERIAID" numeric(13) PRIMARY KEY NOT NULL,
"CRITERIA" varchar(250))
EndCreateSchema

BeginIndex
CREATE INDEX WidgetCriteria0_Indx on WIDGETCRITERIA("CRITERIAID")
EndIndex

BeginDropSchema
drop table WIDGETCRITERIA
EndDropSchema


BeginCreateSchema
create table WIDGETDATASOURCE(
"DATASOURCEID" numeric(13) PRIMARY KEY NOT NULL,
"NAME" varchar(100),
"CLASSNAME" varchar(100) NOT NULL,
"DESCRIPTION" varchar(100))
EndCreateSchema

BeginIndex
CREATE INDEX WidgetDataSource0_Indx on WIDGETDATASOURCE("DATASOURCEID")
EndIndex

BeginDropSchema
drop table WIDGETDATASOURCE
EndDropSchema


BeginCreateSchema
create table DASHBOARDCOLUMNS(
"ID" numeric(13),
"COLUMNID" integer,
"COLUMNWIDTH" integer,
PRIMARY KEY("ID","COLUMNID"))
EndCreateSchema

BeginIndex
CREATE INDEX DashboardColumns0_Indx on DASHBOARDCOLUMNS("ID")
CREATE INDEX DashboardColumns1_Indx on DASHBOARDCOLUMNS("COLUMNID")
EndIndex

BeginDropSchema
drop table DASHBOARDCOLUMNS
EndDropSchema

BeginIndex
alter table DASHBOARDPROPS add constraint DASHBOARDPROPS_ID foreign key (ID) references DASHBOARD(ID) ON DELETE CASCADE
EndIndex


BeginCreateSchema
create table DASHBOARDPROPS(
"ID" numeric(13) PRIMARY KEY NOT NULL,
"PROPERTIES" varchar(250))
EndCreateSchema

BeginIndex
CREATE INDEX DashboardProps0_Indx on DASHBOARDPROPS("ID")
EndIndex

BeginDropSchema
drop table DASHBOARDPROPS
EndDropSchema



BeginCreateSchema
create table CCTVVIEWS(
"ID" numeric(13),
"DASHBOARDID" numeric(13),
PRIMARY KEY("ID","DASHBOARDID"))
EndCreateSchema

BeginIndex
CREATE INDEX CctvViews0_Indx on CCTVVIEWS("ID")
CREATE INDEX CctvViews1_Indx on CCTVVIEWS("DASHBOARDID")
EndIndex

BeginDropSchema
drop table CCTVVIEWS
EndDropSchema


BeginCreateSchema
create table CCTV(
"ID" numeric(13) PRIMARY KEY NOT NULL,
"USERNAME" varchar(100) NOT NULL,
"NAME" varchar(100) NOT NULL,
"TIMEINTERVAL" numeric(13),
"DESCRIPTION" varchar(150),
UNIQUE("USERNAME","NAME"))
EndCreateSchema
BeginDropSchema
drop table CCTV
EndDropSchema


BeginCreateSchema
create table DASHBOARD(
"ID" numeric(13) PRIMARY KEY NOT NULL,
"USERNAME" varchar(100) NOT NULL,
"NAME" varchar(100) NOT NULL,
"DESCRIPTION" varchar(150),
UNIQUE("USERNAME","NAME"))
EndCreateSchema

BeginIndex
CREATE INDEX Dashboard0_Indx on DASHBOARD("ID")
EndIndex

BeginDropSchema
drop table DASHBOARD
EndDropSchema


BeginCreateSchema
create table FAULTREPORTS_HOURLY(
"TTIME"BIGINT,
"CATEGORY" varchar(50),
"SEVERITY" INTEGER,
"SEVERITYCOUNT" INTEGER,
"HOURS" INTEGER,
"SOURCE" varchar(50))
EndCreateSchema

BeginIndex
CREATE INDEX FAULTREPORTS_HOURLY0_ndx on FAULTREPORTS_HOURLY("TTIME")
EndIndex

BeginDropSchema
drop table FAULTREPORTS_HOURLY
EndDropSchema


BeginCreateSchema
create table FAULTREPORTS_DAILY(
"TTIME"BIGINT,
"CATEGORY" varchar(50),
"SEVERITY" INTEGER,
"SEVERITYCOUNT" INTEGER,
"DAYS" INTEGER,
"MONTH" INTEGER,
"YEAR" INTEGER,
"SOURCE" varchar(50))
EndCreateSchema

BeginIndex
CREATE INDEX FAULTREPORTS_DAILY0_ndx on FAULTREPORTS_DAILY("TTIME")
EndIndex

BeginDropSchema
drop table FAULTREPORTS_DAILY
EndDropSchema


BeginCreateSchema
create table SendEmailEventAction(
"ID" INTEGER NOT NULL,
"EMAILPROPS" VARCHAR(1000) NOT NULL)
EndCreateSchema
BeginDropSchema
drop table SendEmailEventAction
EndDropSchema


BeginCreateSchema
create table SendEmailAlertAction(
"ID" INTEGER NOT NULL,
"EMAILPROPS" VARCHAR(1000) NOT NULL)
EndCreateSchema
BeginDropSchema
drop table SendEmailAlertAction
EndDropSchema


BeginCreateSchema
create table FilterCommandEventAction(
"ID" INTEGER NOT NULL,
"COMMANDPROPS" VARCHAR(1000) NOT NULL)
EndCreateSchema
BeginDropSchema
drop table FilterCommandEventAction
EndDropSchema


BeginCreateSchema
create table FilterCommandAlertAction(
"ID" INTEGER NOT NULL,
"COMMANDPROPS" VARCHAR(1000) NOT NULL)
EndCreateSchema
BeginDropSchema
drop table FilterCommandAlertAction
EndDropSchema


BeginIndex
alter table CCTVVIEWS add constraint CCTV_ID foreign key (ID) references CCTV(ID) ON DELETE CASCADE
alter table CCTVVIEWS add constraint DASHBOARD_ID foreign key (DASHBOARDID) references DASHBOARD(ID) ON DELETE CASCADE
EndIndex


BeginIndex
alter table DASHBOARDCOLUMNS add constraint DASHBOARDCOLUMN_ID foreign key (ID) references DASHBOARD(ID) ON DELETE CASCADE
EndIndex


BeginIndex
alter table WIDGETASSOCIATION add constraint WIDGETASSOCIATION_DASHBOARDID foreign key (DASHBOARDID) references DASHBOARD(ID) ON DELETE CASCADE
alter table WIDGETASSOCIATION add constraint WIDGETASSOCIATION_WIDGETID foreign key (WIDGETID) references WIDGET(ID)ON DELETE CASCADE
EndIndex


BeginIndex
alter table WIDGET add constraint WIDGET_DATASOURCEID foreign key (DATASOURCEID) references WIDGETDATASOURCE(DATASOURCEID)ON DELETE CASCADE
alter table WIDGET add constraint WIDGET_CRITERIAID foreign key (CRITERIAID) references WIDGETCRITERIA(CRITERIAID)ON DELETE CASCADE
EndIndex


BeginIndex
alter table WIDGETLEVEL add constraint WIDGETLEVEL_ID foreign key (ASSOCIATIONID) references WIDGETASSOCIATION(ASSOCIATIONID) ON DELETE CASCADE
EndIndex

#BeginIndex
#alter table POLLUSERPROPS drop constraint FK5DBA4B86D7D7502
#alter table POLLUSERPROPS add constraint FK5DBA4B86D7D7502 foreign key (ID) references PolledData (ID) on delete cascade
#EndIndex


BeginCreateSchema
create table STATSAGGREGATIONHOURLY(
"POLLID" Numeric(19) NOT NULL,
"INSTANCE" varchar(100) NOT NULL,
"TTIME" Numeric(19) NOT NULL,
"VAL" Numeric(19,4),
"MMINVALUE" Numeric(19,4),
"MMAXVALUE" Numeric(19,4),
"TINTERVAL"  Numeric(19),
PRIMARY KEY ("POLLID","INSTANCE","TTIME"))
EndCreateSchema

BeginIndex
CREATE INDEX STATSAGGREGATIONHOURLY0_ndx ON STATSAGGREGATIONHOURLY("POLLID")
CREATE INDEX STATSAGGREGATIONHOURLY2_ndx ON STATSAGGREGATIONHOURLY("TTIME")
EndIndex

BeginDropSchema
drop table STATSAGGREGATIONHOURLY
EndDropSchema


BeginCreateSchema
create table STATSAGGREGATIONDAILY(
"POLLID" Numeric(19) NOT NULL,
"INSTANCE" varchar(100) NOT NULL,
"TTIME" Numeric(19) NOT NULL,
"VAL" Numeric(19,4),
"MMINVALUE" Numeric(19,4),
"MMAXVALUE" Numeric(19,4),
"TINTERVAL"  Numeric(19),
PRIMARY KEY ("POLLID","INSTANCE","TTIME"))
EndCreateSchema

BeginIndex
CREATE INDEX STATSAGGREGATIONDAILY0_ndx ON STATSAGGREGATIONDAILY("POLLID")
CREATE INDEX STATSAGGREGATIONDAILY2_ndx ON STATSAGGREGATIONDAILY("TTIME")
EndIndex

BeginDropSchema
drop table STATSAGGREGATIONDAILY
EndDropSchema


BeginCreateSchema
create table smsprofiles(
profilename varchar(20) not null,
recipients varchar(250) not null)
EndCreateSchema
BeginDropSchema
drop table smsprofiles
EndDropSchema


BeginCreateSchema
create table smsserver_out(
id serial NOT NULL,
type varchar(1) NOT NULL,
recipient varchar(16) NOT NULL,
text text NOT NULL,
wap_url text NOT NULL,
wap_expiry_date varchar(50),
wap_signal varchar(1),
create_date varchar(50) NOT NULL,
originator varchar(16) NOT NULL,
encoding varchar(1) NOT NULL,
status_report integer NOT NULL,
flash_sms integer NOT NULL,
src_port integer NOT NULL,
dst_port integer NOT NULL,
sent_date varchar(50),
ref_no varchar(64),
priority integer NOT NULL,
status varchar(1) NOT NULL,
errors integer NOT NULL,
gateway_id varchar(64) NOT NULL,
PRIMARY KEY (id ))
EndCreateSchema

#BeginIndex
#SELECT setval('smsserver_out_id_seq', (SELECT max(id) FROM smsserver_out));
#EndIndex

BeginDropSchema
drop table smsserver_out
EndDropSchema


BeginIndex
CREATE INDEX FKB855B9E41BE4C5D on ManagedObject ("PARENTID")
alter table ManagedObject add constraint FKB855B9E41BE4C5D foreign key (PARENTID) references ManagedObject(MOID) ON DELETE CASCADE
EndIndex


#BeginIndex
#alter table ThresholdObjects alter column THRESHOLDVALUE TYPE Numeric(23)
#alter table ThresholdObjects alter column REARMVALUE TYPE Numeric(23)
#EndIndex


#BeginIndex
#alter table MapDB alter column MAPLINKRENDERER TYPE varchar(150)
#alter table MapDB alter column MAPSYMBOLRENDERER TYPE varchar(150)
#EndIndex

EndModules TopoDB-MapDB-EventDB-AlertDB-PollDB-PolicyDB-USERSTORAGEDB

#Do not edit the below lines. They are used for statistical data collection.

<STATS>
create table STATSDATA%(
POLLID Numeric(19) NOT NULL,
INSTANCE varchar(100) NOT NULL,
TTIME Numeric(19) NOT NULL,
VAL Numeric(13),
PRIMARY KEY (POLLID,INSTANCE,TTIME))
</STATS>

<STRING>
create table STRINGDATA%(
POLLID Numeric(19),
INSTANCE varchar(100),
TTIME Numeric(19),
VALUE varchar(200))
</STRING>


<DECIMAL>
create table DECIMALDATA%(
POLLID Numeric(19) NOT NULL,
INSTANCE varchar(100) NOT NULL,
TTIME Numeric(19) NOT NULL,
VAL Numeric(19,4),
PRIMARY KEY (POLLID,INSTANCE,TTIME))
</DECIMAL>
